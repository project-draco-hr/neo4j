{
  while (low <= high) {
    long mid=low + (high - low) / 2;
    int index=trackerCache.get(mid);
    if (index == -1) {
      return -1;
    }
    long midValue=dataCache.get(index);
    if (unsignedCompare(clearCollision(midValue),x,CompareType.EQ)) {
      if (isCollision(midValue)) {
        return findFromCollisions(mid,inputId,groupId);
      }
      return groupOf(index).id() == groupId ? index : -1;
    }
 else     if (unsignedCompare(clearCollision(midValue),x,CompareType.LT)) {
      low=mid + 1;
    }
 else {
      high=mid - 1;
    }
  }
  return -1;
}
