{
  SlaveTokenCreatorFixture slaveLabelTokenCreatorFixture=new SlaveTokenCreatorFixture(){
    @Override public AbstractTokenCreator build(    Master master,    RequestContextFactory requestContextFactory){
      return new SlaveLabelTokenCreator(master,requestContextFactory);
    }
    @Override public Response<Integer> callMasterMethod(    Master master,    RequestContext ctx,    String name){
      return master.createLabel(ctx,name);
    }
  }
;
  SlaveTokenCreatorFixture slaveRelationshipTypeTokenCreatorFixture=new SlaveTokenCreatorFixture(){
    @Override public AbstractTokenCreator build(    Master master,    RequestContextFactory requestContextFactory){
      return new SlaveRelationshipTypeCreator(master,requestContextFactory);
    }
    @Override public Response<Integer> callMasterMethod(    Master master,    RequestContext ctx,    String name){
      return master.createRelationshipType(ctx,name);
    }
  }
;
  SlaveTokenCreatorFixture slavePropertyTokenCreatorFixture=new SlaveTokenCreatorFixture(){
    @Override public AbstractTokenCreator build(    Master master,    RequestContextFactory requestContextFactory){
      return new SlavePropertyTokenCreator(master,requestContextFactory);
    }
    @Override public Response<Integer> callMasterMethod(    Master master,    RequestContext ctx,    String name){
      return master.createPropertyKey(ctx,name);
    }
  }
;
  return Arrays.asList(new Object[]{"SlaveLabelTokenCreator",slaveLabelTokenCreatorFixture},new Object[]{"SlaveRelationshipTypeTokenCreator",slaveRelationshipTypeTokenCreatorFixture},new Object[]{"SlavePropertyTokenCreator",slavePropertyTokenCreatorFixture});
}
