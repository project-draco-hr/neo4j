{
  FileSystemAbstraction fs=new DefaultFileSystemAbstraction();
  File tempFile=new File(testDir.directory(),"temp");
  StoreChannel rawChannel=fs.create(tempFile);
  Map<CountsKey,long[]> map=CountsStoreMapGenerator.simpleCountStoreMap(100000);
  CountsSnapshot countsSnapshot=new CountsSnapshot(1,map);
  CountsSnapshot recovered;
  try (FlushableChannel tempChannel=new PhysicalFlushableChannel(rawChannel)){
    serialize(tempChannel,countsSnapshot);
  }
   rawChannel=fs.open(tempFile,"r");
  ReadAheadChannel<StoreChannel> readAheadChannel=new ReadAheadChannel<>(rawChannel);
  recovered=deserialize(readAheadChannel);
  Assert.assertEquals(countsSnapshot.getTxId(),recovered.getTxId());
  for (  Map.Entry<CountsKey,long[]> pair : countsSnapshot.getMap().entrySet()) {
    long[] value=recovered.getMap().get(pair.getKey());
    Assert.assertNotNull(value);
    Assert.assertArrayEquals(value,pair.getValue());
  }
  for (  Map.Entry<CountsKey,long[]> pair : recovered.getMap().entrySet()) {
    long[] value=countsSnapshot.getMap().get(pair.getKey());
    Assert.assertNotNull(value);
    Assert.assertArrayEquals(value,pair.getValue());
  }
}
