{
  try {
    validatePageSize(pageSize);
    validateLeaseTime(leaseTimeInSeconds);
    String traverserId=actions.createPagedTraverser(startNode,input.readMap(body),pageSize,leaseTimeInSeconds);
    URI uri=new URI("node/" + startNode + "/paged/traverse/"+ returnType+ "/"+ traverserId);
    return output.created(new ListEntityRepresentation(actions.pagedTraverse(traverserId,returnType),uri.normalize()));
  }
 catch (  EvaluationException e) {
    return output.badRequest(e);
  }
catch (  BadInputException e) {
    return output.badRequest(e);
  }
catch (  NotFoundException e) {
    return output.notFound(e);
  }
catch (  URISyntaxException e) {
    return output.serverError(e);
  }
}
