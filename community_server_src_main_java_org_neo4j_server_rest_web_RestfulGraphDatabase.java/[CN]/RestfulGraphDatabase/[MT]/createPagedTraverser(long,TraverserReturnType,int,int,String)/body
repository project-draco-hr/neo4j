{
  try {
    validatePageSize(pageSize);
    validateLeaseTime(leaseTimeInSeconds);
    String traverserId=actions.createPagedTraverser(startNode,input.readMap(body),pageSize,leaseTimeInSeconds);
    String responseBody=output.format(actions.pagedTraverse(traverserId,returnType));
    URI uri=new URI(uriInfo.getBaseUri().toString() + "node/" + startNode+ "/paged/traverse/"+ returnType+ "/"+ traverserId);
    return Response.created(uri.normalize()).entity(responseBody).build();
  }
 catch (  EvaluationException e) {
    return output.badRequest(e);
  }
catch (  BadInputException e) {
    return output.badRequest(e);
  }
catch (  NotFoundException e) {
    return output.notFound(e);
  }
catch (  URISyntaxException e) {
    return output.serverError(e);
  }
}
