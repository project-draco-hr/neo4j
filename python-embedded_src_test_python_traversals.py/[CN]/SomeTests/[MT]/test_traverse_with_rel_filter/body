def test_traverse_with_rel_filter(self):
    source = self.create_data()
    traverser = (source / Any('related_to', message='graphy'))
    self.assertEqual(1, len(list(traverser)))
    for path in traverser:
        relationship = path.last_relationship
        self.assertEquals(relationship['message'], 'graphy')
        self.assertEquals(path.start['message'], 'hello')
        self.assertEquals(path.end['message'], 'world')
        nodes = list(path.nodes())
        self.assertEqual(2, len(nodes))
        self.assertEquals(nodes[0]['message'], 'hello')
        self.assertEquals(nodes[1]['message'], 'world')
        rels = list(path.relationships())
        self.assertEqual(1, len(rels))
        self.assertEquals(rels[0]['message'], 'graphy')
    for node in traverser.nodes():
        self.assertEquals(node['message'], 'world')
    for rel in traverser.relationships():
        self.assertEquals(rel['message'], 'graphy')
