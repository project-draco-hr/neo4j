{
  ExecutorService executor=newCachedThreadPool();
  final CountDownLatch startSignal=new CountDownLatch(1);
  int threads=getRuntime().availableProcessors();
  final List<Throwable> errors=Collections.synchronizedList(new ArrayList<Throwable>());
  for (int i=0; i < threads; i++) {
    executor.submit(new Runnable(){
      @Override public void run(){
        awaitStartSignalAndRandomTimeLonger(startSignal);
        try (Transaction transaction=db.beginTx()){
          assertEquals(relCount,count(node.getRelationships()));
        }
 catch (        Throwable e) {
          errors.add(e);
        }
      }
    }
);
  }
  startSignal.countDown();
  executor.shutdown();
  executor.awaitTermination(10,SECONDS);
  if (!errors.isEmpty()) {
    Exception exception=new Exception(format("Exception(s) after %s iterations with %s threads",iterations,threads));
    for (    Throwable error : errors) {
      exception.addSuppressed(error);
    }
    throw exception;
  }
}
