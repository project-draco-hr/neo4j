{
  try {
    IdGeneratorImpl.createGenerator(fs,idGeneratorFile(),0,false);
    IdGenerator idGenerator=new IdGeneratorImpl(fs,idGeneratorFile(),3,1000,false,0);
    for (long i=0; i < 7; i++) {
      assertEquals(i,idGenerator.nextId());
    }
    idGenerator.freeId(1);
    idGenerator.freeId(3);
    idGenerator.freeId(5);
    assertEquals(7l,idGenerator.nextId());
    idGenerator.freeId(6);
    closeIdGenerator(idGenerator);
    idGenerator=new IdGeneratorImpl(fs,idGeneratorFile(),5,1000,false,0);
    idGenerator.freeId(2);
    idGenerator.freeId(4);
    assertEquals(1l,idGenerator.nextId());
    idGenerator.freeId(1);
    assertEquals(3l,idGenerator.nextId());
    idGenerator.freeId(3);
    assertEquals(5l,idGenerator.nextId());
    idGenerator.freeId(5);
    assertEquals(6l,idGenerator.nextId());
    idGenerator.freeId(6);
    assertEquals(8l,idGenerator.nextId());
    idGenerator.freeId(8);
    assertEquals(9l,idGenerator.nextId());
    idGenerator.freeId(9);
    closeIdGenerator(idGenerator);
    idGenerator=new IdGeneratorImpl(fs,idGeneratorFile(),3,1000,false,0);
    assertEquals(2l,idGenerator.nextId());
    assertEquals(4l,idGenerator.nextId());
    assertEquals(1l,idGenerator.nextId());
    assertEquals(3l,idGenerator.nextId());
    assertEquals(5l,idGenerator.nextId());
    assertEquals(6l,idGenerator.nextId());
    assertEquals(8l,idGenerator.nextId());
    assertEquals(9l,idGenerator.nextId());
    assertEquals(10l,idGenerator.nextId());
    assertEquals(11l,idGenerator.nextId());
    closeIdGenerator(idGenerator);
  }
  finally {
    File file=idGeneratorFile();
    if (file.exists()) {
      assertTrue(file.delete());
    }
  }
}
