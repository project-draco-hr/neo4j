{
  final GraphDatabaseAPI db=database.getGraphDatabaseAPI();
  Transaction tx=db.beginTx();
  final Node first=db.createNode();
  final Relationship theOneAfterTheGap=first.createRelationshipTo(db.createNode(),DynamicRelationshipType.withName("AC"));
  for (int i=0; i < RelationshipGrabSize; i++) {
    first.createRelationshipTo(db.createNode(),DynamicRelationshipType.withName("AC"));
  }
  tx.success();
  tx.finish();
  db.getNodeManager().clearCache();
  Runnable writer=new Runnable(){
    @Override public void run(){
      Transaction tx=db.beginTx();
      theOneAfterTheGap.delete();
      tx.success();
      tx.finish();
    }
  }
;
  Runnable reader=new Runnable(){
    @Override public void run(){
      waitForPrepare();
      first.getRelationships().iterator().next();
      readDone();
    }
  }
;
  Thread writerThread=new Thread(writer);
  Thread readerThread=new Thread(reader);
  readerThread.start();
  writerThread.start();
  readerThread.join();
  writerThread.join();
  int count=0;
  for (  Relationship rel : first.getRelationships()) {
    count++;
  }
  assertEquals("Should have read relationships created minus one",RelationshipGrabSize - 1,count);
}
