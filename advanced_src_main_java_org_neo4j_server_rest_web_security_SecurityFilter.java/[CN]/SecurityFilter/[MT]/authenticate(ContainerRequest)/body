{
  String authenticatedEnabledProperty=(String)NeoServer.server().configuration().getProperty(REST_ENABLE_AUTHENTICATION);
  if (authenticatedEnabledProperty == null || authenticatedEnabledProperty.toString().toLowerCase().equals("false")) {
    return new User("unauthenticated-user","default");
  }
  String authentication=request.getHeaderValue(ContainerRequest.AUTHORIZATION);
  if (authentication == null) {
    throw new MappableContainerException(new AuthenticationException("Authorization required",REALM));
  }
  if (!authentication.startsWith("Basic ")) {
    throw new WebApplicationException(400);
  }
  authentication=authentication.substring("Basic ".length());
  String[] values=new String(Base64.base64Decode(authentication)).split(":");
  if (values.length < 2) {
    throw new WebApplicationException(400);
  }
  String username=values[0];
  String password=values[1];
  if ((username == null) || (password == null)) {
    throw new WebApplicationException(400);
  }
  User user=null;
  String expectedUsername=(String)(NeoServer.server().configuration().containsKey(REST_USERNAME) ? NeoServer.server().configuration().getProperty(REST_USERNAME) : "");
  String expectedPassword=(String)(NeoServer.server().configuration().containsKey(REST_PASSWORD) ? NeoServer.server().configuration().getProperty(REST_PASSWORD) : "");
  if (username.equals(expectedUsername) && password.equals(expectedPassword)) {
    user=new User(expectedUsername,"default");
  }
 else {
    throw new MappableContainerException(new AuthenticationException("Invalid username or password",REALM));
  }
  return user;
}
