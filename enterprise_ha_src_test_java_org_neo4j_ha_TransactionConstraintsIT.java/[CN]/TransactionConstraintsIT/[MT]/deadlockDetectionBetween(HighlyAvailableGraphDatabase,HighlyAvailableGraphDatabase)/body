{
  OtherThreadExecutor<HighlyAvailableGraphDatabase> thread2=new OtherThreadExecutor<HighlyAvailableGraphDatabase>("T2",slave2);
  Transaction tx1=slave1.beginTx();
  Transaction tx2=thread2.execute(new BeginTx());
  tx1.acquireReadLock(slave1.getReferenceNode());
  thread2.execute(new AcquireReadLock(tx2,slave2.getReferenceNode()));
  Future<Lock> writeLockFuture=thread2.executeDontWait(new AcquireWriteLock(tx2,slave2.getReferenceNode()));
  thread2.waitUntilThreadState(Thread.State.TIMED_WAITING,Thread.State.WAITING);
  try {
    tx1.acquireWriteLock(slave1.getReferenceNode());
    fail("Deadlock exception should have been thrown");
  }
 catch (  DeadlockDetectedException e) {
  }
 finally {
    tx1.finish();
  }
  assertNotNull(writeLockFuture.get());
  thread2.execute(new FinishTx(tx2,true));
}
