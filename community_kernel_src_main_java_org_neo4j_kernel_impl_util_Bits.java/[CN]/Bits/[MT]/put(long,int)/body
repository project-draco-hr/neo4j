{
  int lowLongIndex=writePosition >> 6;
  int lowBitInLong=writePosition % 64;
  int lowBitsAvailable=64 - lowBitInLong;
  long lowValueMask=rightOverflowMask(Math.min(lowBitsAvailable,steps));
  longs[lowLongIndex]|=(((value) & lowValueMask) << lowBitInLong);
  if (steps > lowBitsAvailable) {
    long highValueMask=rightOverflowMask(steps - lowBitsAvailable);
    longs[lowLongIndex + 1]|=((value) >>> lowBitsAvailable) & highValueMask;
  }
  writePosition+=steps;
  return this;
}
