{
  int lowLongIndex=readPosition >> 6;
  int lowBitInLong=readPosition % 64;
  int lowBitsAvailable=64 - lowBitInLong;
  long lowLongMask=rightOverflowMask(Math.min(lowBitsAvailable,steps)) << lowBitInLong;
  long lowValue=longs[lowLongIndex] & lowLongMask;
  long result=lowValue >>> lowBitInLong;
  if (steps > lowBitsAvailable) {
    long highLongMask=rightOverflowMask(steps - lowBitsAvailable);
    result|=((longs[lowLongIndex + 1] & highLongMask) << lowBitsAvailable);
  }
  readPosition+=steps;
  return result;
}
