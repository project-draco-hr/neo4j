{
  LockWorker t1=new LockWorker("T1",lm);
  LockWorker t2=new LockWorker("T2",lm);
  LockWorker t3=new LockWorker("T3",lm);
  LockWorker t4=new LockWorker("T4",lm);
  ResourceObject r1=newResourceObject("R1");
  try {
    t1.getReadLock(r1,true);
    t2.getReadLock(r1,true);
    t3.getReadLock(r1,true);
    Future<Void> t4Wait=t4.getWriteLock(r1,false);
    t3.releaseReadLock(r1);
    t2.releaseReadLock(r1);
    assertTrue(!t4Wait.isDone());
    t1.releaseReadLock(r1);
    t4.awaitFuture(t4Wait);
    t4.getReadLock(r1,true);
    t4.getReadLock(r1,true);
    Future<Void> t1Wait=t1.getReadLock(r1,false);
    t4.getReadLock(r1,true);
    t4.releaseReadLock(r1);
    t4.getWriteLock(r1,true);
    t4.releaseWriteLock(r1);
    assertTrue(!t1Wait.isDone());
    t4.releaseWriteLock(r1);
    t1.awaitFuture(t1Wait);
    t4.releaseReadLock(r1);
    t4Wait=t4.getWriteLock(r1,false);
    t1.releaseReadLock(r1);
    t4.awaitFuture(t4Wait);
    t4.releaseReadLock(r1);
    t4.releaseWriteLock(r1);
    t4.getWriteLock(r1,true);
    t1Wait=t1.getReadLock(r1,false);
    Future<Void> t2Wait=t2.getReadLock(r1,false);
    Future<Void> t3Wait=t3.getReadLock(r1,false);
    t4.getReadLock(r1,true);
    t4.releaseWriteLock(r1);
    t1.awaitFuture(t1Wait);
    t2.awaitFuture(t2Wait);
    t3.awaitFuture(t3Wait);
    t1Wait=t1.getWriteLock(r1,false);
    t2.releaseReadLock(r1);
    t4.releaseReadLock(r1);
    t3.releaseReadLock(r1);
    t1.awaitFuture(t1Wait);
    t1.releaseWriteLock(r1);
    t2.getReadLock(r1,true);
    t1.releaseReadLock(r1);
    t2.getWriteLock(r1,true);
    t2.releaseWriteLock(r1);
    t2.releaseReadLock(r1);
  }
 catch (  Exception e) {
    File file=new LockWorkFailureDump(getClass()).dumpState(lm,new LockWorker[]{t1,t2,t3,t4});
    throw new RuntimeException("Failed, forensics information dumped to " + file.getAbsolutePath(),e);
  }
}
