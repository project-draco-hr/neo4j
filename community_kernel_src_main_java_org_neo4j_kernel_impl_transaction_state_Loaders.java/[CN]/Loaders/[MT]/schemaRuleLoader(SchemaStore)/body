{
  return new Loader<Long,Collection<DynamicRecord>,SchemaRule>(){
    @Override public Collection<DynamicRecord> newUnused(    Long key,    SchemaRule additionalData){
      return store.allocateFrom(additionalData);
    }
    @Override public Collection<DynamicRecord> load(    Long key,    SchemaRule additionalData){
      return store.getRecords(key);
    }
    @Override public void ensureHeavy(    Collection<DynamicRecord> dynamicRecords){
      for (      DynamicRecord record : dynamicRecords) {
        store.ensureHeavy(record);
      }
    }
    @Override public Collection<DynamicRecord> clone(    Collection<DynamicRecord> dynamicRecords){
      Collection<DynamicRecord> list=new ArrayList<>(dynamicRecords.size());
      for (      DynamicRecord record : dynamicRecords) {
        list.add(record.clone());
      }
      return list;
    }
  }
;
}
