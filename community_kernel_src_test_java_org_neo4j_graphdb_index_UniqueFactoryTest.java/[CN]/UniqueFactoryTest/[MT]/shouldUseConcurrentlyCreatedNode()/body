{
  GraphDatabaseService graphdb=mock(GraphDatabaseService.class);
  @SuppressWarnings("unchecked") Index<Node> index=mock(Index.class);
  Transaction tx=mock(Transaction.class);
  when(graphdb.beginTx()).thenReturn(tx);
  when(index.getGraphDatabase()).thenReturn(graphdb);
  @SuppressWarnings("unchecked") IndexHits<Node> getHits=mock(IndexHits.class);
  when(index.get("key1","value1")).thenReturn(getHits);
  Node createdNode=mock(Node.class);
  when(graphdb.createNode()).thenReturn(createdNode);
  Node concurrentNode=mock(Node.class);
  when(index.putIfAbsent(createdNode,"key1","value1")).thenReturn(concurrentNode);
  UniqueFactory.UniqueNodeFactory unique=new UniqueFactory.UniqueNodeFactory(index){
    @Override protected void initialize(    Node created,    Map<String,Object> properties){
      fail("we did not create the node, so it should not be initialized");
    }
  }
;
  UniqueEntity<Node> node=unique.getOrCreateWithOutcome("key1","value1");
  assertSame(node.entity(),concurrentNode);
  assertFalse(node.wasCreated());
  verify(index).get("key1","value1");
  verify(index).putIfAbsent(createdNode,"key1","value1");
  verify(graphdb,times(1)).createNode();
  verify(tx).success();
}
