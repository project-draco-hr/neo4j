{
  RelationshipType[] types=new RelationshipType[typeNames.length];
  for (int i=0; i < types.length; i++) {
    types[i]=DynamicRelationshipType.withName(typeNames[i]);
  }
  Transaction tx=graphdb.graph.beginTx();
  try {
    final Node node=graphdb.graph.getNodeById(nodeId);
    List<RelationshipRepresentation> result=new LinkedList<RelationshipRepresentation>();
    if (types.length > 1) {
      for (      Relationship rel : node.getRelationships(types)) {
switch (direction) {
case in:
          if (!rel.getEndNode().equals(node))           continue;
        break;
case out:
      if (!rel.getStartNode().equals(node))       continue;
    break;
}
result.add(new RelationshipRepresentation(baseUri,rel));
}
}
 else {
Iterable<Relationship> relationships;
if (types.length == 0) {
relationships=node.getRelationships(direction.internal);
}
 else {
relationships=node.getRelationships(types[0],direction.internal);
}
for (Relationship rel : relationships) {
result.add(new RelationshipRepresentation(baseUri,rel));
}
}
tx.success();
return result;
}
  finally {
tx.finish();
}
}
