{
  Map<CountsKey,long[]> map=new HashMap<>();
  map.put(nodeKey(1),new long[]{1L});
  map.put(nodeKey(2),new long[]{1L});
  map.put(nodeKey(3),new long[]{1L});
  map.put(nodeKey(4),new long[]{1L});
  Map<CountsKey,long[]> updateByMap=new HashMap<>();
  updateByMap.put(nodeKey(1),new long[]{4L});
  updateByMap.put(nodeKey(2),new long[]{8L});
  Map<CountsKey,long[]> updateByOtherMap=new HashMap<>();
  updateByOtherMap.put(nodeKey(3),new long[]{100L});
  updateByOtherMap.put(nodeKey(4),new long[]{96L});
  map=updateMapByDiff(map,updateByMap,0);
  map=updateMapByDiff(map,updateByOtherMap,0);
  Assert.assertSame(5L,map.get(nodeKey(1))[0]);
  Assert.assertSame(9L,map.get(nodeKey(2))[0]);
  Assert.assertSame(101L,map.get(nodeKey(3))[0]);
  Assert.assertSame(97L,map.get(nodeKey(4))[0]);
}
