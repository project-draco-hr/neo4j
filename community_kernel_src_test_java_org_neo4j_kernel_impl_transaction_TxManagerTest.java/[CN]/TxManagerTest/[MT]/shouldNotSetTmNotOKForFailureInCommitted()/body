{
  File directory=TargetDirectory.forTest(fs.get(),getClass()).cleanDirectory("dir");
  TransactionStateFactory stateFactory=new TransactionStateFactory(logging);
  TxIdGenerator txIdGenerator=mock(TxIdGenerator.class);
  doThrow(RuntimeException.class).when(txIdGenerator).committed(any(XaDataSource.class),anyInt(),anyLong(),any(Integer.class));
  stateFactory.setDependencies(mock(LockManager.class),mock(NodeManager.class),mock(RemoteTxHook.class),txIdGenerator);
  XaDataSourceManager xaDataSourceManager=life.add(new XaDataSourceManager(DEV_NULL));
  KernelHealth kernelHealth=new KernelHealth(panicGenerator,logging);
  AbstractTransactionManager txManager=life.add(new TxManager(directory,xaDataSourceManager,logging.getMessagesLog(TxManager.class),fs.get(),stateFactory,xidFactory,kernelHealth,monitors));
  XaFactory xaFactory=new XaFactory(new Config(),txIdGenerator,txManager,fs.get(),monitors,logging,ALWAYS_VALID,NO_PRUNING,kernelHealth);
  DummyXaDataSource dataSource=new DummyXaDataSource(UTF8.encode("0xDDDDDE"),"dummy",xaFactory,stateFactory,new File(directory,"log"));
  xaDataSourceManager.registerDataSource(dataSource);
  life.start();
  txManager.doRecovery();
  txManager.begin();
  dataSource.getXaConnection().enlistResource(txManager.getTransaction());
  txManager.commit();
  assertThat(logging.toString(),containsString("Commit notification failed"));
  doNothing().when(txIdGenerator).committed(any(XaDataSource.class),anyInt(),anyLong(),any(Integer.class));
  txManager.begin();
  txManager.rollback();
  kernelHealth.assertHealthy(AssertionError.class);
}
