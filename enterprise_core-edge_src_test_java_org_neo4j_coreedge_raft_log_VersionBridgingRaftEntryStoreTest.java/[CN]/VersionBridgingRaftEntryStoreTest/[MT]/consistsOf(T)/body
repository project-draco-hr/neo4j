{
  Matcher<Iterable<T>> hasItems=hasItems(expected);
  return new TypeSafeMatcher<Iterable<T>>(){
    @Override protected boolean matchesSafely(    Iterable<T> actual){
      return expected.length == Iterables.count(actual) && hasItems.matches(actual);
    }
    @Override public void describeTo(    Description description){
      description.appendText("A collection of ");
      description.appendValue(expected.length);
      description.appendText(" items, specifically: ");
      description.appendValue(asList(expected));
    }
  }
;
}
