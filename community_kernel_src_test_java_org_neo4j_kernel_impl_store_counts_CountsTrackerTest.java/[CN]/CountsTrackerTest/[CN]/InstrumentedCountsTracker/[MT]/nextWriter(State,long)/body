{
  final CountsStoreWriter writer=(CountsStoreWriter)super.nextWriter(state,lastCommittedTxId);
  return new CountsStore.Writer<CountsKey,Register.DoubleLongRegister>(){
    private final Register.DoubleLongRegister valueRegister=Registers.newDoubleLongRegister();
    @Override public SortedKeyValueStore<CountsKey,Register.DoubleLongRegister> openForReading() throws IOException {
      barrier.reached();
      return writer.openForReading();
    }
    @Override public void close() throws IOException {
      writer.close();
    }
    @Override public void visit(    CountsKey key){
      writer.valueRegister().write(valueRegister.readFirst(),valueRegister.readSecond());
      writer.visit(key);
    }
    @Override public Register.DoubleLongRegister valueRegister(){
      return valueRegister;
    }
  }
;
}
