{
  if (obj == null) {
    packNull();
  }
 else   if (obj instanceof Boolean) {
    pack((boolean)obj);
  }
 else   if (obj instanceof Byte || obj instanceof Short || obj instanceof Integer|| obj instanceof Long) {
    pack(((Number)obj).longValue());
  }
 else   if (obj instanceof Float || obj instanceof Double) {
    pack(((Number)obj).doubleValue());
  }
 else   if (obj instanceof String) {
    pack((String)obj);
  }
 else   if (obj instanceof Map) {
    Map<Object,Object> map=(Map<Object,Object>)obj;
    packMapHeader(map.size());
    for (    Map.Entry<?,?> entry : map.entrySet()) {
      pack(entry.getKey().toString());
      pack(entry.getValue());
    }
  }
 else   if (obj instanceof Collection) {
    Collection list=(Collection)obj;
    packListHeader(list.size());
    for (    Object item : list) {
      pack(item);
    }
  }
 else   if (obj instanceof byte[]) {
    throw new UnsupportedOperationException("Binary values cannot be packed.");
  }
 else   if (obj instanceof short[]) {
    short[] array=(short[])obj;
    packListHeader(array.length);
    for (    short item : array) {
      pack(item);
    }
  }
 else   if (obj instanceof int[]) {
    int[] array=(int[])obj;
    packListHeader(array.length);
    for (    int item : array) {
      pack(item);
    }
  }
 else   if (obj instanceof long[]) {
    long[] array=(long[])obj;
    packListHeader(array.length);
    for (    long item : array) {
      pack(item);
    }
  }
 else   if (obj instanceof float[]) {
    float[] array=(float[])obj;
    packListHeader(array.length);
    for (    float item : array) {
      pack(item);
    }
  }
 else   if (obj instanceof double[]) {
    double[] array=(double[])obj;
    packListHeader(array.length);
    for (    double item : array) {
      pack(item);
    }
  }
 else   if (obj instanceof boolean[]) {
    boolean[] array=(boolean[])obj;
    packListHeader(array.length);
    for (    boolean item : array) {
      pack(item);
    }
  }
 else   if (obj.getClass().isArray()) {
    Object[] array=(Object[])obj;
    packListHeader(array.length);
    for (    Object item : array) {
      pack(item);
    }
  }
 else   if (obj instanceof Node) {
    ValueNode.pack(this,(Node)obj);
  }
 else   if (obj instanceof Relationship) {
    ValueRelationship.pack(this,(Relationship)obj);
  }
 else   if (obj instanceof Path) {
    pathPacker.pack(this,(Path)obj);
  }
 else {
    throw new BoltIOException(Status.General.UnknownFailure,"Unpackable value " + obj + " of type "+ obj.getClass().getName());
  }
}
