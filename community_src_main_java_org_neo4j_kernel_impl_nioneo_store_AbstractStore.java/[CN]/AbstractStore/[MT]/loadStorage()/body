{
  try {
    long fileSize=getFileChannel().size();
    String expectedVersion=getTypeAndVersionDescriptor();
    byte version[]=new byte[expectedVersion.getBytes().length];
    ByteBuffer buffer=ByteBuffer.wrap(version);
    if (fileSize >= version.length) {
      getFileChannel().position(fileSize - version.length);
    }
 else     if (!isReadOnly()) {
      setStoreNotOk();
    }
    getFileChannel().read(buffer);
    if (!expectedVersion.equals(new String(version)) && !isReadOnly()) {
      if (!versionFound(new String(version))) {
        setStoreNotOk();
      }
    }
    if (getRecordSize() != 0 && (fileSize - version.length) % getRecordSize() != 0 && !isReadOnly()) {
      setStoreNotOk();
    }
    if (getStoreOk() && !isReadOnly()) {
      getFileChannel().truncate(fileSize - version.length);
    }
  }
 catch (  IOException e) {
    throw new UnderlyingStorageException("Unable to load store " + getStorageFileName(),e);
  }
  try {
    if (!isReadOnly()) {
      openIdGenerator();
    }
 else {
      openReadOnlyIdGenerator(getRecordSize());
    }
  }
 catch (  InvalidIdGeneratorException e) {
    setStoreNotOk();
  }
  setWindowPool(new PersistenceWindowPool(getStorageFileName(),getRecordSize(),getFileChannel(),getMappedMem(),getIfMemoryMapped(),isReadOnly()));
}
