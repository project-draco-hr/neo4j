{
  StatementContext context=ctxProvider.getCtxForReading();
  String propertyKey=single(index.getPropertyKeys());
  try {
    long labelId=context.labelGetForName(index.getLabel().name());
    long propertyKeyId=context.propertyKeyGetForName(propertyKey);
    org.neo4j.kernel.api.index.InternalIndexState indexState=context.indexGetState(context.indexesGetForLabelAndPropertyKey(labelId,propertyKeyId));
switch (indexState) {
case POPULATING:
      return POPULATING;
case ONLINE:
    return ONLINE;
case FAILED:
  return FAILED;
default :
throw new IllegalArgumentException(String.format("Illegal index state %s",indexState));
}
}
 catch (LabelNotFoundKernelException e) {
throw new NotFoundException(format("Label %s not found",index.getLabel().name()));
}
catch (PropertyKeyNotFoundException e) {
throw new NotFoundException(format("Property key %s not found",propertyKey));
}
catch (SchemaRuleNotFoundException e) {
throw new NotFoundException(format("No index for label %s on property %s",index.getLabel().name(),propertyKey));
}
catch (IndexNotFoundKernelException e) {
throw new NotFoundException(format("No index for label %s on property %s",index.getLabel().name(),propertyKey),e);
}
 finally {
context.close();
}
}
