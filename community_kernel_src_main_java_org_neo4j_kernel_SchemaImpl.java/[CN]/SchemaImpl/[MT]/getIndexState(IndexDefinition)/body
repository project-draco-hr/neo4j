{
  assertInTransaction();
  StatementOperationParts context=ctxProvider.getCtxForReading();
  String propertyKey=single(index.getPropertyKeys());
  StatementState state=ctxProvider.statementForReading();
  SchemaReadOperations schemaReading=context.schemaReadOperations();
  try {
    long labelId=context.keyReadOperations().labelGetForName(state,index.getLabel().name());
    long propertyKeyId=context.keyReadOperations().propertyKeyGetForName(state,propertyKey);
    if (labelId == KeyReadOperations.NO_SUCH_LABEL) {
      throw new NotFoundException(format("Label %s not found",index.getLabel().name()));
    }
    if (propertyKeyId == KeyReadOperations.NO_SUCH_PROPERTY) {
      throw new NotFoundException(format("Property key %s not found",propertyKey));
    }
    IndexDescriptor descriptor=schemaReading.indexesGetForLabelAndPropertyKey(state,labelId,propertyKeyId);
    InternalIndexState indexState=schemaReading.indexGetState(state,descriptor);
switch (indexState) {
case POPULATING:
      return POPULATING;
case ONLINE:
    return ONLINE;
case FAILED:
  return FAILED;
default :
throw new IllegalArgumentException(String.format("Illegal index state %s",indexState));
}
}
 catch (SchemaRuleNotFoundException|IndexNotFoundKernelException e) {
throw new NotFoundException(format("No index for label %s on property %s",index.getLabel().name(),propertyKey));
}
 finally {
state.close();
}
}
