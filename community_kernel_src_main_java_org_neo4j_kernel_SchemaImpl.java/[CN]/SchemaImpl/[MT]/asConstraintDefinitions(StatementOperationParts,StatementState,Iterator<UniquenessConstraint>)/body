{
  Iterator<ConstraintDefinition> definitions=map(new Function<UniquenessConstraint,ConstraintDefinition>(){
    @Override public ConstraintDefinition apply(    UniquenessConstraint constraint){
      long labelId=constraint.label();
      try {
        Label label=label(context.keyReadOperations().labelGetName(state,labelId));
        return new PropertyUniqueConstraintDefinition(actions,label,context.keyReadOperations().propertyKeyGetName(state,constraint.propertyKeyId()));
      }
 catch (      PropertyKeyIdNotFoundException e) {
        throw new ThisShouldNotHappenError("Mattias","Couldn't find property name for " + constraint.propertyKeyId(),e);
      }
catch (      LabelNotFoundKernelException e) {
        throw new ThisShouldNotHappenError("Stefan","Couldn't find label name for label id " + labelId,e);
      }
    }
  }
,constraints);
  return asCollection(definitions);
}
