{
  int longestKey=this.findLongestKey(thing);
  for (  String key : thing.getPropertyKeys()) {
    boolean matches=filterMap.isEmpty();
    Object value=thing.getProperty(key);
    for (    Map.Entry<String,Object> filter : filterMap.entrySet()) {
      if (matches(newPattern(filter.getKey(),caseInsensitiveFilters),key,caseInsensitiveFilters,looseFilters)) {
        String filterValue=filter.getValue() != null ? filter.getValue().toString() : null;
        if (matches(newPattern(filterValue,caseInsensitiveFilters),value.toString(),caseInsensitiveFilters,looseFilters)) {
          matches=true;
          break;
        }
      }
    }
    if (!matches) {
      continue;
    }
    out.print("*" + key);
    if (displayValues) {
      this.printMany(out," ",longestKey - key.length() + 1);
      out.print("=[" + value + "]");
      if (verbose) {
        out.print(" (" + this.getNiceType(value) + ")");
      }
    }
    out.println("");
  }
}
