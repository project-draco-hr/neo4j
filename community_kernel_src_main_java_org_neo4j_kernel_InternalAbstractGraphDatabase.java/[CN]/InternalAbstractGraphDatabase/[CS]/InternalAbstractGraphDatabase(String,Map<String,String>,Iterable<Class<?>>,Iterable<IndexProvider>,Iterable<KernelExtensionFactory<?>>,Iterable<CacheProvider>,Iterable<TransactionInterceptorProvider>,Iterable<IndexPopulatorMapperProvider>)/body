{
  this.params=params;
  this.indexPopulatorMapper=single(indexPopulatorMappers);
  dependencyResolver=new DependencyResolverImpl();
  params.put(Configuration.store_dir.name(),storeDir);
  this.cacheProviders=mapCacheProviders(cacheProviders);
  config=new Config(params,getSettingsClasses(settingsClasses,kernelExtensions,cacheProviders));
  Iterable<KernelExtensionFactory<?>> indexProviderKernelExtensions=Iterables.map(new Function<IndexProvider,KernelExtensionFactory<?>>(){
    @Override public KernelExtensionFactory<?> apply(    IndexProvider from){
      return new IndexProviderKernelExtensionFactory(from);
    }
  }
,indexProviders);
  kernelExtensions=Iterables.concat(kernelExtensions,indexProviderKernelExtensions);
  this.kernelExtensions=new KernelExtensions(kernelExtensions,config,dependencyResolver);
  this.transactionInterceptorProviders=new TransactionInterceptorProviders(transactionInterceptorProviders,dependencyResolver);
  this.storeDir=config.get(Configuration.store_dir);
}
