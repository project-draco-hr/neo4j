{
  return new RelationshipProxy.RelationshipLookups(){
    @Override public GraphDatabaseService getGraphDatabaseService(){
      return InternalAbstractGraphDatabase.this;
    }
    @Override public Node newNodeProxy(    long nodeId){
      return nodeManager.newNodeProxyById(nodeId);
    }
    @Override public RelationshipData getRelationshipData(    long relationshipId){
      try (Statement statement=threadToTransactionBridge.instance()){
        RelationshipData data=new RelationshipData();
        statement.readOperations().relationshipVisit(relationshipId,data);
        return data;
      }
 catch (      EntityNotFoundException e) {
        throw new NotFoundException(e);
      }
    }
    @Override public RelationshipType getRelationshipTypeById(    int type){
      try {
        return relationshipTypeTokenHolder.getTokenById(type);
      }
 catch (      TokenNotFoundException e) {
        throw new NotFoundException(e);
      }
    }
  }
;
}
