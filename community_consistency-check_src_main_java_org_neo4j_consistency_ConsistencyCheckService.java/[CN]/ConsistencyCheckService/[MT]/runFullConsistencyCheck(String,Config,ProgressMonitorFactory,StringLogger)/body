{
  DefaultFileSystemAbstraction fileSystem=new DefaultFileSystemAbstraction();
  Monitors monitors=new Monitors();
  tuningConfiguration=configForStoreDir(tuningConfiguration,new File(storeDir));
  Neo4jJobScheduler jobScheduler=new Neo4jJobScheduler();
  PageCacheFactory pageCacheFactory=new StandardPageCacheFactory();
  PageSwapperFactory swapperFactory=new SingleFilePageSwapperFactory(fileSystem);
  LifecycledPageCache pageCache=new LifecycledPageCache(pageCacheFactory,swapperFactory,jobScheduler,tuningConfiguration,monitors.newMonitor(PageCacheMonitor.class));
  StoreFactory factory=new StoreFactory(tuningConfiguration,new DefaultIdGeneratorFactory(),pageCache,fileSystem,logger,monitors);
  jobScheduler.init();
  pageCache.start();
  ConsistencySummaryStatistics summary;
  File reportFile=chooseReportPath(tuningConfiguration);
  StringLogger report=StringLogger.lazyLogger(reportFile);
  NeoStore neoStore=factory.newNeoStore(false);
  try {
    neoStore.makeStoreOk();
    StoreAccess store=new StoreAccess(neoStore);
    LabelScanStore labelScanStore=null;
    try {
      labelScanStore=new LuceneLabelScanStoreBuilder(storeDir,store.getRawNeoStore(),fileSystem,logger).build();
      SchemaIndexProvider indexes=new LuceneSchemaIndexProvider(DirectoryFactory.PERSISTENT,tuningConfiguration);
      DirectStoreAccess stores=new DirectStoreAccess(store,labelScanStore,indexes);
      summary=new FullCheck(tuningConfiguration,progressFactory).execute(stores,StringLogger.tee(logger,report));
    }
  finally {
      try {
        if (null != labelScanStore) {
          labelScanStore.shutdown();
        }
      }
 catch (      IOException e) {
        logger.error("Faiure during shutdown of label scan store",e);
      }
    }
  }
  finally {
    report.close();
    neoStore.close();
    pageCache.stop();
    jobScheduler.shutdown();
  }
  if (!summary.isConsistent()) {
    logger.logMessage(String.format("See '%s' for a detailed consistency report.",reportFile.getPath()));
    return Result.FAILURE;
  }
  return Result.SUCCESS;
}
