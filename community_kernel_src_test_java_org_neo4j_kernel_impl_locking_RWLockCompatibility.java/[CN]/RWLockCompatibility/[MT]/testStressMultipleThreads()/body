{
  long r1=1L;
  StressThread[] stressThreads=new StressThread[100];
  CountDownLatch startSignal=new CountDownLatch(1);
  for (int i=0; i < 100; i++) {
    stressThreads[i]=new StressThread("Thread" + i,100,9,0.50f,r1,startSignal);
  }
  for (int i=0; i < 100; i++) {
    stressThreads[i].start();
  }
  startSignal.countDown();
  long end=currentTimeMillis() + SECONDS.toMillis(2000);
  boolean anyAlive;
  while ((anyAlive=anyAliveAndAllWell(stressThreads)) && currentTimeMillis() < end) {
    sleepALittle();
  }
  for (  StressThread stressThread : stressThreads) {
    if (stressThread.error != null)     throw stressThread.error;
 else     if (stressThread.isAlive()) {
      for (      StackTraceElement stackTraceElement : stressThread.getStackTrace()) {
        System.out.println(stackTraceElement);
      }
    }
  }
  if (anyAlive) {
    throw new RuntimeException("Expected all threads to complete.");
  }
}
