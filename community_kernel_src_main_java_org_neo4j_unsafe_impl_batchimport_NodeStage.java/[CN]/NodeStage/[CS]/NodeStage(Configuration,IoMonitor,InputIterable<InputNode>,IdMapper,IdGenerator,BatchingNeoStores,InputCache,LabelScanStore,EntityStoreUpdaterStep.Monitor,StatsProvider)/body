{
  super("Nodes",config,ORDER_SEND_DOWNSTREAM);
  add(new InputIteratorBatcherStep<>(control(),config,nodes.iterator(),InputNode.class));
  if (!nodes.supportsMultiplePasses()) {
    add(new InputEntityCacherStep<>(control(),config,inputCache.cacheNodes()));
  }
  NodeStore nodeStore=neoStore.getNodeStore();
  PropertyStore propertyStore=neoStore.getPropertyStore();
  add(new PropertyEncoderStep<>(control(),config,neoStore.getPropertyKeyRepository(),propertyStore));
  add(new NodeEncoderStep(control(),config,idMapper,idGenerator,neoStore.getLabelRepository(),nodeStore,memoryUsage));
  add(new LabelScanStorePopulationStep(control(),config,labelScanStore));
  add(new EntityStoreUpdaterStep<>(control(),config,nodeStore,propertyStore,writeMonitor,storeUpdateMonitor));
}
