{
  this.startNode=startNode;
  this.visitedNodes.put(startNode,new LevelData(null,0));
  this.nextNodes.add(startNode);
  this.sharedFrozenDepth=sharedFrozenDepth;
  this.sharedStop=sharedStop;
  this.sharedCurrentDepth=sharedCurrentDepth;
  this.expander=expander;
  this.sharedVisitedRels=sharedVisitedRels;
  this.lastPath=new DirectionDataPath(startNode);
  if (sharedCurrentDepth.value < maxDepth) {
    prepareNextLevel();
  }
 else {
    this.nextRelationships=Collections.<Relationship>emptyList().iterator();
  }
}
