{
  RagManager ragManager=new RagManager();
  LockResource resource=new LockResource(ResourceTypes.NODE,1L);
  final RWLock lock=new RWLock(resource,ragManager);
  final LockTransaction lockTransaction=new LockTransaction();
  final LockTransaction anotherTransaction=new LockTransaction();
  lock.mark();
  lock.acquireReadLock(lockTransaction);
  lock.mark();
  lock.acquireReadLock(anotherTransaction);
  final CountDownLatch writerCompletedLatch=new CountDownLatch(1);
  Runnable writer=createWriter(lock,lockTransaction,writerCompletedLatch);
  executor.execute(writer);
  waitWaitingThreads(lock,1);
  assertEquals("No writers for now.",0,lock.getWriteCount());
  assertEquals(2,lock.getReadCount());
  lock.releaseReadLock(lockTransaction);
  lock.releaseReadLock(anotherTransaction);
  writerCompletedLatch.await();
  assertEquals(1,lock.getWriteCount());
  assertEquals(0,lock.getReadCount());
  lock.releaseWriteLock(lockTransaction);
  assertEquals("Lock should not have any writers left.",0,lock.getWriteCount());
  assertEquals("No waiting threads left.",0,lock.getWaitingThreadsCount());
  assertEquals("No lock elements left.",0,lock.getTxLockElementCount());
}
