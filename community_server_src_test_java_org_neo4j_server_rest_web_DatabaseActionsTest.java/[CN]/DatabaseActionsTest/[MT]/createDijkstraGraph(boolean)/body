{
  Map<String,Object> costOneProperties=includeOnes ? map("cost",(double)1) : map();
  long start=graphdbHelper.createNode();
  long a=graphdbHelper.createNode();
  long b=graphdbHelper.createNode();
  long c=graphdbHelper.createNode();
  long d=graphdbHelper.createNode();
  long e=graphdbHelper.createNode();
  long f=graphdbHelper.createNode();
  long x=graphdbHelper.createNode();
  long y=graphdbHelper.createNode();
  createRelationshipWithProperties(start,a,costOneProperties);
  createRelationshipWithProperties(a,x,map("cost",(double)9));
  createRelationshipWithProperties(a,b,costOneProperties);
  createRelationshipWithProperties(b,x,map("cost",(double)7));
  createRelationshipWithProperties(b,c,costOneProperties);
  createRelationshipWithProperties(c,x,map("cost",(double)5));
  createRelationshipWithProperties(c,x,map("cost",(double)4));
  createRelationshipWithProperties(c,d,costOneProperties);
  createRelationshipWithProperties(d,x,map("cost",(double)3));
  createRelationshipWithProperties(d,e,costOneProperties);
  createRelationshipWithProperties(e,x,costOneProperties);
  createRelationshipWithProperties(e,f,map("cost",(double)2));
  createRelationshipWithProperties(x,y,map("cost",(double)2));
  return new long[]{start,x};
}
