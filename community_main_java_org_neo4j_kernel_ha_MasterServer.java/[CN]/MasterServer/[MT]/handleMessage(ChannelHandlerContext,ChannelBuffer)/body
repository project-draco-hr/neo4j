{
  RequestType type=RequestType.values()[message.readByte()];
switch (type) {
case ALLOCATE_IDS:
    performRequest(ctx,message,new MasterCaller<IdAllocation>(){
      public Response<IdAllocation> callMaster(      ChannelBuffer buffer){
        SlaveContext context=readSlaveContext(ctx,buffer);
        IdType idType=IdType.values()[buffer.readByte()];
        return realMaster.allocateIds(context,idType);
      }
    }
,new Serializer<IdAllocation>(){
      public void write(      IdAllocation idAllocation,      ChannelBuffer buffer) throws IOException {
        buffer.writeInt(idAllocation.getIds().length);
        for (        long id : idAllocation.getIds()) {
          buffer.writeLong(id);
        }
        buffer.writeLong(idAllocation.getHighestIdInUse());
        buffer.writeLong(idAllocation.getDefragCount());
      }
    }
);
  break;
}
}
