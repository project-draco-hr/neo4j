{
  if (!values.hasNext()) {
    return rels;
  }
  return new PrimitiveLongIterator(){
    private Iterator<Long> currentSetOfAddedRels;
    @Override public boolean hasNext(){
      return rels.hasNext() || (currentSetOfAddedRels().hasNext());
    }
    private Iterator<Long> currentSetOfAddedRels(){
      while (values.hasNext() && (currentSetOfAddedRels == null || !currentSetOfAddedRels.hasNext())) {
        currentSetOfAddedRels=values.next().iterator();
      }
      return currentSetOfAddedRels;
    }
    @Override public long next(){
      if (rels.hasNext()) {
        long next=rels.next();
        return next;
      }
 else {
        return currentSetOfAddedRels().next();
      }
    }
  }
;
}
