{
  InFlightMap<Long,RaftLogEntry> cache=new InFlightMap<>();
  RaftState raftState=new RaftState(member(0),new InMemoryStateStorage<>(new TermState()),new FakeMembership(),new InMemoryRaftLog(),new InMemoryStateStorage<>(new VoteState()),cache);
  List<LogCommand> logCommands=new LinkedList<LogCommand>(){
{
      add(new AppendLogEntry(1,new RaftLogEntry(0L,valueOf(0))));
      add(new AppendLogEntry(2,new RaftLogEntry(0L,valueOf(1))));
      add(new AppendLogEntry(3,new RaftLogEntry(0L,valueOf(2))));
      add(new AppendLogEntry(4,new RaftLogEntry(0L,valueOf(4))));
      add(new TruncateLogCommand(3));
      add(new AppendLogEntry(3,new RaftLogEntry(0L,valueOf(5))));
    }
  }
;
  Outcome raftTestMemberOutcome=new Outcome(CANDIDATE,0,null,-1,null,new HashSet<>(),-1,initialFollowerStates(),true,logCommands,emptyOutgoingMessages(),Collections.emptySet(),-1);
  raftState.update(raftTestMemberOutcome);
  assertNotNull(cache.retrieve(1L));
  assertNotNull(cache.retrieve(2L));
  assertNotNull(cache.retrieve(3L));
  assertEquals(valueOf(5),cache.retrieve(3L).content());
  assertNull(cache.retrieve(4L));
}
