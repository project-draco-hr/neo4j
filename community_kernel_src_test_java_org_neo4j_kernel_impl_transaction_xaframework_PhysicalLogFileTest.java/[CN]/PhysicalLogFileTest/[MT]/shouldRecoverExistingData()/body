{
  String name="log";
  File file=new File(directory.directory(),name + ".1");
  writeSomeData(file,new Visitor<ByteBuffer,IOException>(){
    @Override public boolean visit(    ByteBuffer buffer) throws IOException {
      writeLogHeader(buffer,1,3);
      buffer.clear();
      buffer.position(LOG_HEADER_SIZE);
      buffer.put((byte)2);
      buffer.putInt(23324);
      return true;
    }
  }
);
  LogRotationControl logRotationControl=mock(LogRotationControl.class);
  LifeSupport life=new LifeSupport();
  PhysicalLogFiles logFiles=new PhysicalLogFiles(directory.directory(),name,fs);
  LogFile logFile=life.add(new PhysicalLogFile(fs,logFiles,50,LogPruneStrategyFactory.NO_PRUNING,transactionIdStore,logVersionRepository,mock(Monitor.class),logRotationControl,new TransactionMetadataCache(10,100),new Visitor<ReadableLogChannel,IOException>(){
    @Override public boolean visit(    ReadableLogChannel element) throws IOException {
      assertEquals((byte)2,element.get());
      assertEquals(23324,element.getInt());
      try {
        element.get();
        fail("There should be no more");
      }
 catch (      ReadPastEndException e) {
      }
      return true;
    }
  }
));
  try {
    life.start();
  }
  finally {
    life.shutdown();
  }
}
