{
  try {
    IdGenerator.createGenerator("testIdGenerator.id");
    IdGenerator idGenerator=new IdGenerator("testIdGenerator.id",3);
    for (int i=0; i < 7; i++) {
      assertEquals(i,idGenerator.nextId());
    }
    try {
      idGenerator.freeId(-1);
      fail("Negative id should throw exception");
    }
 catch (    IllegalArgumentException e) {
    }
    try {
      idGenerator.freeId(7);
      fail("Greater id than ever returned should throw exception");
    }
 catch (    IllegalArgumentException e) {
    }
    for (int i=0; i < 7; i++) {
      idGenerator.freeId(i);
    }
    idGenerator.close();
    idGenerator=new IdGenerator("testIdGenerator.id",2);
    assertEquals(0,idGenerator.nextId());
    assertEquals(1,idGenerator.nextId());
    assertEquals(2,idGenerator.nextId());
    idGenerator.close();
    idGenerator=new IdGenerator("testIdGenerator.id",2);
    assertEquals(4,idGenerator.nextId());
    assertEquals(5,idGenerator.nextId());
    assertEquals(6,idGenerator.nextId());
    assertEquals(3,idGenerator.nextId());
    idGenerator.close();
  }
  finally {
    File file=new File("testIdGenerator.id");
    if (file.exists()) {
      assertTrue(file.delete());
    }
  }
}
