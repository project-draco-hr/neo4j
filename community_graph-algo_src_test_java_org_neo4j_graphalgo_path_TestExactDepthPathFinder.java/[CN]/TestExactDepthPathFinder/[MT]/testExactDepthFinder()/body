{
  graph.makeEdgeChain("a,c,g,k");
  graph.makeEdgeChain("a,b,d,j,k");
  graph.makeEdgeChain("b,e,f,h,i,j");
  graph.makeEdgeChain("d,h");
  PathExpander<Object> expander=PathExpanders.forTypeAndDirection(MyRelTypes.R1,Direction.OUTGOING);
  Node a=graph.getNode("a");
  Node k=graph.getNode("k");
  assertPaths(GraphAlgoFactory.pathsWithLength(expander,3).findAllPaths(a,k),"a,c,g,k");
  assertPaths(GraphAlgoFactory.pathsWithLength(expander,4).findAllPaths(a,k),"a,b,d,j,k");
  assertPaths(GraphAlgoFactory.pathsWithLength(expander,5).findAllPaths(a,k));
  assertPaths(GraphAlgoFactory.pathsWithLength(expander,6).findAllPaths(a,k),"a,b,d,h,i,j,k");
  assertPaths(GraphAlgoFactory.pathsWithLength(expander,7).findAllPaths(a,k),"a,b,e,f,h,i,j,k");
  assertPaths(GraphAlgoFactory.pathsWithLength(expander,8).findAllPaths(a,k));
}
