{
  final RecoveryVisitor visitor=new RecoveryVisitor(store,storeApplier,indexUpdatesValidator,monitor);
  final TransactionRepresentation representation=new PhysicalTransactionRepresentation(Collections.<Command>emptySet());
  final CommittedTransactionRepresentation transaction=new CommittedTransactionRepresentation(startEntry,representation,commitEntry);
  final LogPosition logPosition=new LogPosition(0,42);
  final boolean result=visitor.visit(new RecoverableTransaction(){
    @Override public CommittedTransactionRepresentation representation(){
      return transaction;
    }
    @Override public LogPosition positionAfterTx(){
      return logPosition;
    }
  }
);
  assertFalse(result);
  verify(storeApplier,times(1)).apply(eq(representation),any(ValidatedIndexUpdates.class),any(LockGroup.class),eq(commitEntry.getTxId()),eq(RECOVERY));
  verify(monitor).transactionRecovered(commitEntry.getTxId());
  visitor.close();
  verify(store,times(1)).setLastCommittedAndClosedTransactionId(commitEntry.getTxId(),LogEntryStart.checksum(startEntry),logPosition.getLogVersion(),logPosition.getByteOffset());
}
