{
  final RecoveryVisitor visitor=new RecoveryVisitor(store,storageEngine,monitor);
  final TransactionRepresentation representation=new PhysicalTransactionRepresentation(Collections.<StorageCommand>emptySet());
  final CommittedTransactionRepresentation transaction=new CommittedTransactionRepresentation(startEntry,representation,commitEntry);
  final LogPosition logPosition=new LogPosition(0,42);
  final boolean result=visitor.visit(new RecoverableTransaction(){
    @Override public CommittedTransactionRepresentation representation(){
      return transaction;
    }
    @Override public LogPosition positionAfterTx(){
      return logPosition;
    }
  }
);
  visitor.close();
  assertFalse(result);
  verify(storageEngine,times(1)).apply(any(TransactionToApply.class),eq(RECOVERY));
  verify(monitor).transactionRecovered(commitEntry.getTxId());
  verify(store,times(1)).setLastCommittedAndClosedTransactionId(commitEntry.getTxId(),LogEntryStart.checksum(startEntry),commitEntry.getTimeWritten(),logPosition.getByteOffset(),logPosition.getLogVersion());
}
