{
  Index<Node> index=nodeIndex(LuceneIndexImplementation.EXACT_CONFIG);
  Node node1=graphDb.createNode();
  Node node2=graphDb.createNode();
  String key="key";
  index.add(node1,key,new ValueContext(15).indexNumeric());
  index.add(node2,key,new ValueContext(5).indexNumeric());
  index.remove(node1,key,new ValueContext(15).indexNumeric());
  assertThat(index.query(NumericRangeQuery.newIntRange(key,0,20,false,false)),Contains.contains(node2));
  index.remove(node2,key,new ValueContext(5).indexNumeric());
  assertThat(index.query(NumericRangeQuery.newIntRange(key,0,20,false,false)),emptyIterable());
  restartTx();
  assertThat(index.query(NumericRangeQuery.newIntRange(key,0,20,false,false)),emptyIterable());
  index.add(node1,key,new ValueContext(15).indexNumeric());
  index.add(node2,key,new ValueContext(5).indexNumeric());
  restartTx();
  assertThat(index.query(NumericRangeQuery.newIntRange(key,0,20,false,false)),Contains.contains(node1,node2));
  index.remove(node1,key,new ValueContext(15).indexNumeric());
  assertThat(index.query(NumericRangeQuery.newIntRange(key,0,20,false,false)),Contains.contains(node2));
  restartTx();
  assertThat(index.query(NumericRangeQuery.newIntRange(key,0,20,false,false)),Contains.contains(node2));
}
