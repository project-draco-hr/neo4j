{
  String[] tokens=configValue.split(" ");
  if (tokens.length == 0) {
    throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'");
  }
  String numberWithUnit=tokens[0];
  Threshold thresholdToUse;
  if (tokens.length == 1) {
    if (numberWithUnit.equals("true")) {
      return NO_PRUNING;
    }
 else     if (numberWithUnit.equals("false")) {
      return new ThresholdBasedPruneStrategy(fileSystem,logFileInformation,files,versionRepo,new TransactionCountThreshold(1));
    }
 else {
      throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. The form is 'all' or '<number><unit> <type>' for example '100k txs' "+ "for the latest 100 000 transactions");
    }
  }
  String[] types=new String[]{"files","size","txs","hours","days"};
  String type=tokens[1];
  int number=(int)parseLongWithUnit(numberWithUnit);
  int typeIndex=0;
  if (type.equals(types[typeIndex++])) {
    thresholdToUse=new FileCountThreshold(number);
  }
 else   if (type.equals(types[typeIndex++])) {
    thresholdToUse=new FileSizeThreshold(fileSystem,number);
  }
 else   if (type.equals(types[typeIndex++])) {
    thresholdToUse=new TransactionCountThreshold(number);
  }
 else   if (type.equals(types[typeIndex++])) {
    thresholdToUse=new TransactionTimespanThreshold(Clock.SYSTEM_CLOCK,TimeUnit.HOURS,number);
  }
 else   if (type.equals(types[typeIndex++])) {
    thresholdToUse=new TransactionTimespanThreshold(Clock.SYSTEM_CLOCK,TimeUnit.DAYS,number);
  }
 else {
    throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. Invalid type '"+ type+ "', valid are "+ Arrays.asList(types));
  }
  return new ThresholdBasedPruneStrategy(fileSystem,logFileInformation,files,versionRepo,thresholdToUse);
}
