{
  GraphDatabaseService db=dbRule.getGraphDatabaseAPI();
  GraphDatabaseQueryService graph=new GraphDatabaseCypherService(db);
  Label person=Label.label("Person");
  try (Transaction tx=db.beginTx()){
    db.schema().indexFor(person).on("id").create();
    db.schema().constraintFor(person).assertPropertyIsUnique("id").create();
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    db.schema().indexFor(person).on("name").create();
    tx.success();
  }
   try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(1,TimeUnit.MINUTES);
    tx.success();
  }
   for (int count=0; count < TRIES; count++) {
    Pair<String,String> stringPair=getRandomName();
    String ident=stringPair.first();
    String name=stringPair.other();
    String id=Long.toString(Math.abs(random.nextLong()));
    String query=format("MERGE (%s:Person {id: %s}) ON CREATE SET %s.name = \"%s\";",ident,id,ident,name);
    try (InternalTransaction tx=graph.beginTransaction(KernelTransaction.Type.implicit,AccessMode.FULL)){
      Result result=db.execute(query);
      result.close();
      tx.success();
    }
   }
}
