{
  ArrayMap<Integer,PropertyData> props=xaCon.getWriteTransaction().nodeLoadProperties(node,false);
  int count=0;
  for (  int keyId : props.keySet()) {
    long id=props.get(keyId).getId();
    PropertyRecord record=pStore.getRecord(id);
    PropertyData data=new PropertyData(id,getValue(record));
    if (data.getId() == prop1) {
      assertEquals("prop1",MyPropertyIndex.getIndexFor(keyId).getKey());
      assertEquals("-string2",data.getValue());
    }
 else     if (data.getId() == prop2) {
      assertEquals("prop2",MyPropertyIndex.getIndexFor(keyId).getKey());
      assertEquals(new Integer(-2),data.getValue());
    }
 else     if (data.getId() == prop3) {
      assertEquals("prop3",MyPropertyIndex.getIndexFor(keyId).getKey());
      assertEquals(new Boolean(true),data.getValue());
      xaCon.getWriteTransaction().nodeRemoveProperty(node,prop3);
    }
 else {
      throw new IOException();
    }
    count++;
  }
  assertEquals(3,count);
  assertEquals(3,xaCon.getWriteTransaction().nodeLoadProperties(node,false).size());
  RelationshipChainPosition pos=xaCon.getWriteTransaction().getRelationshipChainPosition(node);
  Iterator<RelationshipRecord> rels=both(xaCon.getWriteTransaction().getMoreRelationships(node,pos)).iterator();
  assertTrue(rels.hasNext());
  xaCon.getWriteTransaction().nodeDelete(node);
}
