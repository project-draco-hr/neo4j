{
  ArrayMap<Integer,PropertyData> props=xaCon.getWriteTransaction().relLoadProperties(rel,false);
  int count=0;
  for (  int keyId : props.keySet()) {
    long id=props.get(keyId).getId();
    PropertyRecord record=pStore.getRecord(id);
    PropertyData data=record.newPropertyData();
    if (data.getId() == prop1) {
      assertEquals("prop1",MyPropertyIndex.getIndexFor(keyId).getKey());
      assertEquals("-string1",data.getValue());
    }
 else     if (data.getId() == prop2) {
      assertEquals("prop2",MyPropertyIndex.getIndexFor(keyId).getKey());
      assertEquals(new Integer(-1),data.getValue());
    }
 else     if (data.getId() == prop3) {
      assertEquals("prop3",MyPropertyIndex.getIndexFor(keyId).getKey());
      assertEquals(new Boolean(false),data.getValue());
      xaCon.getWriteTransaction().relRemoveProperty(rel,prop3);
    }
 else {
      throw new IOException();
    }
    count++;
  }
  assertEquals(3,count);
  assertEquals(3,xaCon.getWriteTransaction().relLoadProperties(rel,false).size());
  RelationshipRecord relData=xaCon.getWriteTransaction().relLoadLight(rel);
  assertEquals(firstNode,relData.getFirstNode());
  assertEquals(secondNode,relData.getSecondNode());
  assertEquals(relType,relData.getType());
  xaCon.getWriteTransaction().relDelete(rel);
  AtomicLong firstPos=getPosition(xaCon,firstNode);
  Iterator<RelationshipRecord> first=getMore(xaCon,firstNode,firstPos).iterator();
  first.next();
  AtomicLong secondPos=getPosition(xaCon,secondNode);
  Iterator<RelationshipRecord> second=getMore(xaCon,secondNode,secondPos).iterator();
  second.next();
  assertTrue(first.hasNext());
  assertTrue(second.hasNext());
}
