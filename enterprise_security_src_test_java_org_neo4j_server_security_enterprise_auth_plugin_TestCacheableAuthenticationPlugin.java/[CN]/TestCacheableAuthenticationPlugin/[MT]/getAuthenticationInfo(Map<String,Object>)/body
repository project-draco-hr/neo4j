{
  String principal;
  String credentials;
  getAuthenticationInfoCallCount.incrementAndGet();
  try {
    principal=AuthToken.safeCast(AuthToken.PRINCIPAL,authToken);
    credentials=AuthToken.safeCast(AuthToken.CREDENTIALS,authToken);
  }
 catch (  InvalidAuthTokenException e) {
    return null;
  }
  if (principal.equals("neo4j") && credentials.equals("neo4j")) {
    return new CacheableAuthenticationInfo(){
      @Override public Object getPrincipal(){
        return "neo4j";
      }
      @Override public byte[] getCredentials(){
        return credentials.getBytes();
      }
    }
;
  }
  return null;
}
