{
  return new PathEvaluator.Adapter(){
    @SuppressWarnings("unchecked") @Override public Evaluation evaluate(    Path path,    BranchState state){
      for (      PathEvaluator evaluator : evaluators) {
        if (evaluator.evaluate(path,state).includes()) {
          return Evaluation.INCLUDE_AND_CONTINUE;
        }
      }
      return Evaluation.EXCLUDE_AND_CONTINUE;
    }
  }
;
}
