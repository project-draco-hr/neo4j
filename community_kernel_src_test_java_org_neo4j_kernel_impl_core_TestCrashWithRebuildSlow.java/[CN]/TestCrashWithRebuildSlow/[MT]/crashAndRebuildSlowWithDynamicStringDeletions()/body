{
  EphemeralFileSystemAbstraction fileSystem=new EphemeralFileSystemAbstraction();
  String storeDir="dir";
  GraphDatabaseAPI db=(GraphDatabaseAPI)new TestGraphDatabaseFactory().setFileSystem(fileSystem).newImpermanentDatabase(storeDir);
  produceNonCleanDefraggedStringStore(db);
  EphemeralFileSystemAbstraction snapshot=fileSystem.snapshot();
  db.shutdown();
  assertNumberOfFreeIdsEquals(storeDir,snapshot,0);
  db=(GraphDatabaseAPI)new TestGraphDatabaseFactory().setFileSystem(snapshot).newImpermanentDatabaseBuilder(storeDir).setConfig(GraphDatabaseSettings.rebuild_idgenerators_fast,GraphDatabaseSetting.FALSE).newGraphDatabase();
  assertNumberOfFreeIdsEquals(storeDir,snapshot,4);
  try {
    int nameCount=0;
    int relCount=0;
    for (    Node node : GlobalGraphOperations.at(db).getAllNodes()) {
      if (node.equals(db.getReferenceNode()))       continue;
      nameCount++;
      assertNotNull(node.getProperty("name"));
      relCount+=count(node.getRelationships(Direction.OUTGOING));
    }
    assertEquals(16,nameCount);
    assertEquals(12,relCount);
  }
  finally {
    db.shutdown();
  }
}
