{
  String storeDir="dir";
  final GraphDatabaseAPI db=(GraphDatabaseAPI)new TestGraphDatabaseFactory().setFileSystem(fs.get()).newImpermanentDatabase(storeDir);
  produceNonCleanDefraggedStringStore(db);
  EphemeralFileSystemAbstraction snapshot=fs.snapshot(shutdownDb(db));
  assertNumberOfFreeIdsEquals(storeDir,snapshot,0);
  GraphDatabaseAPI newDb=(GraphDatabaseAPI)new TestGraphDatabaseFactory().setFileSystem(snapshot).newImpermanentDatabaseBuilder(storeDir).setConfig(GraphDatabaseSettings.rebuild_idgenerators_fast,Settings.FALSE).newGraphDatabase();
  assertNumberOfFreeIdsEquals(storeDir,snapshot,4);
  Transaction transaction=newDb.beginTx();
  try {
    int nameCount=0;
    int relCount=0;
    for (    Node node : GlobalGraphOperations.at(newDb).getAllNodes()) {
      if (node.equals(newDb.getReferenceNode())) {
        continue;
      }
      nameCount++;
      assertThat(node,inTx(newDb,hasProperty("name")));
      relCount+=count(node.getRelationships(Direction.OUTGOING));
    }
    assertEquals(16,nameCount);
    assertEquals(12,relCount);
  }
  finally {
    transaction.finish();
    newDb.shutdown();
  }
}
