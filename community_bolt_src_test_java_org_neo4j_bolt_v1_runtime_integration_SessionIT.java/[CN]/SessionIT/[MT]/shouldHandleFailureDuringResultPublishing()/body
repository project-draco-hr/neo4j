{
  Session session=env.newSession();
  session.init("TestClient/1.0",null,null);
  final CountDownLatch pullAllCallbackCalled=new CountDownLatch(1);
  final AtomicReference<Neo4jError> error=new AtomicReference<>();
  session.run("RETURN 1",EMPTY_PARAMS,null,Session.Callbacks.<StatementMetadata,Object>noop());
  session.pullAll(null,new Session.Callback.Adapter<RecordStream,Object>(){
    @Override public void result(    RecordStream result,    Object attachment) throws Exception {
      throw new RuntimeException("Ooopsies!");
    }
    @Override public void failure(    Neo4jError err,    Object attachment){
      error.set(err);
    }
    @Override public void completed(    Object attachment){
      pullAllCallbackCalled.countDown();
    }
  }
);
  pullAllCallbackCalled.await(30,TimeUnit.SECONDS);
  final Neo4jError err=error.get();
  assertThat(err.status(),equalTo((Status)Status.General.UnknownFailure));
  assertThat(err.message(),CoreMatchers.containsString("Ooopsies!"));
}
