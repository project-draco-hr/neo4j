{
  Session session=env.newSession("<test>");
  session.init("TestClient/1.0",emptyMap(),-1,null);
  final CountDownLatch pullAllCallbackCalled=new CountDownLatch(1);
  final AtomicReference<Neo4jError> error=new AtomicReference<>();
  session.run("RETURN 1",EMPTY_PARAMS,Session.Callbacks.<StatementMetadata>noop());
  session.pullAll(new Session.Callback.Adapter<RecordStream>(){
    @Override public void result(    RecordStream result) throws Exception {
      throw new RuntimeException("Ooopsies!");
    }
    @Override public void failure(    Neo4jError err){
      error.set(err);
    }
    @Override public void completed(){
      pullAllCallbackCalled.countDown();
    }
  }
);
  assertTrue(pullAllCallbackCalled.await(30,TimeUnit.SECONDS));
  final Neo4jError err=error.get();
  assertThat(err.status(),equalTo((Status)Status.General.UnknownError));
  assertThat(err.message(),CoreMatchers.containsString("Ooopsies!"));
}
