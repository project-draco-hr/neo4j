{
  createGraph("a TO b","b TO c","c TO d","d TO e","e TO f","f TO a");
  PathExpander<Void> expander=Traversal.pathExpanderForTypes(to,OUTGOING);
  expectPaths(bidirectionalTraversal().mirroredSides(getGraphDb().traversalDescription().uniqueness(NODE_PATH).expand(expander)).traverse(getNodeWithName("a"),getNodeWithName("f")),"a,b,c,d,e,f");
  expectPaths(bidirectionalTraversal().mirroredSides(getGraphDb().traversalDescription().uniqueness(RELATIONSHIP_PATH).expand(expander)).traverse(getNodeWithName("a"),getNodeWithName("f")),"a,b,c,d,e,f","a,b,c,d,e,f");
}
