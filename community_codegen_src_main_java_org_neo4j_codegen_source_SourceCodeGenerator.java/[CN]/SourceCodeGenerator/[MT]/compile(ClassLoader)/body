{
  DiagnosticCollector<JavaFileObject> diagnostics=new DiagnosticCollector<>();
  FileManager fileManager=new FileManager(compiler.getStandardFileManager(diagnostics,configuration.locale(),configuration.chraset()));
  JavaCompiler.CompilationTask task=compiler.getTask(configuration.errorWriter(),fileManager,diagnostics,configuration.options(),null,sourceFiles());
  configuration.processors(task);
  if (task.call()) {
    configuration.warningsHandler().handle(diagnostics.getDiagnostics());
    return fileManager.bytecodes();
  }
 else {
    @SuppressWarnings("unchecked") List<Diagnostic<?>> issues=(List)diagnostics.getDiagnostics();
    throw new CompilationFailureException(issues);
  }
}
