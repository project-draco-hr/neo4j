{
  StringBuilder target=new StringBuilder().append("package ").append(type.packageName()).append(";\n");
  target.append("/** Generated by ").append(getClass().getName()).append(" */\n");
  target.append("public class ").append(type.simpleName()).append(" extends ").append(base.name()).append("\n");
  String prefix="    implements ";
  for (  TypeReference iFace : interfaces) {
    target.append(prefix).append(iFace.name());
    prefix=", ";
  }
  if (prefix.length() == 2) {
    target.append("\n");
  }
  target.append("{\n");
synchronized (this) {
    if (null != classes.put(type,target)) {
      throw new IllegalStateException("Trying to generate class twice: " + type);
    }
  }
  return new ClassWriter(target);
}
