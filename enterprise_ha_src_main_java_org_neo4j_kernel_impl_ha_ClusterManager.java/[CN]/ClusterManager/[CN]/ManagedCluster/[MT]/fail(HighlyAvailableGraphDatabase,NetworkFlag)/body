{
  assertMember(db);
  ClusterClient clusterClient=db.getDependencyResolver().resolveDependency(ClusterClient.class);
  LifeSupport clusterClientLife=(LifeSupport)accessible(clusterClient.getClass().getDeclaredField("life")).get(clusterClient);
  NetworkReceiver networkReceiver=instance(NetworkReceiver.class,clusterClientLife.getLifecycleInstances());
  NetworkSender networkSender=instance(NetworkSender.class,clusterClientLife.getLifecycleInstances());
  if (contains(flags,NetworkFlag.IN)) {
    networkReceiver.setPaused(true);
  }
  if (contains(flags,NetworkFlag.OUT)) {
    networkSender.setPaused(true);
  }
  return new StartNetworkAgainKit(db,networkReceiver,networkSender,flags);
}
