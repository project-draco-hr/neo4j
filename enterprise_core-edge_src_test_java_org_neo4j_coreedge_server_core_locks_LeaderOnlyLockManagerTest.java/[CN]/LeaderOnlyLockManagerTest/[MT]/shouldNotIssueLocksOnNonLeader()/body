{
  RaftTestMember me=member(0);
  RaftTestMember leader=member(1);
  StubReplicator replicator=new StubReplicator();
  ReplicatedLockStateMachine<RaftTestMember> replicatedLockStateMachine=new ReplicatedLockStateMachine<>(me,replicator);
  LeaderLocator<RaftTestMember> leaderLocator=mock(LeaderLocator.class);
  when(leaderLocator.getLeader()).thenReturn(leader);
  Locks locks=mock(Locks.class);
  when(locks.newClient()).thenReturn(mock(Locks.Client.class));
  LeaderOnlyLockManager<RaftTestMember> lockManager=new LeaderOnlyLockManager<>(me,replicator,leaderLocator,locks,replicatedLockStateMachine);
  Locks.Client lockClient=lockManager.newClient();
  try {
    lockClient.acquireExclusive(ResourceTypes.NODE,0L);
    fail("Should have thrown exception");
  }
 catch (  AcquireLockTimeoutException e) {
  }
}
