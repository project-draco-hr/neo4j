{
  RaftTestMember me=member(0);
  PendingLockTokensRequests pendingLockTokensRequests=new PendingLockTokensRequests();
  ReplicatedLockTokenStateMachine<RaftTestMember> replicatedLockStateMachine=new ReplicatedLockTokenStateMachine<>(new InMemoryStateStorage(new ReplicatedLockTokenState<>()),pendingLockTokensRequests);
  StateMachines stateMachines=new StateMachines(replicatedLockStateMachine);
  DirectReplicator replicator=new DirectReplicator(stateMachines);
  LeaderLocator<RaftTestMember> leaderLocator=mock(LeaderLocator.class);
  when(leaderLocator.getLeader()).thenReturn(me);
  Locks locks=mock(Locks.class);
  when(locks.newClient()).thenReturn(mock(Locks.Client.class));
  LeaderOnlyLockManager<RaftTestMember> lockManager=new LeaderOnlyLockManager<>(me,replicator,leaderLocator,locks,pendingLockTokensRequests,LEADER_LOCK_TOKEN_TIMEOUT);
  lockManager.newClient().acquireExclusive(ResourceTypes.NODE,0L);
}
