{
  URL legacyStoreResource=getClass().getResource("oldformatstore/neostore");
  LegacyStore legacyStore=new LegacyStore(legacyStoreResource.getFile());
  HashMap config=MigrationTestUtils.defaultConfig();
  File outputDir=new File("target/outputDatabase");
  FileUtils.deleteRecursively(outputDir);
  assertTrue(outputDir.mkdirs());
  String storeFileName="target/outputDatabase/neostore";
  config.put("neo_store",storeFileName);
  NeoStore.createStore(storeFileName,config);
  NeoStore neoStore=new NeoStore(config);
  new StoreMigrator(legacyStore).migrateTo(neoStore);
  neoStore.close();
  EmbeddedGraphDatabase database=new EmbeddedGraphDatabase(outputDir.getPath());
  String longString=MigrationTestUtils.makeLongString();
  int[] longArray=MigrationTestUtils.makeLongArray();
  int nodeCount=0;
  for (  Node node : database.getAllNodes()) {
    nodeCount++;
    if (node.getId() > 0) {
      verifyProperties(node,longString,longArray);
    }
  }
  assertEquals(501,nodeCount);
  Node currentNode=database.getReferenceNode();
  int traversalCount=0;
  while (currentNode.hasRelationship(Direction.OUTGOING)) {
    traversalCount++;
    Relationship relationship=currentNode.getRelationships(Direction.OUTGOING).iterator().next();
    verifyProperties(relationship,longString,longArray);
    currentNode=relationship.getEndNode();
  }
  assertEquals(500,traversalCount);
  database.shutdown();
}
