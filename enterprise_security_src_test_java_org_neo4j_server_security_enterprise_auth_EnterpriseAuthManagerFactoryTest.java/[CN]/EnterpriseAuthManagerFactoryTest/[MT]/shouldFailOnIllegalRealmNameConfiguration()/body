{
  Config config=mock(Config.class);
  LogProvider mockLogProvider=mock(LogProvider.class);
  Log mockLog=mock(Log.class);
  when(mockLogProvider.getLog(anyString())).thenReturn(mockLog);
  when(mockLog.isDebugEnabled()).thenReturn(true);
  when(config.get(SecuritySettings.native_authentication_enabled)).thenReturn(true);
  when(config.get(SecuritySettings.native_authorization_enabled)).thenReturn(true);
  when(config.get(SecuritySettings.ldap_authentication_enabled)).thenReturn(true);
  when(config.get(SecuritySettings.ldap_authorization_enabled)).thenReturn(true);
  when(config.get(SecuritySettings.plugin_authentication_enabled)).thenReturn(true);
  when(config.get(SecuritySettings.plugin_authorization_enabled)).thenReturn(true);
  when(config.get(SecuritySettings.active_realms)).thenReturn(Arrays.asList("this-realm-does-not-exist"));
  thrown.expect(IllegalArgumentException.class);
  new EnterpriseAuthManagerFactory().newInstance(config,mockLogProvider,mock(Log.class),null,null);
  verify(mockLog,atLeastOnce()).debug(anyString(),contains("Illegal configuration: No valid security realm is active."),anyString());
}
