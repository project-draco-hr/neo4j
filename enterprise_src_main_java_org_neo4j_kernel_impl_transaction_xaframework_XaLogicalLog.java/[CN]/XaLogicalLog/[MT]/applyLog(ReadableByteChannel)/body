{
  if (!backupSlave) {
    throw new IllegalStateException("This is not a backup slave");
  }
  if (xidIdentMap.size() > 0) {
    throw new IllegalStateException("There are active transactions");
  }
  long[] header=readLogHeader(buffer,byteChannel,true);
  logVersion=header[0];
  long previousCommittedTx=header[1];
  if (logVersion != xaTf.getCurrentVersion()) {
    throw new IllegalStateException("Tried to apply version " + logVersion + " but expected version "+ xaTf.getCurrentVersion());
  }
  log.fine("Logical log version: " + logVersion + "(previous committed tx="+ previousCommittedTx+ ")");
  msgLog.logMessage("Applying log version=" + logVersion + " (previous committed tx="+ previousCommittedTx+ ")",true);
  long logEntriesFound=0;
  LogApplier logApplier=new LogApplier(byteChannel);
  scanIsComplete=false;
  scanIsComplete=false;
  while (logApplier.readAndApplyEntry()) {
    logEntriesFound++;
  }
  scanIsComplete=true;
  byteChannel.close();
  xaTf.flushAll();
  xaTf.getAndSetNewVersion();
  xaRm.reset();
  msgLog.logMessage("Apply of log version=" + logVersion + " successfull, "+ logEntriesFound+ " nr of log entries found.",true);
  log.info("Log[" + fileName + "] version "+ logVersion+ " applied successfully.");
}
