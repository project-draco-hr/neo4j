{
  graphDb=new TestGraphDatabaseFactory().newImpermanentDatabaseBuilder().setConfig(GraphDatabaseSettings.cache_type,WeakCacheProvider.NAME).newGraphDatabase();
  Transaction transaction=graphDb.beginTx();
  try {
    IndexManager index=graphDb.index();
    Index<Node> actors=index.forNodes("actors");
    Index<Node> movies=index.forNodes("movies");
    RelationshipIndex roles=index.forRelationships("roles");
    Node reeves=graphDb.createNode();
    actors.add(reeves,"name","Keanu Reeves");
    Node bellucci=graphDb.createNode();
    actors.add(bellucci,"name","Monica Bellucci");
    actors.add(bellucci,"name","La Bellucci");
    Node theMatrix=graphDb.createNode();
    movies.add(theMatrix,"title","The Matrix");
    movies.add(theMatrix,"year",1999);
    Node theMatrixReloaded=graphDb.createNode();
    movies.add(theMatrixReloaded,"title","The Matrix Reloaded");
    movies.add(theMatrixReloaded,"year",2003);
    Node malena=graphDb.createNode();
    movies.add(malena,"title","Mal??na");
    movies.add(malena,"year",2000);
    reeves.setProperty("name","Keanu Reeves");
    bellucci.setProperty("name","Monica Bellucci");
    theMatrix.setProperty("title","The Matrix");
    theMatrix.setProperty("year",1999);
    theMatrixReloaded.setProperty("title","The Matrix Reloaded");
    theMatrixReloaded.setProperty("year",2003);
    malena.setProperty("title","Mal??na");
    malena.setProperty("year",2000);
    DynamicRelationshipType ACTS_IN=DynamicRelationshipType.withName("ACTS_IN");
    Relationship role1=reeves.createRelationshipTo(theMatrix,ACTS_IN);
    roles.add(role1,"name","Neo");
    Relationship role2=reeves.createRelationshipTo(theMatrixReloaded,ACTS_IN);
    roles.add(role2,"name","Neo");
    Relationship role3=bellucci.createRelationshipTo(theMatrixReloaded,ACTS_IN);
    roles.add(role3,"name","Persephone");
    Relationship role4=bellucci.createRelationshipTo(malena,ACTS_IN);
    roles.add(role4,"name","Mal??na Scordia");
    role1.setProperty("name","Neo");
    role2.setProperty("name","Neo");
    role3.setProperty("name","Persephone");
    role4.setProperty("name","Mal??na Scordia");
    transaction.success();
  }
  finally {
    transaction.finish();
  }
  String title="Movie and Actor Graph";
  PrintWriter pw=AsciiDocGenerator.getPrintWriter("target/docs/dev",title);
  pw.println(AsciidocHelper.createGraphVizDeletingReferenceNode(title,graphDb,"initial"));
  pw.flush();
  pw.close();
}
