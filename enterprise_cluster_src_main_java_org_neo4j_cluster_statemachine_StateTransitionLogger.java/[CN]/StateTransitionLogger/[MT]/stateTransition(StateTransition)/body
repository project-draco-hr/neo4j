{
  Log log=logProvider.getLog(transition.getOldState().getClass());
  if (log.isDebugEnabled()) {
    if (transition.getOldState() == HeartbeatState.heartbeat) {
      return;
    }
    String state=transition.getOldState().getClass().getSuperclass().getSimpleName();
    StringBuilder line=new StringBuilder(state).append(": ").append(transition);
    if (transition.getMessage().hasHeader(FROM)) {
      line.append(" from:").append(transition.getMessage().getHeader(FROM));
    }
    if (transition.getMessage().hasHeader(INSTANCE)) {
      line.append(" instance:").append(transition.getMessage().getHeader(INSTANCE));
    }
    if (transition.getMessage().hasHeader(CONVERSATION_ID)) {
      line.append(" conversation-id:").append(transition.getMessage().getHeader(CONVERSATION_ID));
    }
    Object payload=transition.getMessage().getPayload();
    if (payload != null) {
      line.append(" payload:").append(Strings.prettyPrint(payload));
    }
    String msg=line.toString();
    if (msg.equals(lastLogMessage)) {
      return;
    }
    log.debug(line.toString());
    lastLogMessage=msg;
  }
}
