{
  buffer.clear();
  buffer.limit(9);
  if (byteChannel.read(buffer) != buffer.limit()) {
    return null;
  }
  buffer.flip();
  long id=buffer.getLong();
  byte inUseFlag=buffer.get();
  boolean inUse=false;
  if ((inUseFlag & Record.IN_USE.byteValue()) == Record.IN_USE.byteValue()) {
    inUse=true;
  }
 else   if ((inUseFlag & Record.IN_USE.byteValue()) != Record.NOT_IN_USE.byteValue()) {
    throw new IOException("Illegal in use flag: " + inUseFlag);
  }
  RelationshipRecord record;
  if (inUse) {
    buffer.clear();
    buffer.limit(60);
    if (byteChannel.read(buffer) != buffer.limit()) {
      return null;
    }
    buffer.flip();
    record=new RelationshipRecord(id,buffer.getLong(),buffer.getLong(),buffer.getInt());
    record.setInUse(inUse);
    record.setFirstPrevRel(buffer.getLong());
    record.setFirstNextRel(buffer.getLong());
    record.setSecondPrevRel(buffer.getLong());
    record.setSecondNextRel(buffer.getLong());
    record.setNextProp(buffer.getLong());
  }
 else {
    record=new RelationshipRecord(id,-1,-1,-1);
    record.setInUse(false);
  }
  return new RelationshipCommand(neoStore == null ? null : neoStore.getRelationshipStore(),record);
}
