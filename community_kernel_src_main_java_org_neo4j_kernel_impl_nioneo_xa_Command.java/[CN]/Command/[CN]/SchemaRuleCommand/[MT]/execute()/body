{
  for (  DynamicRecord record : recordsAfter)   store.updateRecord(record);
  if (schemaRule instanceof IndexRule) {
switch (getMode()) {
case UPDATE:
      if (((IndexRule)schemaRule).isConstraintIndex()) {
        try {
          indexes.activateIndex(schemaRule.getId());
        }
 catch (        IndexNotFoundKernelException|IndexActivationFailedKernelException|IndexPopulationFailedKernelException e) {
          throw new IllegalStateException("Unable to enable constraint, backing index is not online.",e);
        }
      }
    break;
case CREATE:
  indexes.createIndex((IndexRule)schemaRule);
break;
case DELETE:
indexes.dropIndex((IndexRule)schemaRule);
break;
default :
throw new IllegalStateException(getMode().name());
}
}
if (schemaRule instanceof UniquenessConstraintRule) {
switch (getMode()) {
case UPDATE:
case CREATE:
neoStore.setLatestConstraintIntroducingTx(txId);
break;
case DELETE:
break;
default :
throw new IllegalStateException(getMode().name());
}
}
}
