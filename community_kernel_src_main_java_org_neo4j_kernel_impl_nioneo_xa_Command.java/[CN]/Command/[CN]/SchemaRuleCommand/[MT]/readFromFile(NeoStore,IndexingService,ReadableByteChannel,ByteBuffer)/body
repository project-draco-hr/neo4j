{
  Collection<DynamicRecord> records=new ArrayList<>();
  readDynamicRecords(byteChannel,buffer,records,COLLECTION_DYNAMIC_RECORD_ADDER);
  if (!readAndFlip(byteChannel,buffer,1))   throw new IllegalStateException("Missing SchemaRule.isCreated flag in deserialization");
  byte isCreated=buffer.get();
  if (1 == isCreated) {
    for (    DynamicRecord record : records) {
      record.setCreated();
    }
  }
  if (!readAndFlip(byteChannel,buffer,8))   throw new IllegalStateException("Missing SchemaRule.txId in deserialization");
  long txId=buffer.getLong();
  SchemaRule rule=null;
  if (first(records).inUse()) {
    ByteBuffer deserialized=AbstractDynamicStore.concatData(records,new byte[100]);
    try {
      rule=SchemaRule.Kind.deserialize(first(records).getId(),deserialized);
    }
 catch (    MalformedSchemaRuleException e) {
      throw launderedException(e);
    }
  }
  return new SchemaRuleCommand(neoStore,neoStore != null ? neoStore.getSchemaStore() : null,indexes,records,rule,txId);
}
