{
  final NeoCommandHandler applier=newApplier(false);
  final DynamicRecord record=DynamicRecord.dynamicRecord(21,true);
  record.setInUse(false);
  final Collection<DynamicRecord> recordsAfter=Arrays.asList(record);
  final UniquenessConstraintRule rule=UniquenessConstraintRule.uniquenessConstraintRule(0l,1,2,3l);
  final Command.SchemaRuleCommand command=new Command.SchemaRuleCommand().init(Collections.<DynamicRecord>emptyList(),recordsAfter,rule);
  final boolean result=applier.visitSchemaRuleCommand(command);
  assertFalse(result);
  verify(schemaStore,times(1)).updateRecord(record);
  verify(neoStore,never()).setLatestConstraintIntroducingTx(transactionId);
  verify(cacheAccess,times(1)).removeSchemaRuleFromCache(command.getKey());
}
