{
  final NeoCommandHandler applier=newApplier(true);
  final NeoCommandHandler indexApplier=newIndexApplier(TransactionApplicationMode.RECOVERY);
  final DynamicRecord record=DynamicRecord.dynamicRecord(21,true);
  record.setInUse(false);
  final Collection<DynamicRecord> recordsAfter=Arrays.asList(record);
  final IndexRule rule=IndexRule.indexRule(0,1,2,new SchemaIndexProvider.Descriptor("K","X.Y"));
  final Command.SchemaRuleCommand command=new Command.SchemaRuleCommand().init(Collections.<DynamicRecord>emptyList(),recordsAfter,rule);
  final boolean result=applier.visitSchemaRuleCommand(command) & indexApplier.visitSchemaRuleCommand(command);
  applyAndClose(applier,indexApplier);
  assertTrue(result);
  verify(schemaStore,times(1)).setHighestPossibleIdInUse(record.getId());
  verify(schemaStore,times(1)).updateRecord(record);
  verify(indexingService,times(1)).dropIndex(rule);
  verify(cacheAccess,times(1)).removeSchemaRuleFromCache(command.getKey());
}
