{
  final CommandHandler applier=newApplier(true);
  final DynamicRecord record=DynamicRecord.dynamicRecord(21,true);
  final Collection<DynamicRecord> recordsAfter=Arrays.asList(record);
  final UniquePropertyConstraintRule rule=UniquePropertyConstraintRule.uniquenessConstraintRule(0l,1,2,3l);
  final Command.SchemaRuleCommand command=new Command.SchemaRuleCommand().init(Collections.<DynamicRecord>emptyList(),recordsAfter,rule);
  applier.begin(new TransactionToApply(new PhysicalTransactionRepresentation(Arrays.<Command>asList(command)),transactionId));
  final boolean result=applier.visitSchemaRuleCommand(command);
  applier.end();
  applyAndClose(applier);
  assertFalse(result);
  verify(schemaStore,times(1)).setHighestPossibleIdInUse(record.getId());
  verify(schemaStore,times(1)).updateRecord(record);
  verify(metaDataStore,times(1)).setLatestConstraintIntroducingTx(transactionId);
  verify(cacheAccess,times(1)).addSchemaRule(rule);
}
