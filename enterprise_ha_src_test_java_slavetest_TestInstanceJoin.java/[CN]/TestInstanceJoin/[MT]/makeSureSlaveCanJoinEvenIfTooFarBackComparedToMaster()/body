{
  String key="foo";
  String value="bar";
  HighlyAvailableGraphDatabase master=null;
  HighlyAvailableGraphDatabase slave=null;
  String masterDir=testDirectory.directory("master").getAbsolutePath();
  String slaveDir=testDirectory.directory("slave").getAbsolutePath();
  try {
    master=start(masterDir,0,stringMap(keep_logical_logs.name(),"1 txs",ClusterSettings.initial_hosts.name(),"127.0.0.1:5001"));
    createNode(master,"something","unimportant");
    checkPoint(master);
    slave=start(slaveDir,1,stringMap(ClusterSettings.initial_hosts.name(),"127.0.0.1:5001,127.0.0.1:5002"));
    slave.shutdown();
    createNode(master,key,value);
    checkPoint(master);
    rotateLog(master);
    master.shutdown();
    master=start(masterDir,0,stringMap(keep_logical_logs.name(),"1 txs",ClusterSettings.initial_hosts.name(),"127.0.0.1:5001"));
    int importantNodeCount=10;
    for (int i=0; i < importantNodeCount; i++) {
      createNode(master,key,value);
      checkPoint(master);
      rotateLog(master);
    }
    checkPoint(master);
    slave=start(slaveDir,1,stringMap(ClusterSettings.initial_hosts.name(),"127.0.0.1:5001,127.0.0.1:5002"));
    slave.getDependencyResolver().resolveDependency(UpdatePullerClient.class).pullUpdates();
    try (Transaction ignore=slave.beginTx()){
      assertEquals("store contents differ",importantNodeCount + 1,nodesHavingProperty(slave,key,value));
    }
   }
  finally {
    if (slave != null) {
      slave.shutdown();
    }
    if (master != null) {
      master.shutdown();
    }
  }
}
