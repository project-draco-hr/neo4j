{
  if (committed) {
    throw new XAException("Cannot rollback partialy commited " + "transaction[" + getIdentifier() + "]. Recover and "+ "commit");
  }
  try {
    for (    RelationshipTypeRecord record : relTypeRecords.values()) {
      if (record.isCreated()) {
        getRelationshipTypeStore().freeId(record.getId());
        for (        DynamicRecord dynamicRecord : record.getTypeRecords()) {
          if (dynamicRecord.isCreated()) {
            getRelationshipTypeStore().freeBlockId(dynamicRecord.getId());
          }
        }
      }
      removeRelationshipTypeFromCache(record.getId());
    }
    for (    NodeRecord record : nodeRecords.values()) {
      if (record.isCreated()) {
        getNodeStore().freeId(record.getId());
      }
      removeNodeFromCache(record.getId());
    }
    for (    RelationshipRecord record : relRecords.values()) {
      if (record.isCreated()) {
        getRelationshipStore().freeId(record.getId());
      }
      removeRelationshipFromCache(record.getId());
    }
    for (    PropertyIndexRecord record : propIndexRecords.values()) {
      if (record.isCreated()) {
        getPropertyStore().getIndexStore().freeId(record.getId());
        for (        DynamicRecord dynamicRecord : record.getKeyRecords()) {
          if (dynamicRecord.isCreated()) {
            getPropertyStore().getIndexStore().freeBlockId(dynamicRecord.getId());
          }
        }
      }
    }
    for (    PropertyRecord record : propertyRecords.values()) {
      if (record.getNodeId() != -1) {
        removeNodeFromCache(record.getNodeId());
      }
 else       if (record.getRelId() != -1) {
        removeRelationshipFromCache(record.getRelId());
      }
      if (record.isCreated()) {
        getPropertyStore().freeId(record.getId());
        for (        DynamicRecord dynamicRecord : record.getValueRecords()) {
          if (dynamicRecord.isCreated()) {
            if (dynamicRecord.getType() == PropertyType.STRING.intValue()) {
              getPropertyStore().freeStringBlockId(dynamicRecord.getId());
            }
 else             if (dynamicRecord.getType() == PropertyType.ARRAY.intValue()) {
              getPropertyStore().freeArrayBlockId(dynamicRecord.getId());
            }
 else {
              throw new RuntimeException("Unkown type");
            }
          }
        }
      }
    }
  }
  finally {
    nodeRecords.clear();
    propertyRecords.clear();
    relRecords.clear();
    relTypeRecords.clear();
    propIndexRecords.clear();
    nodeCommands.clear();
    propCommands.clear();
    propIndexCommands.clear();
    relCommands.clear();
    relTypeCommands.clear();
  }
}
