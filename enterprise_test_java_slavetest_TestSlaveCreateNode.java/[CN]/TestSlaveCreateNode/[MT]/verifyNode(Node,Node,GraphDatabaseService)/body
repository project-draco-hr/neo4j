{
  System.out.println("[" + node + "]");
  verifyProperties(node,otherNode);
  Set<Long> otherRelIds=new HashSet<Long>();
  for (  Relationship otherRel : otherNode.getRelationships(Direction.OUTGOING)) {
    otherRelIds.add(otherRel.getId());
  }
  for (  Relationship rel : node.getRelationships(Direction.OUTGOING)) {
    Relationship otherRel=otherDb.getRelationshipById(rel.getId());
    System.out.println(tab(1) + rel.getStartNode() + " --["+ rel.getType().name()+ ","+ rel.getId()+ "]-> "+ rel.getEndNode());
    verifyProperties(rel,otherRel);
    if (rel.getStartNode().getId() != otherRel.getStartNode().getId()) {
      throw new RuntimeException("Start node differs on " + rel);
    }
    if (rel.getEndNode().getId() != otherRel.getEndNode().getId()) {
      throw new RuntimeException("End node differs on " + rel);
    }
    if (!rel.getType().name().equals(otherRel.getType().name())) {
      throw new RuntimeException("Type differs on " + rel);
    }
    otherRelIds.remove(rel.getId());
  }
  if (!otherRelIds.isEmpty()) {
    throw new RuntimeException("Other node " + otherNode + " has more relationships "+ otherRelIds);
  }
}
