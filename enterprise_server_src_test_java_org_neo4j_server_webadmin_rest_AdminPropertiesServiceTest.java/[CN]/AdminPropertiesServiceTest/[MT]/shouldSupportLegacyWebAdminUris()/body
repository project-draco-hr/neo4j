{
  UriInfo mockUri=mock(UriInfo.class);
  URI baseUri=new URI("http://peteriscool.com:6666/foo/bar?awesome=true");
  when(mockUri.getBaseUri()).thenReturn(baseUri);
  NeoServer mockServer=mock(NeoServer.class);
  when(mockServer.managementApiUri()).thenReturn(new URI("http://peteriscool.com:6666/management"));
  when(mockServer.restApiUri()).thenReturn(new URI("http://peteriscool.com:6666/data"));
  AdminPropertiesService adminPropertiesService=new AdminPropertiesService(mockUri,mockServer,new OutputFormat(new JsonFormat(),baseUri,null));
  Response response=adminPropertiesService.getValue("neo4j-servers");
  String entity=new String((byte[])response.getEntity(),"UTF-8");
  assertIsValidJson(entity);
  assertThat(entity,containsString(mockServer.managementApiUri().toString()));
  assertThat(entity,containsString(mockServer.restApiUri().toString()));
}
