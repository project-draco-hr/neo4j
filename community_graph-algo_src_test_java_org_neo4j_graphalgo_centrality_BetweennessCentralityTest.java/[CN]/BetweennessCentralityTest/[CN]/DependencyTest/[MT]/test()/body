{
  this.doneCalculation=true;
  Node startNode=graph.getNode("a");
  singleSourceShortestPath.reset();
  singleSourceShortestPath.setStartNode(startNode);
  Map<Node,List<Relationship>> predecessors=singleSourceShortestPath.getPredecessors();
  Map<Node,List<Relationship>> successors=Util.reversedPredecessors(predecessors);
  PathCounter counter=new Util.PathCounter(predecessors);
  getAndUpdateNodeDependency(startNode,true,successors,counter,new HashMap<Node,Double>());
  Double adjustment=0.5;
  assertCentrality(this,"a",0.0 * adjustment);
  assertCentrality(this,"b",2.5 * adjustment);
  assertCentrality(this,"c",2.5 * adjustment);
  assertCentrality(this,"d",4.0 * adjustment);
  assertCentrality(this,"e",3.0 * adjustment);
  assertCentrality(this,"f",0.5 * adjustment);
  assertCentrality(this,"g",0.5 * adjustment);
  assertCentrality(this,"h",0.0 * adjustment);
}
