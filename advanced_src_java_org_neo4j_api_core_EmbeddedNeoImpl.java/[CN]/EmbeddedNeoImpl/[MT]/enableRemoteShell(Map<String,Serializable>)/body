{
  Map<String,Serializable> properties=initialProperties;
  if (properties == null) {
    properties=Collections.emptyMap();
  }
  try {
    if (shellDependencyAvailable()) {
      this.shellServer=new NeoShellServer(neoService);
      Object port=properties.get("port");
      Object name=properties.get("name");
      this.shellServer.makeRemotelyAvailable(port != null ? (Integer)port : DEFAULT_SHELL_PORT,name != null ? (String)name : DEFAULT_SHELL_NAME);
      return true;
    }
 else {
      log.info("Shell library not available. Neo shell not " + "started. Please add the Neo4j shell jar to the " + "classpath.");
      return false;
    }
  }
 catch (  RemoteException e) {
    throw new IllegalStateException("Can't start remote neo shell: " + e);
  }
}
