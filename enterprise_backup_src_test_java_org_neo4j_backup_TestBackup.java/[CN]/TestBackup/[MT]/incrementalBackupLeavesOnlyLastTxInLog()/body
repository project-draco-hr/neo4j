{
  GraphDatabaseAPI db=null;
  ServerInterface server=null;
  try {
    createInitialDataSet(serverPath);
    server=startServer(serverPath);
    OnlineBackup backup=OnlineBackup.from("127.0.0.1");
    backup.full(backupPath.getPath());
    assertTrue("Should be consistent",backup.isConsistent());
    shutdownServer(server);
    server=null;
    addMoreData(serverPath);
    server=startServer(serverPath);
    backup.incremental(backupPath.getPath());
    assertTrue("Should be consistent",backup.isConsistent());
    shutdownServer(server);
    server=null;
    new GraphDatabaseFactory().newEmbeddedDatabase(backupPath.getPath()).shutdown();
    new GraphDatabaseFactory().newEmbeddedDatabase(backupPath.getPath()).shutdown();
    addMoreData(serverPath);
    server=startServer(serverPath);
    backup.incremental(backupPath.getPath());
    assertTrue("Should be consistent",backup.isConsistent());
    shutdownServer(server);
    server=null;
    int logsFound=backupPath.listFiles(new FilenameFilter(){
      @Override public boolean accept(      File dir,      String name){
        return name.startsWith("nioneo_logical.log") && !name.endsWith("active");
      }
    }
).length;
    assertEquals(2,logsFound);
    assertMetadataAboutLastTransactionExists(backupPath);
  }
  finally {
    if (db != null) {
      db.shutdown();
    }
    if (server != null) {
      shutdownServer(server);
    }
  }
}
