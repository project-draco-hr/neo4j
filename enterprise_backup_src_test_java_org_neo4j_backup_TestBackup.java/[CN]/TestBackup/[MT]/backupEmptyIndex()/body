{
  String key="name";
  String value="Neo";
  GraphDatabaseService db=new GraphDatabaseFactory().newEmbeddedDatabaseBuilder(serverPath.getPath()).setConfig(OnlineBackupSettings.online_backup_enabled,Settings.TRUE).newGraphDatabase();
  try {
    Index<Node> index;
    Node node;
    try (Transaction tx=db.beginTx()){
      index=db.index().forNodes(key);
      node=db.createNode();
      node.setProperty(key,value);
      tx.success();
    }
     OnlineBackup backup=OnlineBackup.from("127.0.0.1").full(backupPath.getPath());
    assertTrue("Should be consistent",backup.isConsistent());
    assertEquals(DbRepresentation.of(db),DbRepresentation.of(backupPath));
    FileUtils.deleteDirectory(new File(backupPath.getPath()));
    backup=OnlineBackup.from("127.0.0.1").full(backupPath.getPath());
    assertTrue("Should be consistent",backup.isConsistent());
    assertEquals(DbRepresentation.of(db),DbRepresentation.of(backupPath));
    try (Transaction tx=db.beginTx()){
      index.add(node,key,value);
      tx.success();
    }
     FileUtils.deleteDirectory(new File(backupPath.getPath()));
    backup=OnlineBackup.from("127.0.0.1").full(backupPath.getPath());
    assertTrue("Should be consistent",backup.isConsistent());
    assertEquals(DbRepresentation.of(db),DbRepresentation.of(backupPath));
  }
  finally {
    db.shutdown();
  }
}
