{
  File file=file(0);
  final byte byteValue=(byte)5;
  final short shortValue=(short)56;
  final int intValue=32145;
  final long longValue=5689456895869L;
  final float floatValue=12.12345f;
  final double doubleValue=3548.45748D;
  final byte[] byteArrayValue=new byte[]{1,2,3,4,5,6,7,8,9};
  writeSomeData(file,new Visitor<ByteBuffer,IOException>(){
    @Override public boolean visit(    ByteBuffer element) throws IOException {
      element.put(byteValue);
      element.putShort(shortValue);
      element.putInt(intValue);
      element.putLong(longValue);
      element.putFloat(floatValue);
      element.putDouble(doubleValue);
      element.put(byteArrayValue);
      return true;
    }
  }
);
  try (ReadAheadLogChannel channel=new ReadAheadLogChannel(new PhysicalLogVersionedStoreChannel(fs.open(file,"r")),LogVersionBridge.NO_MORE_CHANNELS,16)){
    assertEquals(byteValue,channel.get());
    assertEquals(shortValue,channel.getShort());
    assertEquals(intValue,channel.getInt());
    assertEquals(longValue,channel.getLong());
    assertEquals(floatValue,channel.getFloat(),0.1f);
    assertEquals(doubleValue,channel.getDouble(),0.1d);
    byte[] bytes=new byte[byteArrayValue.length];
    channel.get(bytes,byteArrayValue.length);
    assertArrayEquals(byteArrayValue,bytes);
  }
 }
