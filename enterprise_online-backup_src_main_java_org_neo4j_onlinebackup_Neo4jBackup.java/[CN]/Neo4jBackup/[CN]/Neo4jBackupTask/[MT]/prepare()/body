{
  logger.fine("Checking and preparing data source: [" + resourceName + "]");
  if (src.getCreationTime() != dst.getCreationTime() && src.getIdentifier() != dst.getIdentifier()) {
    String message="Source[" + src.getCreationTime() + ","+ src.getIdentifier()+ "] is not same as destination["+ dst.getCreationTime()+ ","+ dst.getIdentifier()+ "] for resource ["+ resourceName+ "]";
    logger.severe(message);
    throw new IllegalStateException(message);
  }
  srcVersion=src.getVersion();
  dstVersion=dst.getVersion();
  if (srcVersion < dstVersion) {
    String message="Source srcVersion[" + srcVersion + "] < destination srcVersion["+ dstVersion+ "] for resource ["+ resourceName+ "]";
    logger.severe(message);
    throw new IllegalStateException(message);
  }
  src.rotateLog();
  srcVersion=src.getVersion();
  if (srcVersion < dstVersion) {
    final String message="Source srcVersion[" + srcVersion + "] < destination srcVersion["+ dstVersion+ "] after rotate for resource ["+ resourceName+ "]";
    logger.severe(message);
    throw new IllegalStateException(message);
  }
  for (long i=dstVersion; i < srcVersion; i++) {
    if (!src.hasLogicalLog(i)) {
      String message="Missing log entry in backup source: [" + i + "] in resource ["+ resourceName+ "]. Can not perform backup.";
      logger.severe(message);
      throw new IllegalStateException(message);
    }
  }
  dst.makeBackupSlave();
}
