{
  PersistenceWindow persistenceWindow=windowPool.acquire(id,OperationType.READ);
  try {
    Buffer buffer=persistenceWindow.getOffsettedBuffer(id);
    long inUseByte=buffer.get();
    boolean inUse=(inUseByte & 0x1) == Record.IN_USE.intValue();
    if (!inUse) {
      throw new IllegalArgumentException(MessageFormat.format("Record {0} not in use",id));
    }
    LegacyPropertyRecord record=new LegacyPropertyRecord(id);
    long typeInt=buffer.getInt();
    record.setType(getEnumType((int)typeInt & 0xFFFF));
    record.setInUse(true);
    record.setKeyIndexId(buffer.getInt());
    record.setPropBlock(buffer.getLong());
    long prevProp=buffer.getUnsignedInt();
    long prevModifier=(inUseByte & 0xF0L) << 28;
    long nextProp=buffer.getUnsignedInt();
    long nextModifier=(typeInt & 0xF0000L) << 16;
    record.setPrevProp(LegacyStore.longFromIntAndMod(prevProp,prevModifier));
    record.setNextProp(LegacyStore.longFromIntAndMod(nextProp,nextModifier));
    return record;
  }
  finally {
    windowPool.release(persistenceWindow);
  }
}
