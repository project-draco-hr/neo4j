{
  return new Statement(){
    @Override public void evaluate() throws Throwable {
      gdb=(GraphDatabaseAPI)new TestGraphDatabaseFactory().newImpermanentDatabase();
      Neo4jJobScheduler scheduler=life.add(new Neo4jJobScheduler());
      DependencyResolver resolver=gdb.getDependencyResolver();
      StandardSessions sessions=life.add(new StandardSessions(gdb,new UsageData(),NullLogService.getInstance(),resolver.resolveDependency(ThreadToStatementContextBridge.class),resolver.resolveDependency(QueryExecutionEngine.class)));
      actual=new ThreadedSessions(sessions,scheduler,NullLogService.getInstance());
      life.start();
      try {
        base.evaluate();
      }
  finally {
        try {
          for (          Session session : startedSessions) {
            session.close();
          }
        }
 catch (        Throwable e) {
          e.printStackTrace();
        }
        gdb.shutdown();
      }
    }
  }
;
}
