{
  return new Statement(){
    @Override public void evaluate() throws Throwable {
      Map<Setting<?>,String> config=new HashMap<>();
      config.put(GraphDatabaseSettings.auth_enabled,"false");
      gdb=new TestGraphDatabaseFactory().newImpermanentDatabase(config);
      Neo4jJobScheduler scheduler=life.add(new Neo4jJobScheduler());
      StandardSessions sessions=life.add(new StandardSessions((GraphDatabaseAPI)gdb,new UsageData(),NullLogService.getInstance()));
      actual=new ThreadedSessions(sessions,scheduler,NullLogService.getInstance());
      life.start();
      try {
        base.evaluate();
      }
  finally {
        try {
          for (          Session session : startedSessions) {
            session.close();
          }
        }
 catch (        Throwable e) {
          e.printStackTrace();
        }
        gdb.shutdown();
      }
    }
  }
;
}
