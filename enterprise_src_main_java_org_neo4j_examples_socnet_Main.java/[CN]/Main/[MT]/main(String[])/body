{
  GraphDatabaseService graphDb=new EmbeddedGraphDatabase("target/socnetdb");
  IndexService index=new LuceneIndexService(graphDb);
  try {
    PersonFactory personFactory=new PersonFactory(graphDb,index);
    System.out.println("Setup, creating social network...");
    setupSocialNetwork(graphDb,personFactory,1000,10);
    String name="person#" + r.nextInt(1000);
    Person person1=personFactory.getPersonByName(name);
    System.out.println("\n" + person1 + " friends:");
    for (    Person friend : person1.getFriends()) {
      System.out.println("\t" + friend);
    }
    System.out.println("\n" + person1 + " friends and friends of friends:");
    for (    Person friend : person1.getFriendsOfFriends()) {
      System.out.println("\t" + friend);
    }
    Person person2=null;
    do {
      name="person#" + r.nextInt(1000);
      person2=personFactory.getPersonByName(name);
    }
 while (person1.equals(person2));
    System.out.println("\n" + person1 + " is connected to "+ person2+ " by path: ");
    int personCount=0;
    for (    Person personInPath : person1.getPersonsFromMeTo(person2,4)) {
      personCount++;
      System.out.println("\t" + personInPath);
    }
    if (personCount == 2) {
      System.out.println("\nRemoving friendship between " + person1 + " and "+ person2);
      person1.removeFriend(person2);
    }
 else {
      System.out.println("\nCreating friendship between " + person1 + " and "+ person2);
      person1.addFriend(person2);
    }
    System.out.println("\nAnd now " + person1 + " is connected to "+ person2+ " by path: ");
    for (    Person personInPath : person1.getPersonsFromMeTo(person2,4)) {
      System.out.println("\t" + personInPath);
    }
    System.out.print("\ncleanup, deleting social network...");
    deleteSocialGraph(graphDb,personFactory);
    System.out.println(" done");
  }
  finally {
    index.shutdown();
    graphDb.shutdown();
  }
}
