{
  int numEdges=100;
  GraphDatabaseService graphDB=getGraphDb();
  Node[] nodes=new Node[256];
  for (int num_nodes=0; num_nodes < nodes.length; num_nodes+=1) {
    nodes[num_nodes]=graphDB.createNode();
  }
  newTransaction();
  Node hub=nodes[4];
  int nextID=7;
  RelationshipType outtie=withName("outtie");
  RelationshipType innie=withName("innie");
  for (int k=0; k < numEdges; k++) {
    Node neighbor=nodes[nextID];
    nextID+=7;
    nextID&=255;
    if (nextID == 0) {
      nextID=1;
    }
    hub.createRelationshipTo(neighbor,outtie);
  }
  newTransaction();
  for (int k=0; k < numEdges; k+=1) {
    Node neighbor=nodes[nextID];
    nextID+=7;
    nextID&=255;
    if (nextID == 0) {
      nextID=1;
    }
    neighbor.createRelationshipTo(hub,innie);
  }
  commit();
  newTransaction();
  hub=graphDB.getNodeById(hub.getId());
  int count=0;
  for (  Relationship ignore : hub.getRelationships()) {
    count+=Iterables.count(hub.getRelationships());
  }
  assertEquals(40000,count);
  count=0;
  for (  @SuppressWarnings("unused") Relationship r1 : hub.getRelationships()) {
    count+=Iterables.count(hub.getRelationships());
  }
  assertEquals(40000,count);
  commit();
}
