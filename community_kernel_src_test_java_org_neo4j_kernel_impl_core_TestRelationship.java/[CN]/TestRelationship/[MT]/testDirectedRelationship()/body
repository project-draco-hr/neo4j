{
  Node node1=getGraphDb().createNode();
  Node node2=getGraphDb().createNode();
  Relationship rel2=node1.createRelationshipTo(node2,MyRelTypes.TEST);
  Relationship rel3=node2.createRelationshipTo(node1,MyRelTypes.TEST);
  Node[] nodes=rel2.getNodes();
  assertEquals(2,nodes.length);
  assertTrue(nodes[0].equals(node1) && nodes[1].equals(node2));
  nodes=rel3.getNodes();
  assertEquals(2,nodes.length);
  assertTrue(nodes[0].equals(node2) && nodes[1].equals(node1));
  assertEquals(node1,rel2.getStartNode());
  assertEquals(node2,rel2.getEndNode());
  assertEquals(node2,rel3.getStartNode());
  assertEquals(node1,rel3.getEndNode());
  Relationship[] relArray=getRelationshipArray(node1.getRelationships(MyRelTypes.TEST,Direction.OUTGOING));
  assertEquals(1,relArray.length);
  assertEquals(rel2,relArray[0]);
  relArray=getRelationshipArray(node1.getRelationships(MyRelTypes.TEST,Direction.INCOMING));
  assertEquals(1,relArray.length);
  assertEquals(rel3,relArray[0]);
  relArray=getRelationshipArray(node2.getRelationships(MyRelTypes.TEST,Direction.OUTGOING));
  assertEquals(1,relArray.length);
  assertEquals(rel3,relArray[0]);
  relArray=getRelationshipArray(node2.getRelationships(MyRelTypes.TEST,Direction.INCOMING));
  assertEquals(1,relArray.length);
  assertEquals(rel2,relArray[0]);
  rel2.delete();
  rel3.delete();
  node1.delete();
  node2.delete();
}
