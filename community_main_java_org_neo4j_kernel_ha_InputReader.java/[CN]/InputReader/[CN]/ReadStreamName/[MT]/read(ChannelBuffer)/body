{
  int toRead=Math.min(bytesLeft,buffer.readableBytes());
  buffer.readBytes(data,data.length - bytesLeft,toRead);
  bytesLeft-=toRead;
  if (bytesLeft <= 0) {
    final String name=makeString(data,buffer.order());
    state=new ReadInteger(1){
      @Override ReaderState done(      long numTx){
        if (numTx == 0) {
          return streams.addStream(name,new TransactionStream(Collections.<Pair<Long,ReadableByteChannel>>emptyList()));
        }
        return new ReadSingleTransactionStream(streams,name,(int)numTx);
      }
      @Override Response<?> read(      ChannelBuffer buffer){
        super.read(buffer);
        if (state == null) {
          return new Response<Object>(streams.payload,streams.streams);
        }
 else {
          return null;
        }
      }
    }
;
  }
  return null;
}
