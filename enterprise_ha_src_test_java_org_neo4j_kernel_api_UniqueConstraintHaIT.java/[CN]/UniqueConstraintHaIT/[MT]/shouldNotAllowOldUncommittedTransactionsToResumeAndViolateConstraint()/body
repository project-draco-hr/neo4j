{
  ClusterManager.ManagedCluster cluster=clusterRule.startCluster(stringMap(HaSettings.read_timeout.name(),"4000s"));
  HighlyAvailableGraphDatabase slave=cluster.getAnySlave();
  HighlyAvailableGraphDatabase master=cluster.getMaster();
  ThreadToStatementContextBridge txBridge=slave.getDependencyResolver().resolveDependency(ThreadToStatementContextBridge.class);
  createUser(master,"Bob");
  slave.beginTx();
  slave.createNode(label("User")).setProperty("name","Bob");
  TopLevelTransaction slaveTx=txBridge.getTopLevelTransactionBoundToThisThread(true);
  txBridge.unbindTransactionFromCurrentThread();
  try (Transaction tx=master.beginTx()){
    master.schema().constraintFor(label("User")).assertPropertyIsUnique("name").create();
    tx.success();
  }
   txBridge.bindTransactionToCurrentThread(slaveTx);
  try {
    slaveTx.success();
    slaveTx.finish();
    fail("Expected this commit to fail :(");
  }
 catch (  Exception e) {
    XAException cause=(XAException)e.getCause();
    assertThat(cause.errorCode,equalTo(XAException.XA_RBINTEGRITY));
  }
  assertOneBob(master);
  cluster.sync();
  assertOneBob(slave);
  createUser(slave,"Steven");
  createUser(master,"Caroline");
}
