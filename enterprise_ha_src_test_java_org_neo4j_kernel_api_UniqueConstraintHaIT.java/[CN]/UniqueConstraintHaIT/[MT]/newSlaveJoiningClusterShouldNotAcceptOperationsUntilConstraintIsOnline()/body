{
  ClusterManager.ManagedCluster cluster=clusterRule.startCluster();
  HighlyAvailableGraphDatabase master=cluster.getMaster();
  HighlyAvailableGraphDatabase slave=cluster.getAnySlave();
  File slaveStoreDirectory=cluster.getStoreDir(slave);
  ClusterManager.RepairKit shutdownSlave=cluster.shutdown(slave);
  deleteRecursively(slaveStoreDirectory);
  try (Transaction tx=master.beginTx()){
    master.schema().constraintFor(label("User")).assertPropertyIsUnique("name").create();
    tx.success();
  }
   slave=shutdownSlave.repair();
  try (Transaction ignored=slave.beginTx()){
    assertThat(single(slave.schema().getConstraints()),instanceOf(PropertyUniqueConstraintDefinition.class));
    PropertyUniqueConstraintDefinition constraint=(PropertyUniqueConstraintDefinition)single(slave.schema().getConstraints());
    assertThat(single(constraint.getPropertyKeys()),equalTo("name"));
    assertThat(constraint.getLabel(),equalTo(label("User")));
  }
 }
