{
  long nextRel=position.getNextRecord();
  List<RelationshipData> rels=new ArrayList<RelationshipData>();
  for (int i=0; i < getRelGrabSize() && nextRel != Record.NO_NEXT_RELATIONSHIP.intValue(); i++) {
    RelationshipRecord relRecord=getRelationshipStore().getChainRecord(nextRel);
    if (relRecord == null) {
      position.setNextRecord(Record.NO_NEXT_RELATIONSHIP.intValue());
      return rels;
    }
    long firstNode=relRecord.getFirstNode();
    long secondNode=relRecord.getSecondNode();
    if (relRecord.inUse()) {
      rels.add(new RelationshipData(relRecord.getId(),firstNode,secondNode,relRecord.getType()));
    }
 else {
      i--;
    }
    if (firstNode == nodeId) {
      nextRel=relRecord.getFirstNextRel();
    }
 else     if (secondNode == nodeId) {
      nextRel=relRecord.getSecondNextRel();
    }
 else {
      System.out.println(relRecord);
      throw new InvalidRecordException("Node[" + nodeId + "] is neither firstNode["+ firstNode+ "] nor secondNode["+ secondNode+ "] for Relationship["+ relRecord.getId()+ "]");
    }
  }
  position.setNextRecord(nextRel);
  return rels;
}
