{
  TransactionCommitProcess commitProcess=mock(TransactionCommitProcess.class);
  GlobalSessionTrackerState<RaftTestMember> sessionTrackerState=spy(new GlobalSessionTrackerState<>());
  RecoverTransactionLogState recoverTransactionLogState=mock(RecoverTransactionLogState.class);
  when(recoverTransactionLogState.findLastCommittedIndex()).thenReturn(-1L);
  ReplicatedTransactionStateMachine<RaftTestMember> stateMachine=stateMachine(commitProcess,sessionTrackerState,recoverTransactionLogState);
  ReplicatedTransaction<RaftTestMember> rtx=replicatedTx();
  final int commitAtRaftLogIndex=99;
  stateMachine.applyCommand(rtx,commitAtRaftLogIndex);
  assertEquals(commitAtRaftLogIndex,sessionTrackerState.logIndex());
  stateMachine.applyCommand(rtx,commitAtRaftLogIndex);
  verify(commitProcess,times(1)).commit(any(),any(),any());
  verify(sessionTrackerState,times(1)).update(any(),any(),eq(99L));
}
