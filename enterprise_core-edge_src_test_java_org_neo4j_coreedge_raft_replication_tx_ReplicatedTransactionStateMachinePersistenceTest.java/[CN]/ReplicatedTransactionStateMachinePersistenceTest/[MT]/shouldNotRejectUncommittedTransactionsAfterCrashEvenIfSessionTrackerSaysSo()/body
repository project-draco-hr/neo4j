{
  TransactionCommitProcess commitProcess=mock(TransactionCommitProcess.class);
  when(commitProcess.commit(any(),any(),any())).thenThrow(new TransactionFailureException("testing")).thenReturn(123L);
  ReplicatedTransactionStateMachine<RaftTestMember> rtsm=new ReplicatedTransactionStateMachine<>(commitProcess,new GlobalSession<>(UUID.randomUUID(),RaftTestMember.member(1)),mock(LockTokenManager.class,RETURNS_MOCKS),new CommittingTransactionsRegistry(),new InMemoryGlobalSessionTrackerState<>());
  TransactionRepresentation tx=new PhysicalTransactionRepresentation(Collections.emptySet());
  ReplicatedTransaction<RaftTestMember> rtx=ReplicatedTransactionFactory.createImmutableReplicatedTransaction(tx,new GlobalSession<>(UUID.randomUUID(),RaftTestMember.member(2)),new LocalOperationId(1,0));
  rtsm.setLastCommittedIndex(99);
  try {
    rtsm.onReplicated(rtx,100);
    fail("test design throws exception here");
  }
 catch (  TransactionFailureException thrownByTestDesign) {
  }
  reset(commitProcess);
  rtsm.setLastCommittedIndex(99);
  rtsm.onReplicated(rtx,100);
  verify(commitProcess,times(1)).commit(any(),any(),any());
}
