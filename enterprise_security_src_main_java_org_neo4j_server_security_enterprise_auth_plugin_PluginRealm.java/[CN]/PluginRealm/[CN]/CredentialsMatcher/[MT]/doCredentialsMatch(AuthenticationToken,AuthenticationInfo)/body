{
  CustomCacheableAuthenticationInfo.CredentialsMatcher customCredentialsMatcher=getCustomCredentialsMatcherIfPresent(info);
  if (customCredentialsMatcher != null) {
    Map<String,Object> authToken=((ShiroAuthToken)token).getAuthTokenMap();
    try {
      AuthToken pluginApiAuthToken=PluginApiAuthToken.createFromMap(authToken);
      return customCredentialsMatcher.doCredentialsMatch(pluginApiAuthToken);
    }
 catch (    InvalidAuthTokenException e) {
      throw new AuthenticationException(e.getMessage());
    }
  }
 else   if (info.getCredentials() != null) {
    return secureHasher.getHashedCredentialsMatcher().doCredentialsMatch(PluginShiroAuthToken.of(token),info);
  }
 else {
    if (PluginRealm.this.isAuthenticationCachingEnabled()) {
      log.error("Authentication caching is enabled in plugin %s but it does not return " + "cacheable credentials. This configuration is not secure.",getName());
      return false;
    }
    return true;
  }
}
