{
  HighlyAvailableGraphDatabase initialMaster=cluster.getMaster();
  cluster.shutdown(initialMaster);
  cluster.await(masterAvailable(initialMaster));
  cluster.await(masterSeesSlavesAsAvailable(1));
  createNodeOn(cluster.getMaster());
  cluster.sync();
  LifeSupport life=new LifeSupport();
  ClusterClientModule clusterClient=newClusterClient(life,new InstanceId(1));
  cleanup.add(life);
  final AtomicReference<InstanceId> coordinatorIdWhenReJoined=new AtomicReference<>();
  final CountDownLatch latch=new CountDownLatch(1);
  clusterClient.clusterClient.addClusterListener(new ClusterListener.Adapter(){
    @Override public void enteredCluster(    ClusterConfiguration clusterConfiguration){
      coordinatorIdWhenReJoined.set(clusterConfiguration.getElected(COORDINATOR));
      latch.countDown();
    }
  }
);
  life.start();
  assertTrue(latch.await(20,SECONDS));
  assertEquals(new InstanceId(2),coordinatorIdWhenReJoined.get());
}
