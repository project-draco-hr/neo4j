{
  while (updates.hasNext()) {
    NodeLabelUpdate update=updates.next();
    long[] added=new long[update.getLabelsAfter().length];
    long[] removed=new long[update.getLabelsBefore().length];
    int addedIndex=0, removedIndex=0;
    for (    long labelAfter : update.getLabelsAfter()) {
      if (binarySearch(update.getLabelsBefore(),labelAfter) < 0) {
        added[addedIndex++]=labelAfter;
      }
    }
    for (    long labelBefore : update.getLabelsBefore()) {
      if (binarySearch(update.getLabelsAfter(),labelBefore) < 0) {
        removed[removedIndex++]=labelBefore;
      }
    }
    for (int i=0; i < addedIndex; i++) {
      nodeSetForAdding(added[i]).add(update.getNodeId());
    }
    for (int i=0; i < removedIndex; i++) {
      nodeSetForRemoving(removed[i]).remove(update.getNodeId());
    }
  }
}
