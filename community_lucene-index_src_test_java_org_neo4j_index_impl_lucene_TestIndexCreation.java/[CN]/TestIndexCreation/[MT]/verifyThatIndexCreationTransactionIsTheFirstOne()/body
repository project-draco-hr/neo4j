{
  XaDataSource ds=db.getDependencyResolver().resolveDependency(XaDataSourceManager.class).getXaDataSource(LuceneDataSource.DEFAULT_NAME);
  long version=ds.getCurrentLogVersion();
  ds.rotateLogicalLog();
  ReadableByteChannel log=ds.getLogicalLog(version);
  ByteBuffer buffer=newLogReaderBuffer();
  readLogHeader(buffer,log,true);
  XaCommandFactory cf=new XaCommandFactory(){
    @Override public XaCommand readCommand(    ReadableByteChannel byteChannel,    ByteBuffer buffer) throws IOException {
      return LuceneCommand.readCommand(byteChannel,buffer,null);
    }
  }
;
  int creationIdentifier=-1;
  for (LogEntry entry; (entry=LogIoUtils.readEntry(buffer,log,cf)) != null; ) {
    if (entry instanceof LogEntry.Command && ((LogEntry.Command)entry).getXaCommand() instanceof LuceneCommand.CreateIndexCommand) {
      if (creationIdentifier != -1)       throw new IllegalArgumentException("More than one creation command");
      creationIdentifier=entry.getIdentifier();
    }
    if (entry instanceof LogEntry.Commit) {
      assertTrue("Index creation transaction wasn't the first one",creationIdentifier != -1);
      assertEquals("Index creation transaction wasn't the first one",creationIdentifier,entry.getIdentifier());
      return;
    }
  }
  fail("Didn't find any commit record in log " + version);
}
