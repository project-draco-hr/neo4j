{
  commonState=new CommonContextState(configuration);
  paxosInstances=new PaxosInstanceStore();
  heartbeatContext=new HeartbeatContextImpl(me,commonState,logProvider,timeouts,executor);
  learnerContext=new LearnerContextImpl(me,commonState,logProvider,timeouts,paxosInstances,instanceStore,objectInputStreamFactory,objectOutputStreamFactory,heartbeatContext);
  clusterContext=new ClusterContextImpl(me,commonState,logProvider,timeouts,executor,objectOutputStreamFactory,objectInputStreamFactory,learnerContext,heartbeatContext);
  electionContext=new ElectionContextImpl(me,commonState,logProvider,timeouts,roles,clusterContext,heartbeatContext,electionCredentialsProvider);
  proposerContext=new ProposerContextImpl(me,commonState,logProvider,timeouts,paxosInstances);
  acceptorContext=new AcceptorContextImpl(me,commonState,logProvider,timeouts,instanceStore);
  atomicBroadcastContext=new AtomicBroadcastContextImpl(me,commonState,logProvider,timeouts,executor,heartbeatContext);
  heartbeatContext.setCircularDependencies(clusterContext,learnerContext);
}
