{
  if (startNode == null || endNode == null) {
    throw new RuntimeException("Start or end node undefined.");
  }
  if (doneCalculation) {
    return true;
  }
  doneCalculation=true;
  if (startNode.equals(endNode)) {
    foundPathsMiddleNodes=new HashSet<Node>();
    foundPathsMiddleNodes.add(startNode);
    foundPathsCost=costAccumulator.addCosts(startCost,startCost);
    return true;
  }
  HashMap<Node,CostType> seen1=new HashMap<Node,CostType>();
  HashMap<Node,CostType> seen2=new HashMap<Node,CostType>();
  HashMap<Node,CostType> dists1=new HashMap<Node,CostType>();
  HashMap<Node,CostType> dists2=new HashMap<Node,CostType>();
  DijstraIterator iter1=new DijstraIterator(startNode,predecessors1,seen1,seen2,dists1,dists2,false);
  DijstraIterator iter2=new DijstraIterator(endNode,predecessors2,seen2,seen1,dists2,dists1,true);
  while (iter1.hasNext() && iter2.hasNext()) {
    if (limitReached()) {
      break;
    }
    if (iter1.hasNext()) {
      iter1.next();
    }
    if (limitReached()) {
      break;
    }
    if (!iter1.isDone() && iter2.hasNext()) {
      iter2.next();
    }
    if (iter1.isDone() || iter2.isDone()) {
      return true;
    }
  }
  return false;
}
