{
  startSecondDatabase();
  HighAvailability secondHa=new Neo4jManager(secondDatabase.getDependencyResolver().resolveDependency(JmxKernelExtension.class).getSingleManagementBean(Kernel.class)).getHighAvailabilityBean();
  assertEquals(2,secondHa.getInstancesInCluster().length);
  HighAvailability ha=new Neo4jManager(database.getDependencyResolver().resolveDependency(JmxKernelExtension.class).getSingleManagementBean(Kernel.class)).getHighAvailabilityBean();
  long end=System.currentTimeMillis() + SECONDS.toMillis(300);
  boolean available=false;
  while (System.currentTimeMillis() < end) {
    available=member(ha.getInstancesInCluster(),5002).isAvailable();
    if (!available)     break;
    Thread.sleep(500);
  }
  if (available)   fail("Failed instance didn't show up as such in JMX");
}
