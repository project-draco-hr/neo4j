{
  KernelStatement state=mock(KernelStatement.class);
  Locks.Client locks=mock(Locks.Client.class);
  try {
    IndexReader indexReader=mock(IndexReader.class);
    when(indexReader.seek(Matchers.any())).thenReturn(PrimitiveLongCollections.emptyIterator());
    StorageStatement storageStatement=mock(StorageStatement.class);
    when(storageStatement.getIndexReader(Matchers.<IndexDescriptor>any())).thenReturn(indexReader);
    when(state.getStoreStatement()).thenReturn(storageStatement);
  }
 catch (  IndexNotFoundKernelException e) {
    throw new Error(e);
  }
  when(state.txState()).thenReturn(txState);
  when(state.hasTxStateWithChanges()).thenAnswer(new Answer<Boolean>(){
    @Override public Boolean answer(    InvocationOnMock invocation) throws Throwable {
      return txState.hasChanges();
    }
  }
);
  when(state.locks()).thenReturn(new SimpleStatementLocks(locks));
  when(state.readOperations()).thenReturn(mock(ReadOperations.class));
  return state;
}
