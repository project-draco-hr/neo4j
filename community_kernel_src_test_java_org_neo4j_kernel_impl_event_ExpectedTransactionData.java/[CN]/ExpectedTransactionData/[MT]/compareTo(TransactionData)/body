{
  Set<Node> expectedCreatedNodes=new HashSet<Node>(this.expectedCreatedNodes);
  Set<Relationship> expectedCreatedRelationships=new HashSet<Relationship>(this.expectedCreatedRelationships);
  Set<Node> expectedDeletedNodes=new HashSet<Node>(this.expectedDeletedNodes);
  Set<Relationship> expectedDeletedRelationships=new HashSet<Relationship>(this.expectedDeletedRelationships);
  Map<Node,Map<String,PropertyEntryImpl<Node>>> expectedAssignedNodeProperties=clone(this.expectedAssignedNodeProperties);
  Map<Relationship,Map<String,PropertyEntryImpl<Relationship>>> expectedAssignedRelationshipProperties=clone(this.expectedAssignedRelationshipProperties);
  Map<Node,Map<String,PropertyEntryImpl<Node>>> expectedRemovedNodeProperties=clone(this.expectedRemovedNodeProperties);
  Map<Relationship,Map<String,PropertyEntryImpl<Relationship>>> expectedRemovedRelationshipProperties=clone(this.expectedRemovedRelationshipProperties);
  for (  Node node : data.createdNodes()) {
    assertTrue(expectedCreatedNodes.remove(node));
    assertFalse(data.isDeleted(node));
  }
  assertTrue("Expected some created nodes that weren't seen: " + expectedCreatedNodes,expectedCreatedNodes.isEmpty());
  for (  Relationship rel : data.createdRelationships()) {
    assertTrue(expectedCreatedRelationships.remove(rel));
    assertFalse(data.isDeleted(rel));
  }
  assertTrue(expectedCreatedRelationships.isEmpty());
  for (  Node node : data.deletedNodes()) {
    assertTrue("Unexpected deleted node " + node,expectedDeletedNodes.remove(node));
    assertTrue(data.isDeleted(node));
  }
  assertTrue(expectedDeletedNodes.isEmpty());
  for (  Relationship rel : data.deletedRelationships()) {
    assertTrue(expectedDeletedRelationships.remove(rel));
    assertTrue(data.isDeleted(rel));
  }
  assertTrue(expectedDeletedRelationships.isEmpty());
  for (  PropertyEntry<Node> entry : data.assignedNodeProperties()) {
    checkAssigned(expectedAssignedNodeProperties,entry);
    assertFalse(data.isDeleted(entry.entity()));
  }
  assertTrue(expectedAssignedNodeProperties.isEmpty());
  for (  PropertyEntry<Relationship> entry : data.assignedRelationshipProperties()) {
    checkAssigned(expectedAssignedRelationshipProperties,entry);
    assertFalse(data.isDeleted(entry.entity()));
  }
  assertTrue(expectedAssignedRelationshipProperties.isEmpty());
  for (  PropertyEntry<Node> entry : data.removedNodeProperties()) {
    checkRemoved(expectedRemovedNodeProperties,entry);
  }
  assertTrue(expectedRemovedNodeProperties.isEmpty());
  for (  PropertyEntry<Relationship> entry : data.removedRelationshipProperties()) {
    checkRemoved(expectedRemovedRelationshipProperties,entry);
  }
  assertTrue(expectedRemovedRelationshipProperties.isEmpty());
}
