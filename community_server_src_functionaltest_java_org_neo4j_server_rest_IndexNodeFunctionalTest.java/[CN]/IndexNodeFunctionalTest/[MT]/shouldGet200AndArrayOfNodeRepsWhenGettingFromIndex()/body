{
  String key="myKey";
  String value="myValue";
  String name1="Thomas Anderson";
  String name2="Agent Smith";
  String indexName="matrix";
  final RestRequest request=RestRequest.req();
  JaxRsResponse responseToPost=request.post(functionalTestHelper.nodeUri(),"{\"name\":\"" + name1 + "\"}");
  assertEquals(201,responseToPost.getStatus());
  String location1=responseToPost.getHeaders().getFirst(HttpHeaders.LOCATION);
  responseToPost.close();
  responseToPost=request.post(functionalTestHelper.nodeUri(),"{\"name\":\"" + name2 + "\"}");
  assertEquals(201,responseToPost.getStatus());
  String location2=responseToPost.getHeaders().getFirst(HttpHeaders.LOCATION);
  responseToPost.close();
  responseToPost=request.post(functionalTestHelper.indexNodeUri(indexName,key,value),JsonHelper.createJsonFrom(location1));
  assertEquals(201,responseToPost.getStatus());
  String indexLocation1=responseToPost.getHeaders().getFirst(HttpHeaders.LOCATION);
  responseToPost.close();
  responseToPost=request.post(functionalTestHelper.indexNodeUri(indexName,key,value),JsonHelper.createJsonFrom(location2));
  assertEquals(201,responseToPost.getStatus());
  String indexLocation2=responseToPost.getHeaders().getFirst(HttpHeaders.LOCATION);
  Map<String,String> uriToName=new HashMap<String,String>();
  uriToName.put(indexLocation1,name1);
  uriToName.put(indexLocation2,name2);
  responseToPost.close();
  JaxRsResponse response=RestRequest.req().get(functionalTestHelper.indexNodeUri(indexName,key,value));
  assertEquals(200,response.getStatus());
  Collection<?> items=(Collection<?>)JsonHelper.jsonToSingleValue(response.getEntity(String.class));
  int counter=0;
  for (  Object item : items) {
    Map<?,?> map=(Map<?,?>)item;
    Map<?,?> properties=(Map<?,?>)map.get("data");
    assertNotNull(map.get("self"));
    String indexedUri=(String)map.get("indexed");
    assertEquals(uriToName.get(indexedUri),properties.get("name"));
    counter++;
  }
  assertEquals(2,counter);
  response.close();
}
