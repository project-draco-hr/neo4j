{
  String indexName="bobTheIndex";
  String key="Name";
  long node1=helper.createNode();
  long node2=helper.createNode();
  helper.addNodeToIndex(indexName,key,"Builder2",node1);
  helper.addNodeToIndex(indexName,"Gender","Male",node1);
  helper.addNodeToIndex(indexName,key,"Builder",node2);
  helper.addNodeToIndex(indexName,"Gender","Male",node2);
  String entity=gen.get().expectedStatus(200).get(functionalTestHelper.indexNodeUri(indexName) + "?query=Name:Build~0.1%20AND%20Gender:Male&order=relevance").entity();
  Collection<?> hits=(Collection<?>)JsonHelper.jsonToSingleValue(entity);
  assertEquals(2,hits.size());
  Iterator<LinkedHashMap<String,Object>> it=(Iterator<LinkedHashMap<String,Object>>)hits.iterator();
  LinkedHashMap<String,Object> node2Map=it.next();
  LinkedHashMap<String,Object> node1Map=it.next();
  float score2=((Double)node2Map.get("score")).floatValue();
  float score1=((Double)node1Map.get("score")).floatValue();
  assertTrue("results returned in wrong order for relevance ordering",((String)node2Map.get("self")).endsWith(Long.toString(node2)));
  assertTrue("results returned in wrong order for relevance ordering",((String)node1Map.get("self")).endsWith(Long.toString(node1)));
  assertTrue("scores are reversed",score2 > score1);
  entity=gen.get().expectedStatus(200).get(functionalTestHelper.indexNodeUri(indexName) + "?query=Name:Build~0.1%20AND%20Gender:Male&order=index").entity();
  hits=(Collection<?>)JsonHelper.jsonToSingleValue(entity);
  assertEquals(2,hits.size());
  it=(Iterator<LinkedHashMap<String,Object>>)hits.iterator();
  node1Map=it.next();
  node2Map=it.next();
  score1=((Double)node1Map.get("score")).floatValue();
  score2=((Double)node2Map.get("score")).floatValue();
  assertTrue("results returned in wrong order for index ordering",((String)node1Map.get("self")).endsWith(Long.toString(node1)));
  assertTrue("results returned in wrong order for index ordering",((String)node2Map.get("self")).endsWith(Long.toString(node2)));
  assertTrue("scores are reversed",score2 > score1);
  entity=gen.get().expectedStatus(200).get(functionalTestHelper.indexNodeUri(indexName) + "?query=Name:Build~0.1%20AND%20Gender:Male&order=score").entity();
  hits=(Collection<?>)JsonHelper.jsonToSingleValue(entity);
  assertEquals(2,hits.size());
  it=(Iterator<LinkedHashMap<String,Object>>)hits.iterator();
  node2Map=it.next();
  node1Map=it.next();
  score2=((Double)node2Map.get("score")).floatValue();
  score1=((Double)node1Map.get("score")).floatValue();
  assertTrue("results returned in wrong order for score ordering",((String)node2Map.get("self")).endsWith(Long.toString(node2)));
  assertTrue("results returned in wrong order for score ordering",((String)node1Map.get("self")).endsWith(Long.toString(node1)));
  assertTrue("scores are reversed",score2 > score1);
}
