{
  PrimitiveLongIntMap map=new PrimitiveLongIntHashMap(24);
  map.put(1179059774,54);
  map.put(612612792,91);
  map.put(853030395,81);
  map.put(1821941016,69);
  map.put(815540261,54);
  map.put(2120470777,63);
  map.put(866144206,41);
  map.put(905659306,86);
  map.put(602586792,24);
  map.put(1033857549,61);
  map.put(1570231638,69);
  map.put(30675820,53);
  map.put(433666923,14);
  map.put(1668952952,52);
  map.put(1733960171,14);
  map.put(1240027317,64);
  map.put(250830995,71);
  map.put(1446519846,17);
  map.put(1857052106,78);
  map.put(37351838,26);
  map.put(1523695604,78);
  map.put(1024540180,12);
  map.put(603632507,81);
  map.put(483087335,37);
  map.put(216300592,55);
  map.put(1729046213,72);
  map.put(1397559084,78);
  map.put(802042428,34);
  map.put(1127990805,6);
  map.put(2081866795,53);
  map.put(1528122026,39);
  map.put(642547543,78);
  map.put(1909701557,35);
  map.put(2070740876,40);
  map.put(316027755,18);
  map.put(824089651,63);
  map.put(1082682044,85);
  map.put(154864377,44);
  map.put(26918244,73);
  map.put(808069768,20);
  map.put(38089155,17);
  map.put(1772700678,35);
  map.put(1790535392,82);
  map.put(159186757,10);
  map.put(73305650,52);
  map.put(2025019209,38);
  map.put(922996536,53);
  map.put(1852424925,34);
  map.put(1181179273,9);
  map.put(107520967,11);
  map.put(1702904247,55);
  map.put(1819417390,50);
  map.put(1163114165,57);
  map.put(2036796587,40);
  map.put(2130510197,26);
  map.put(1710533919,70);
  map.put(497498438,48);
  map.put(147722732,8);
  map.remove(802042428);
  map.put(1355114893,90);
  map.put(419675404,62);
  map.put(1722846265,41);
  map.put(1287254514,61);
  map.put(1925017947,8);
  map.put(1290391303,59);
  map.put(1938779966,27);
  int sizeBefore=map.size();
  boolean existedBefore=map.containsKey(1452811669);
  int valueBefore=map.get(1452811669);
  int previous=map.put(1452811669,16);
  boolean existsAfter=map.containsKey(1452811669);
  int valueAfter=map.get(1452811669);
  int sizeAfter=map.size();
  assertEquals("Size before put should have been 64",64,sizeBefore);
  assertFalse("1452811669 should not exist before putting here",existedBefore);
  assertEquals("value before should be -1",-1,valueBefore);
  assertEquals("value returned from put should be -1",-1,previous);
  assertTrue("1452811669 should exist",existsAfter);
  assertEquals("value after putting should be 16",16,valueAfter);
  assertEquals("Size after put should have been 65",65,sizeAfter);
}
