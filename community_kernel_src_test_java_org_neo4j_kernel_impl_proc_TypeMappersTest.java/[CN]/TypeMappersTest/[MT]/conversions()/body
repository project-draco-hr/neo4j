{
  return asList(new Object[]{Object.class,NTAny,"",""},new Object[]{Object.class,NTAny,null,null},new Object[]{Object.class,NTAny,1,1},new Object[]{Object.class,NTAny,true,true},new Object[]{Object.class,NTAny,asList(1,2,3),asList(1,2,3)},new Object[]{Object.class,NTAny,new HashMap<>(),new HashMap<>()},new Object[]{String.class,NTString,"",""},new Object[]{String.class,NTString,"not empty","not empty"},new Object[]{String.class,NTString,null,null},new Object[]{Map.class,NTMap,new HashMap<>(),new HashMap<>()},new Object[]{Map.class,NTMap,new HashMap<String,Object>(){
{
      put("k",1);
    }
  }
,new HashMap<String,Object>(){
{
      put("k",1);
    }
  }
},new Object[]{Map.class,NTMap,null,null},new Object[]{List.class,NTList(NTAny),emptyList(),emptyList()},new Object[]{List.class,NTList(NTAny),asList(1,2,3,4),asList(1,2,3,4)},new Object[]{List.class,NTList(NTAny),asList(asList(1,2),asList("three","four")),asList(asList(1,2),asList("three","four"))},new Object[]{List.class,NTList(NTAny),null,null},new Object[]{listOfListOfMap,NTList(NTList(NTMap)),asList(),asList()},new Object[]{boolean.class,NTBoolean,false,false},new Object[]{boolean.class,NTBoolean,true,true},new Object[]{boolean.class,NTBoolean,null,null},new Object[]{Boolean.class,NTBoolean,false,false},new Object[]{Boolean.class,NTBoolean,true,true},new Object[]{Boolean.class,NTBoolean,null,null},new Object[]{Number.class,NTNumber,1L,1L},new Object[]{Number.class,NTNumber,0L,0L},new Object[]{Number.class,NTNumber,null,null},new Object[]{Number.class,NTNumber,Long.MIN_VALUE,Long.MIN_VALUE},new Object[]{Number.class,NTNumber,Long.MAX_VALUE,Long.MAX_VALUE},new Object[]{Number.class,NTNumber,1D,1D},new Object[]{Number.class,NTNumber,0D,0D},new Object[]{Number.class,NTNumber,1.234D,1.234D},new Object[]{Number.class,NTNumber,null,null},new Object[]{Number.class,NTNumber,Double.MIN_VALUE,Double.MIN_VALUE},new Object[]{Number.class,NTNumber,Double.MAX_VALUE,Double.MAX_VALUE},new Object[]{long.class,NTInteger,1L,1L},new Object[]{long.class,NTInteger,0L,0L},new Object[]{long.class,NTInteger,null,null},new Object[]{long.class,NTInteger,Long.MIN_VALUE,Long.MIN_VALUE},new Object[]{long.class,NTInteger,Long.MAX_VALUE,Long.MAX_VALUE},new Object[]{Long.class,NTInteger,1L,1L},new Object[]{Long.class,NTInteger,0L,0L},new Object[]{Long.class,NTInteger,null,null},new Object[]{Long.class,NTInteger,Long.MIN_VALUE,Long.MIN_VALUE},new Object[]{Long.class,NTInteger,Long.MAX_VALUE,Long.MAX_VALUE},new Object[]{double.class,NTFloat,1D,1D},new Object[]{double.class,NTFloat,0D,0D},new Object[]{double.class,NTFloat,1.234D,1.234D},new Object[]{double.class,NTFloat,null,null},new Object[]{double.class,NTFloat,Double.MIN_VALUE,Double.MIN_VALUE},new Object[]{double.class,NTFloat,Double.MAX_VALUE,Double.MAX_VALUE},new Object[]{Double.class,NTFloat,1D,1D},new Object[]{Double.class,NTFloat,0D,0D},new Object[]{Double.class,NTFloat,1.234D,1.234D},new Object[]{Double.class,NTFloat,null,null},new Object[]{Double.class,NTFloat,Double.MIN_VALUE,Double.MIN_VALUE},new Object[]{Double.class,NTFloat,Double.MAX_VALUE,Double.MAX_VALUE});
}
