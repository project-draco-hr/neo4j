{
  if (graphDatabaseAPI.getDependencyResolver().resolveDependency(ClusterClient.class).getServerId().equals(available) && "master".equals(role)) {
{
      try {
        ClusterMemberAvailability ha=graphDatabaseAPI.getDependencyResolver().resolveDependency(ClusterMemberAvailability.class);
        backupUri=URI.create("backup://" + (server.getSocketAddress().getHostString().contains("0.0.0.0") ? me.getHost() : server.getSocketAddress().getHostString()) + ":"+ server.getSocketAddress().getPort());
        ha.memberIsAvailable(BACKUP,backupUri);
      }
 catch (      Throwable t) {
        throw new RuntimeException(t);
      }
    }
  }
}
