{
  List<DynamicRecord> recordList=new LinkedList<>();
  long blockId=startBlockId;
  int noNextBlock=Record.NO_NEXT_BLOCK.intValue();
  try (PageCursor cursor=storeFile.io(0,PF_SHARED_READ_LOCK)){
    while (blockId != noNextBlock && cursor.next(pageIdForRecord(blockId))) {
      DynamicRecord record=new DynamicRecord(blockId);
      int headerReadResult;
      do {
        cursor.setOffset(offsetForId(blockId));
        headerReadResult=readRecordHeader(cursor,record,false);
        if (headerReadResult == hasDataSignal && readBothHeaderAndData) {
          readRecordData(cursor,record);
        }
      }
 while (cursor.shouldRetry());
      checkForInUse(headerReadResult,record);
      checkForIllegalSize(headerReadResult,record);
      recordList.add(record);
      blockId=record.getNextBlock();
    }
    return recordList;
  }
 catch (  IOException e) {
    throw new UnderlyingStorageException(e);
  }
}
