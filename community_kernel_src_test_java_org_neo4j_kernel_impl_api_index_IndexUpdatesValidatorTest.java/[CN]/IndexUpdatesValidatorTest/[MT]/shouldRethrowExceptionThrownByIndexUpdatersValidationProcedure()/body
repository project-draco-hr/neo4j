{
  long node=1;
  int label=2;
  int property=2;
  NodePropertyCommands commands=createNodeWithLabelAndPropertyCommands(node,label,property);
  TransactionRepresentation tx=new PhysicalTransactionRepresentation(commands);
  LazyIndexUpdates updates=new LazyIndexUpdates(nodeStore,propertyStore,propertyLoader,commands.property(),commands.node());
  IndexCapacityExceededException error=new IndexCapacityExceededException(100,100);
  doThrow(new UnderlyingStorageException(error)).when(indexingService).validate(updates);
  IndexUpdatesValidator validator=newIndexUpdatesValidatorWithMockedDependencies();
  try {
    validator.validate(tx,INTERNAL);
    fail("Should have thrown " + UnderlyingStorageException.class.getSimpleName());
  }
 catch (  UnderlyingStorageException e) {
    assertSame(error,e.getCause());
  }
}
