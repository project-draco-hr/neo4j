{
  try {
    if (!(added.isEmpty() && removed.isEmpty())) {
      storeLayer.nodeVisitDegrees(id,new DegreeVisitor(){
        @Override public void visitDegree(        int type,        int outgoing,        int incoming){
          for (          Integer label : added) {
            counts.incrementCountsForRelationship(label,-1,-1,outgoing);
            counts.incrementCountsForRelationship(-1,-1,label,incoming);
            counts.incrementCountsForRelationship(label,type,-1,outgoing);
            counts.incrementCountsForRelationship(-1,type,label,incoming);
          }
          for (          Integer label : removed) {
            counts.incrementCountsForRelationship(label,-1,-1,-outgoing);
            counts.incrementCountsForRelationship(-1,-1,label,-incoming);
            counts.incrementCountsForRelationship(label,type,-1,-outgoing);
            counts.incrementCountsForRelationship(-1,type,label,-incoming);
          }
        }
      }
);
    }
  }
 catch (  EntityNotFoundException e) {
  }
  for (  Integer label : removed) {
    recordState.removeLabelFromNode(label,id);
  }
  for (  Integer label : added) {
    recordState.addLabelToNode(label,id);
  }
}
