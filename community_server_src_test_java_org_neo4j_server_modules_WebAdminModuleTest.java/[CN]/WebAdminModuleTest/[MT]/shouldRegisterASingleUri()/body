{
  WebServer webServer=mock(WebServer.class);
  NeoServerWithEmbeddedWebServer neoServer=mock(NeoServerWithEmbeddedWebServer.class);
  when(neoServer.baseUri()).thenReturn(new URI("http://localhost:7575"));
  when(neoServer.getWebServer()).thenReturn(webServer);
  Database db=mock(Database.class);
  db.graph=(mock(AbstractGraphDatabase.class));
  Kernel mockKernel=mock(Kernel.class);
  ObjectName mockObjectName=mock(ObjectName.class);
  when(mockKernel.getMBeanQuery()).thenReturn(mockObjectName);
  when(db.graph.getManagementBeans(Kernel.class)).thenReturn(Collections.singleton(mockKernel));
  when(neoServer.getDatabase()).thenReturn(db);
  when(neoServer.getConfiguration()).thenReturn(new MapConfiguration(new HashMap<Object,Object>()));
  CompositeDataSupport result=mock(CompositeDataSupport.class);
  when(result.get("used")).thenReturn(50L);
  when(result.get("max")).thenReturn(1000L);
  MBeanServer mbeanServer=mock(MBeanServer.class);
  when(mbeanServer.getAttribute(any(ObjectName.class),eq("HeapMemoryUsage"))).thenReturn(result);
  setStaticFinalField(JmxUtils.class.getDeclaredField("mbeanServer"),mbeanServer);
  WebAdminModule module=new WebAdminModule();
  module.start(neoServer,null);
  verify(db).setRrdDb(any(RrdDb.class));
}
