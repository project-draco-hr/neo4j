{
  long existingLabelsField=node.getLabelField();
  byte header=getHeader(existingLabelsField);
  long existingLabelsBits=parseLabelsBody(existingLabelsField);
  Collection<DynamicRecord> changedDynamicRecords=Collections.emptyList();
  if (header > 0 && !highHeaderBitSet(header)) {
    long[] newLabelIds=filter(parseInlined(existingLabelsBits,header),labelId);
    boolean inlined=tryInline(newLabelIds,changedDynamicRecords);
    assert inlined;
  }
 else {
    nodeStore.makeHeavy(node,existingLabelsBits);
    Collection<DynamicRecord> existingRecords=node.getDynamicLabelRecords();
    long[] existingLabelIds=nodeStore.getDynamicLabelsArray(existingRecords);
    long[] newLabelIds=filter(existingLabelIds,labelId);
    if (tryInline(newLabelIds,existingRecords)) {
      for (      DynamicRecord record : existingRecords)       record.setInUse(false);
    }
 else {
      Collection<DynamicRecord> newRecords=nodeStore.allocateRecordsForDynamicLabels(newLabelIds,existingRecords.iterator());
      node.setLabelField(dynamicPointer(newRecords),existingRecords);
      if (!newRecords.equals(existingRecords)) {
        for (        DynamicRecord record : existingRecords)         if (!newRecords.contains(record))         record.setInUse(false);
      }
    }
    changedDynamicRecords=existingRecords;
  }
  return changedDynamicRecords;
}
