{
  String hostname1=InetAddress.getLocalHost().getHostName();
  String host1=InetAddress.getLocalHost().getHostAddress();
  StringBuilder host2=new StringBuilder();
  String[] host1Parts=host1.split("\\.");
  for (  String part : host1Parts) {
    int partnum=Integer.parseInt(part);
    host2.append(++partnum % 256 + ".");
  }
  host2.deleteCharAt(host2.length() - 1);
  HostnamePort hostnamePortSinglePort=new HostnamePort(hostname1 + ":1234");
  HostnamePort hostnamePortWithRange=new HostnamePort(hostname1 + ":1234-1236");
  assertTrue(hostnamePortSinglePort.matches(URI.create("ha://" + hostname1 + ":1234")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + hostname1 + ":1235")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host2 + ":1234")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host2 + ":1235")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host1)));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host2)));
  assertTrue(hostnamePortWithRange.matches(URI.create("ha://" + hostname1 + ":1234")));
  assertTrue(hostnamePortWithRange.matches(URI.create("ha://" + hostname1 + ":1235")));
  assertTrue(hostnamePortWithRange.matches(URI.create("ha://" + hostname1 + ":1236")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host2 + ":1234")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host2 + ":1235")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + hostname1 + ":1233")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + hostname1 + ":1237")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + hostname1)));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host2)));
}
