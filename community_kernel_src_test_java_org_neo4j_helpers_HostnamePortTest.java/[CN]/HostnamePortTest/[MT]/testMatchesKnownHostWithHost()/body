{
  String host1=InetAddress.getLocalHost().getHostName();
  String host2="neo4j.org";
  boolean host2Known=true;
  try {
    InetAddress.getByName(host2);
  }
 catch (  UnknownHostException e) {
    host2Known=false;
  }
  assumeTrue(host2Known);
  assumeFalse(host1.equals(host2));
  HostnamePort hostnamePortSinglePort=new HostnamePort(host1 + ":1234");
  assertTrue(hostnamePortSinglePort.matches(URI.create("ha://" + host1 + ":1234")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host1 + ":1235")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host2 + ":1234")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host2 + ":1235")));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host1)));
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + host2)));
  HostnamePort hostnamePortWithRange=new HostnamePort(host1 + ":1234-1236");
  assertTrue(hostnamePortWithRange.matches(URI.create("ha://" + host1 + ":1234")));
  assertTrue(hostnamePortWithRange.matches(URI.create("ha://" + host1 + ":1235")));
  assertTrue(hostnamePortWithRange.matches(URI.create("ha://" + host1 + ":1236")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host2 + ":1234")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host2 + ":1235")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host1 + ":1233")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host1 + ":1237")));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host1)));
  assertFalse(hostnamePortWithRange.matches(URI.create("ha://" + host2)));
  String unknownHost="unknownHost";
  boolean unknownHostUnknown=false;
  try {
    InetAddress.getByName(unknownHost);
  }
 catch (  UnknownHostException e) {
    unknownHostUnknown=true;
  }
  assumeTrue(unknownHostUnknown);
  assertFalse(hostnamePortSinglePort.matches(URI.create("ha://" + unknownHost + ":1234")));
}
