{
  if (countUpdateCondition.test(record)) {
    if (record.inUse()) {
      final Set<Long> firstNodeLabels=labelsFor(nodeStore,engine,records,record.getFirstNode());
      final Set<Long> secondNodeLabels=labelsFor(nodeStore,engine,records,record.getSecondNode());
      final int type=record.getType();
      counts.add(relationshipKey(WILDCARD,WILDCARD,WILDCARD));
      counts.add(relationshipKey(WILDCARD,type,WILDCARD));
      for (      long firstLabel : firstNodeLabels) {
        counts.add(relationshipKey((int)firstLabel,WILDCARD,WILDCARD));
        counts.add(relationshipKey((int)firstLabel,type,WILDCARD));
      }
      for (      long secondLabel : secondNodeLabels) {
        counts.add(relationshipKey(WILDCARD,WILDCARD,(int)secondLabel));
        counts.add(relationshipKey(WILDCARD,type,(int)secondLabel));
      }
      if (COMPUTE_DOUBLE_SIDED_RELATIONSHIP_COUNTS) {
        for (        long firstLabel : firstNodeLabels) {
          for (          long secondLabel : secondNodeLabels) {
            counts.add(relationshipKey((int)firstLabel,WILDCARD,(int)secondLabel));
            counts.add(relationshipKey((int)firstLabel,type,(int)secondLabel));
          }
        }
      }
    }
    inner.check(record,engine,records);
  }
}
