{
  HashSet<String> safe=new HashSet<String>();
  safe.add(Path.class.getName());
  safe.add(Node.class.getName());
  safe.add(Relationship.class.getName());
  safe.add(RelationshipType.class.getName());
  safe.add(DynamicRelationshipType.class.getName());
  safe.add(Lock.class.getName());
  safe.add(NotFoundException.class.getName());
  safe.add(Direction.class.getName());
  safe.add(Evaluation.class.getName());
  safe.add(Object.class.getName());
  safe.add(String.class.getName());
  safe.add(Integer.class.getName());
  safe.add(Long.class.getName());
  safe.add(Float.class.getName());
  safe.add(Double.class.getName());
  safe.add(Boolean.class.getName());
  safe.add("org.neo4j.kernel.impl.traversal.StartNodeTraversalBranch");
  safe.add("org.neo4j.kernel.impl.traversal.TraversalBranchImpl");
  safe.add("org.neo4j.kernel.impl.core.NodeProxy");
  return safe;
}
