{
  boolean fail=false;
  if (!node.inUse()) {
    NodeRecord old=nodes.forceGetRaw(node);
    if (old.inUse()) {
      if (!Record.NO_NEXT_RELATIONSHIP.is(old.getNextRel())) {
        RelationshipRecord rel=rels.forceGetRecord(old.getNextRel());
        if (rel.inUse())         fail|=report.inconsistent(nodes,node,rels,rel,RELATIONSHIP_NOT_REMOVED_FOR_DELETED_NODE);
      }
      fail|=checkPropertyReference(node,nodes,new PropertyOwner.OwningNode(node.getId()));
    }
    return fail;
  }
  long relId=node.getNextRel();
  if (!Record.NO_NEXT_RELATIONSHIP.is(relId)) {
    RelationshipRecord rel=rels.forceGetRecord(relId);
    if (!rel.inUse())     fail|=report.inconsistent(nodes,node,rels,rel,RELATIONSHIP_NOT_IN_USE);
 else     if (!(rel.getFirstNode() == node.getId() || rel.getSecondNode() == node.getId()))     fail|=report.inconsistent(nodes,node,rels,rel,RELATIONSHIP_FOR_OTHER_NODE);
  }
  fail|=checkPropertyReference(node,nodes,new PropertyOwner.OwningNode(node.getId()));
  return fail;
}
