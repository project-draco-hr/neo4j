{
  try {
    IdGenerator.createGenerator("testIdGenerator.id");
    IdGenerator idGenerator=new IdGenerator("testIdGenerator.id",2);
    idGenerator.close();
    try {
      idGenerator.nextId();
      fail("nextId after close should throw exception");
    }
 catch (    IOException e) {
    }
    try {
      idGenerator.freeId(0);
      fail("freeId after close should throw exception");
    }
 catch (    IOException e) {
    }
    idGenerator=new IdGenerator("testIdGenerator.id",2);
    assertEquals(0,idGenerator.nextId());
    assertEquals(1,idGenerator.nextId());
    assertEquals(2,idGenerator.nextId());
    idGenerator.close();
    try {
      idGenerator.nextId();
      fail("nextId after close should throw exception");
    }
 catch (    IOException e) {
    }
    try {
      idGenerator.freeId(0);
      fail("freeId after close should throw exception");
    }
 catch (    IOException e) {
    }
  }
 catch (  IOException e) {
    fail("" + e);
  }
 finally {
    File file=new File("testIdGenerator.id");
    if (file.exists()) {
      assertTrue(file.delete());
    }
  }
}
