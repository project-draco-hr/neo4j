{
  if (startIndex > endIndex) {
    return;
  }
  lastSentIndex=endIndex;
  try {
    int batchSize=(int)(endIndex - startIndex + 1);
    RaftLogEntry[] entries=new RaftLogEntry[batchSize];
    long prevLogIndex=startIndex - 1;
    long prevLogTerm=raftLog.readEntryTerm(prevLogIndex);
    if (prevLogTerm > leaderContext.term) {
      log.warn("%s aborting send. Not leader anymore? %s, prevLogTerm=%d",statusAsString(),leaderContext,prevLogTerm);
      return;
    }
    if ((prevLogIndex == -1 && prevLogTerm != -1) || (prevLogTerm == -1 && prevLogIndex != -1)) {
      log.warn("%s aborting append entry request since someone has pruned away the entries we needed." + "Sending a LogCompactionInfo instead. Leader context=%s, prevLogTerm=%d",statusAsString(),leaderContext,prevLogTerm);
      outbound.send(follower,new RaftMessages.LogCompactionInfo(leader,leaderContext.term,prevLogIndex));
      return;
    }
    RaftMessages.AppendEntries.Request appendRequest=new RaftMessages.AppendEntries.Request(leader,leaderContext.term,prevLogIndex,prevLogTerm,entries,leaderContext.commitIndex);
    try (InFlightLogEntrySupplier logEntrySupplier=new InFlightLogEntrySupplier(raftLog,inFlightMap)){
      for (int offset=0; offset < batchSize; offset++) {
        entries[offset]=logEntrySupplier.get(startIndex + offset);
        if (entries[offset].term() > leaderContext.term) {
          log.warn("%s aborting send. Not leader anymore? %s, entryTerm=%d",statusAsString(),leaderContext,entries[offset].term());
          return;
        }
      }
    }
     outbound.send(follower,appendRequest);
  }
 catch (  IOException e) {
    log.warn(statusAsString() + " exception during batch send",e);
  }
}
