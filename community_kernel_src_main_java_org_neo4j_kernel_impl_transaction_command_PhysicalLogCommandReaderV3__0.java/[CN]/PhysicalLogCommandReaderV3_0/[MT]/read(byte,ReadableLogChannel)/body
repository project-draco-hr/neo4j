{
switch (commandType) {
case NeoCommandType.NODE_COMMAND:
    return visitNodeCommand(channel);
case NeoCommandType.PROP_COMMAND:
  return visitPropertyCommand(channel);
case NeoCommandType.PROP_INDEX_COMMAND:
return visitPropertyKeyTokenCommand(channel);
case NeoCommandType.REL_COMMAND:
return visitRelationshipCommand(channel);
case NeoCommandType.REL_TYPE_COMMAND:
return visitRelationshipTypeTokenCommand(channel);
case NeoCommandType.LABEL_KEY_COMMAND:
return visitLabelTokenCommand(channel);
case NeoCommandType.NEOSTORE_COMMAND:
return visitNeoStoreCommand(channel);
case NeoCommandType.SCHEMA_RULE_COMMAND:
return visitSchemaRuleCommand(channel);
case NeoCommandType.REL_GROUP_COMMAND:
return visitRelationshipGroupCommand(channel);
case NeoCommandType.INDEX_DEFINE_COMMAND:
return visitIndexDefineCommand(channel);
case NeoCommandType.INDEX_ADD_COMMAND:
return visitIndexAddNodeCommand(channel);
case NeoCommandType.INDEX_ADD_RELATIONSHIP_COMMAND:
return visitIndexAddRelationshipCommand(channel);
case NeoCommandType.INDEX_REMOVE_COMMAND:
return visitIndexRemoveCommand(channel);
case NeoCommandType.INDEX_DELETE_COMMAND:
return visitIndexDeleteCommand(channel);
case NeoCommandType.INDEX_CREATE_COMMAND:
return visitIndexCreateCommand(channel);
case NeoCommandType.UPDATE_RELATIONSHIP_COUNTS_COMMAND:
return visitRelationshipCountsCommand(channel);
case NeoCommandType.UPDATE_NODE_COUNTS_COMMAND:
return visitNodeCountsCommand(channel);
default :
throw unknownCommandType(commandType,channel);
}
}
