{
  Args arg=Args.parse(args);
  String from=arg.get("from");
  System.out.println("From is " + from);
  String to=arg.get("to");
  System.out.println("to is " + to);
  File logDirectory=new File(from);
  System.out.println("logDirectory = " + logDirectory);
  NaiveDurableRaftLog log=new NaiveDurableRaftLog(new DefaultFileSystemAbstraction(),logDirectory,new RaftContentSerializer());
  long totalCommittedEntries=log.commitIndex();
  for (int i=0; i <= totalCommittedEntries; i++) {
    ReplicatedContent content=log.readLogEntry(i).content();
    if (content instanceof ReplicatedTransaction) {
      ReplicatedTransaction tx=(ReplicatedTransaction)content;
      ReplicatedTransactionFactory.extractTransactionRepresentation(tx,new byte[0]).accept(new Visitor<StorageCommand,IOException>(){
        @Override public boolean visit(        StorageCommand element) throws IOException {
          System.out.println(element);
          return false;
        }
      }
);
    }
  }
}
