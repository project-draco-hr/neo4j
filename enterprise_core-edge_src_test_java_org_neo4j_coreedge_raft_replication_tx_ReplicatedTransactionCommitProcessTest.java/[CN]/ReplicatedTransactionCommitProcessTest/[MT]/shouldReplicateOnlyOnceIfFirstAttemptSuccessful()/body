{
  Replicator replicator=mock(Replicator.class);
  ReplicatedTransactionStateMachine transactionStateMachine=mock(ReplicatedTransactionStateMachine.class);
  CommittingTransaction future=mock(CommittingTransaction.class);
  CurrentReplicatedLockState.LockSession lockSession=mock(CurrentReplicatedLockState.LockSession.class);
  when(lockSession.id()).thenReturn(0);
  CurrentReplicatedLockState currentReplicatedLockState=mock(CurrentReplicatedLockState.class);
  when(currentReplicatedLockState.currentLockSession()).thenReturn(lockSession);
  when(future.waitUntilCommitted(anyInt(),any(TimeUnit.class))).thenReturn(23l);
  CommittingTransactions txFutures=mock(CommittingTransactionsRegistry.class);
  when(txFutures.register(any(LocalOperationId.class))).thenReturn(future);
  new ReplicatedTransactionCommitProcess(replicator,new LocalSessionPool(coreMember),transactionStateMachine,1,NullLogService.getInstance(),txFutures).commit(tx(),NULL,INTERNAL);
  verify(replicator,times(1)).replicate(any(ReplicatedTransaction.class));
}
