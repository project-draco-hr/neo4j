{
  final Node node=path.endNode();
  return new NestingIterator<Relationship,Pair<RelationshipType,Direction>>(orderedTypes.iterator()){
    @Override protected Iterator<Relationship> createNestedIterator(    Pair<RelationshipType,Direction> entry){
      RelationshipType type=entry.first();
      Direction dir=entry.other();
      return ((dir == Direction.BOTH) ? node.getRelationships(type) : node.getRelationships(type,dir)).iterator();
    }
  }
;
}
