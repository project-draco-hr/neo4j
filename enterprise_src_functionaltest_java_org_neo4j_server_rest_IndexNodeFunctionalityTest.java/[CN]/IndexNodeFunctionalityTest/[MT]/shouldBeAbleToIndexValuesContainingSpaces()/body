{
  long nodeId=helper.createNode();
  String key="key";
  String value="value with   spaces  in it";
  value=URIHelper.encode(value);
  String indexName="spacey-values";
  helper.createNodeIndex(indexName);
  ClientResponse response=Client.create().resource(functionalTestHelper.indexNodeUri(indexName,key,value)).entity(JsonHelper.createJsonFrom(functionalTestHelper.nodeUri(nodeId)),MediaType.APPLICATION_JSON).post(ClientResponse.class);
  assertEquals(Status.CREATED.getStatusCode(),response.getStatus());
  URI location=response.getLocation();
  response=Client.create().resource(functionalTestHelper.indexNodeUri(indexName,key,value)).accept(MediaType.APPLICATION_JSON_TYPE).get(ClientResponse.class);
  assertEquals(Status.OK.getStatusCode(),response.getStatus());
  Collection<?> hits=(Collection<?>)JsonHelper.jsonToSingleValue(response.getEntity(String.class));
  assertEquals(1,hits.size());
  Client.create().resource(location).delete();
  response=Client.create().resource(functionalTestHelper.indexNodeUri(indexName,key,value)).accept(MediaType.APPLICATION_JSON_TYPE).get(ClientResponse.class);
  hits=(Collection<?>)JsonHelper.jsonToSingleValue(response.getEntity(String.class));
  assertEquals(0,hits.size());
}
