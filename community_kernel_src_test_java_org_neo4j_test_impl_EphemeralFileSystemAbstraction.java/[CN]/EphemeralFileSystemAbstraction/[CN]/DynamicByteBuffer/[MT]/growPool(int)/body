{
  AtomicReferenceArray<Queue<Reference<ByteBuffer>>> pool=POOL;
  if (sizeIndex >= pool.length()) {
    int newSize=pool.length();
    while (sizeIndex >= newSize)     newSize<<=1;
    AtomicReferenceArray<Queue<Reference<ByteBuffer>>> newPool=new AtomicReferenceArray<Queue<Reference<ByteBuffer>>>(newSize);
    for (int i=0; i < pool.length(); i++)     newPool.set(i,pool.get(i));
    for (int i=pool.length(); i < newPool.length(); i++)     newPool.set(i,new ConcurrentLinkedQueue<Reference<ByteBuffer>>());
    POOL=pool=newPool;
  }
  return pool.get(sizeIndex);
}
