{
  try {
    clear();
    int sizeIndex=buf.capacity() / SIZES[SIZES.length - 1];
    if (sizeIndex == 0)     for (; sizeIndex < SIZES.length; sizeIndex++) {
      if (buf.capacity() == SIZES[sizeIndex])       break;
    }
 else {
      sizeIndex+=SIZES.length - 1;
    }
    AtomicReferenceArray<Queue<Reference<ByteBuffer>>> pool=POOL;
    SoftReference<ByteBuffer> ref=new SoftReference<ByteBuffer>(buf);
    Queue<Reference<ByteBuffer>> references=null;
    if (sizeIndex < pool.length()) {
      references=pool.get(sizeIndex);
      if (references == null) {
        throw new RuntimeException("Expected a queue to put references in, got null.");
      }
    }
 else {
      references=growPool(sizeIndex);
      if (references == null) {
        throw new RuntimeException("Expected a queue to put references in, got null.");
      }
    }
    references.add(ref);
  }
  finally {
    buf=null;
  }
}
