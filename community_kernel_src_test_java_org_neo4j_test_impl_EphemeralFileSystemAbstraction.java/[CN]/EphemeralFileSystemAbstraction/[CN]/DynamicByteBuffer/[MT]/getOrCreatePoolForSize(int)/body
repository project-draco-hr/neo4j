{
  AtomicReferenceArray<Queue<Reference<ByteBuffer>>> pools=POOLS;
  if (sizeIndex >= pools.length()) {
    int newSize=pools.length();
    while (sizeIndex >= newSize)     newSize<<=1;
    AtomicReferenceArray<Queue<Reference<ByteBuffer>>> newPool=new AtomicReferenceArray<Queue<Reference<ByteBuffer>>>(newSize);
    for (int i=0; i < pools.length(); i++)     newPool.set(i,pools.get(i));
    for (int i=pools.length(); i < newPool.length(); i++)     newPool.set(i,new ConcurrentLinkedQueue<Reference<ByteBuffer>>());
    POOLS=pools=newPool;
  }
  return pools.get(sizeIndex);
}
