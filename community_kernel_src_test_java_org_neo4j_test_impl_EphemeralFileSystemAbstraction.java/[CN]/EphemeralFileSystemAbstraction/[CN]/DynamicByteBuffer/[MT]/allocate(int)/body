{
  for (int enlargement=0; enlargement < 2; enlargement++) {
    AtomicReferenceArray<Queue<Reference<ByteBuffer>>> pool=POOL;
    if (sizeIndex + enlargement < pool.length()) {
      Queue<Reference<ByteBuffer>> queue=pool.get(sizeIndex + enlargement);
      if (queue != null) {
        for (; ; ) {
          Reference<ByteBuffer> ref=queue.poll();
          if (ref == null)           break;
          ByteBuffer buffer=ref.get();
          if (buffer != null)           return buffer;
        }
      }
    }
  }
  return ByteBuffer.allocateDirect((sizeIndex < SIZES.length) ? SIZES[sizeIndex] : ((sizeIndex - SIZES.length + 1) * SIZES[SIZES.length - 1]));
}
