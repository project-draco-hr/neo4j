{
  graph.makeEdge("a","b","cost",(double)1);
  graph.makeEdge("b","c","cost",(double)1);
  graph.makeEdge("c","d","cost",(double)1);
  graph.makeEdge("d","e","cost",(double)1);
  graph.makeEdge("e","f","cost",(double)1);
  FloydWarshall<Double> floydWarshall=new FloydWarshall<Double>(0.0,Double.MAX_VALUE,Direction.OUTGOING,new org.neo4j.graphalgo.impl.util.DoubleEvaluator("cost"),new org.neo4j.graphalgo.impl.util.DoubleAdder(),new org.neo4j.graphalgo.impl.util.DoubleComparator(),graph.getAllNodes(),graph.getAllEdges());
  List<Node> path=floydWarshall.getPath(graph.getNode("a"),graph.getNode("f"));
  assertTrue(path.size() == 6);
  assertTrue(path.get(0).equals(graph.getNode("a")));
  assertTrue(path.get(1).equals(graph.getNode("b")));
  assertTrue(path.get(2).equals(graph.getNode("c")));
  assertTrue(path.get(3).equals(graph.getNode("d")));
  assertTrue(path.get(4).equals(graph.getNode("e")));
  assertTrue(path.get(5).equals(graph.getNode("f")));
}
