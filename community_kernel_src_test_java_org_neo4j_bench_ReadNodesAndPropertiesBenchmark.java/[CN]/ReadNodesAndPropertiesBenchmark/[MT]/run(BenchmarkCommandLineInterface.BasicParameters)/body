{
  Timer timer=new Timer("Background writer",true);
  File storeDir=File.createTempFile(getClass().getSimpleName(),"graphdb");
  storeDir.delete();
  storeDir.mkdirs();
  GraphDatabaseService db=new GraphDatabaseFactory().newEmbeddedDatabase(storeDir.getAbsolutePath());
  BenchmarkResults results=new BenchmarkResults(parameters.outputResultsFile,"ms","ms");
  try {
    long startTime=System.currentTimeMillis();
    long scheduledEndTime=startTime + parameters.totalDuration;
    startBackgroundInsert(db,timer);
    Callable<ReaderResultsSample> reader=new BulkReaderWorker(db,inexhaustibleNodeIterator(db));
    long periodStartTime;
    while ((periodStartTime=System.currentTimeMillis()) < scheduledEndTime) {
      ReaderResultsSample result=reader.call();
      long now=System.currentTimeMillis();
      long elapsedTime=now - startTime;
      long duration=now - periodStartTime;
      results.writeResult(elapsedTime,"iterateNodeGet2Properties",result.iterateNodeGet2Properties,result.exceptions,duration);
    }
  }
  finally {
    results.close();
    timer.cancel();
    db.shutdown();
    FileUtils.deleteRecursively(storeDir);
  }
  return 0;
}
