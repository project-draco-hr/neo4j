{
  final PropertyStore propertyStore=neoStore.getPropertyStore();
  Processor processor=new Processor(){
    private int count;
    @Override public void processNode(    RecordStore<NodeRecord> store,    NodeRecord node){
      long firstPropertyId=node.getCommittedNextProp();
      if (firstPropertyId == Record.NO_NEXT_PROPERTY.intValue())       return;
      for (      PropertyRecord propertyRecord : propertyStore.getPropertyRecordChain(firstPropertyId)) {
        for (        PropertyBlock property : propertyRecord.getPropertyBlocks()) {
          if (property.getKeyIndexId() == propertyKeyId) {
            propertyStore.makeHeavy(property);
            Object propertyValue=property.getType().getValue(property,propertyStore);
            indexManipulator.add(count++,node.getId(),propertyValue);
          }
        }
      }
    }
  }
;
  final NodeStore nodeStore=neoStore.getNodeStore();
  processor.applyFiltered(nodeStore,new Predicate<NodeRecord>(){
    @Override public boolean accept(    NodeRecord node){
      for (      long nodelabelId : nodeStore.getLabelsForNode(node))       if (nodelabelId == labelId)       return true;
      return false;
    }
  }
);
  indexManipulator.done();
}
