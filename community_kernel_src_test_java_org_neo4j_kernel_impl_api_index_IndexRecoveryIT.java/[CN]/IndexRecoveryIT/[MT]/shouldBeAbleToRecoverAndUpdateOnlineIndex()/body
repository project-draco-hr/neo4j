{
  startDb();
  when(mockedIndexProvider.getPopulator(anyLong(),any(IndexConfiguration.class))).thenReturn(mock(IndexPopulator.class));
  when(mockedIndexProvider.getOnlineAccessor(anyLong(),any(IndexConfiguration.class))).thenReturn(mock(IndexAccessor.class));
  createIndexAndAwaitPopulation(myLabel);
  Set<NodePropertyUpdate> expectedUpdates=createSomeBananas(myLabel);
  killDb();
  when(mockedIndexProvider.getInitialState(anyLong())).thenReturn(InternalIndexState.ONLINE);
  GatheringIndexWriter writer=new GatheringIndexWriter();
  when(mockedIndexProvider.getOnlineAccessor(anyLong(),any(IndexConfiguration.class))).thenReturn(writer);
  startDb();
  assertThat(getIndexes(db,myLabel),inTx(db,hasSize(1)));
  assertThat(getIndexes(db,myLabel),inTx(db,haveState(db,Schema.IndexState.ONLINE)));
  verify(mockedIndexProvider,times(1)).getPopulator(anyLong(),any(IndexConfiguration.class));
  int onlineAccessorInvocationCount=2;
  verify(mockedIndexProvider,times(onlineAccessorInvocationCount)).getOnlineAccessor(anyLong(),any(IndexConfiguration.class));
  assertEquals(expectedUpdates,writer.updates);
}
