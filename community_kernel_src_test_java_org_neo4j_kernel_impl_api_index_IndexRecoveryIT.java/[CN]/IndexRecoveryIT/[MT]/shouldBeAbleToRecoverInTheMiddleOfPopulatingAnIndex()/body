{
  startDb();
  Label myLabel=label("MyLabel");
  CountDownLatch latch=new CountDownLatch(1);
  when(mockedIndexProvider.getPopulator(anyLong(),any(IndexConfiguration.class))).thenReturn(indexPopulatorWithControlledCompletionTiming(latch));
  createIndex(myLabel);
  Future<Void> killFuture=killDbInSeparateThread();
  latch.countDown();
  killFuture.get();
  when(mockedIndexProvider.getInitialState(anyLong())).thenReturn(InternalIndexState.POPULATING);
  latch=new CountDownLatch(1);
  when(mockedIndexProvider.getPopulator(anyLong(),any(IndexConfiguration.class))).thenReturn(indexPopulatorWithControlledCompletionTiming(latch));
  startDb();
  Collection<IndexDefinition> indexes=asCollection(db.schema().getIndexes(myLabel));
  assertThat(indexes.size(),equalTo(1));
  IndexDefinition index=single(indexes);
  assertThat(db.schema().getIndexState(index),equalTo(Schema.IndexState.POPULATING));
  verify(mockedIndexProvider,times(2)).getPopulator(anyLong(),any(IndexConfiguration.class));
  verify(mockedIndexProvider,times(0)).getOnlineAccessor(anyLong(),any(IndexConfiguration.class));
  latch.countDown();
}
