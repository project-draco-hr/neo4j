{
  long batchSize=parseLong(withDefault(System.getenv().get("BATCH_SIZE"),"100000"));
  long numNodes=parseLong(withDefault(System.getenv("NUM_NODES"),"1000000"));
  int numLabels=parseInt(withDefault(System.getenv("NUM_LABELS"),"5"));
  File graphDbPath=new File(System.getenv("GRAPH_DB"));
  System.out.println(format("# BATCH_SIZE: %d, NUM_NODES: %d, NUM_LABELS: %d, GRAPH_DB: '%s'",batchSize,numNodes,numLabels,graphDbPath));
  GraphDatabaseService graph=createGraphDatabaseService(graphDbPath);
  Label[] labels=createLabels(numLabels);
  int[] statistics=new int[numLabels];
  assert(numLabels == labels.length);
  long labelings=0;
  long start=System.currentTimeMillis();
  try {
    for (long l=0; l < numNodes; l+=batchSize) {
      long batchStart=System.currentTimeMillis();
      try (Transaction tx=graph.beginTx()){
        for (long m=0; m < batchSize; m++) {
          Label[] selectedLabels=pickRandomLabels(labels);
          for (int i=0; i < selectedLabels.length; i++) {
            statistics[i]++;
          }
          labelings+=selectedLabels.length;
          graph.createNode(selectedLabels);
        }
        tx.success();
      }
       long batchDuration=System.currentTimeMillis() - batchStart;
      System.out.println(format("nodes: %d, ratio: %d, labelings: %d, duration: %d, label statistics: %s",l,l * 100 / numNodes,labelings,batchDuration,Arrays.toString(statistics)));
    }
  }
  finally {
    graph.shutdown();
  }
  long duration=System.currentTimeMillis() - start;
  System.out.println(format("nodes: %d, ratio: %d, labelings: %d, duration: %d",numNodes,100,labelings,duration));
}
