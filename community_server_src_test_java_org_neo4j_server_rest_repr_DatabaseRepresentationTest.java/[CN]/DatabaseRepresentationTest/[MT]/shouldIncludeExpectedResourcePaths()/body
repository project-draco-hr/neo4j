{
  DatabaseRepresentation repr=new DatabaseRepresentation();
  HashMap<String,Object> output=new HashMap<>();
  repr.serialize(new MappingSerializer(new MapWrappingWriter(output),URI.create("http://steveformayor.org"),mock(ExtensionInjector.class)));
  assertThat(output,hasEntry("relationship_index","http://steveformayor.org/index/relationship"));
  assertThat(output,hasEntry("relationship_index","http://steveformayor.org/index/relationship"));
  assertThat(output,hasEntry("node_index","http://steveformayor.org/index/node"));
  assertThat(output,hasEntry("batch","http://steveformayor.org/batch"));
  assertThat(output,hasEntry("constraints","http://steveformayor.org/schema/constraint"));
  assertThat(output,hasEntry("node","http://steveformayor.org/node"));
  assertThat(output,hasEntry("extensions_info","http://steveformayor.org/ext"));
  assertThat(output,hasEntry("node_labels","http://steveformayor.org/labels"));
  assertThat(output,hasEntry("indexes","http://steveformayor.org/schema/index"));
  assertThat(output,hasEntry("cypher","http://steveformayor.org/cypher"));
  assertThat(output,hasEntry("relationship_types","http://steveformayor.org/relationship/types"));
  assertThat(output,hasEntry("relationship","http://steveformayor.org/relationship"));
  assertThat(output,hasEntry("transaction","http://steveformayor.org/transaction"));
  assertThat(output,hasEntry(equalTo("neo4j_version"),notNullValue()));
}
