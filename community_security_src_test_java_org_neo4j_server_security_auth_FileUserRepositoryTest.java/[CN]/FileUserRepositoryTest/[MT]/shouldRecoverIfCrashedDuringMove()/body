{
  final IOException exception=new IOException("simulated IO Exception on create");
  FileSystemAbstraction craschingFileSystem=new DelegatingFileSystemAbstraction(fs){
    @Override public boolean move(    File oldLocation,    File newLocation,    CopyOption... copyOptions) throws IOException {
      if (authFile.getName().equals(newLocation.getName().toString())) {
        throw exception;
      }
      return super.move(oldLocation,newLocation,copyOptions);
    }
  }
;
  FileUserRepository users=new FileUserRepository(craschingFileSystem,authFile,logProvider);
  users.start();
  User user=new User.Builder("jake",Credential.INACCESSIBLE).withRequiredPasswordChange(true).build();
  try {
    users.create(user);
    fail("Expected an IOException");
  }
 catch (  IOException e) {
    assertSame(exception,e);
  }
  assertFalse(craschingFileSystem.fileExists(authFile));
  assertThat(craschingFileSystem.listFiles(authFile.getParentFile()).length,equalTo(0));
}
