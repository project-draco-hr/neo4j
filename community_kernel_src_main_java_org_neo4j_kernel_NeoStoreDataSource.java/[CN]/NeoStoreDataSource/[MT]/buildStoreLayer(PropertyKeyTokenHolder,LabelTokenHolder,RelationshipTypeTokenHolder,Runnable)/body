{
class Module extends RecordStorageEngine implements StoreLayerModule {
    public Module(    File storeDir,    Config config,    IdGeneratorFactory idGeneratorFactory,    PageCache pageCache,    FileSystemAbstraction fs,    LogProvider logProvider,    PropertyKeyTokenHolder propertyKeyTokenHolder,    LabelTokenHolder labelTokens,    RelationshipTypeTokenHolder relationshipTypeTokens,    Runnable schemaStateChangeCallback,    ConstraintSemantics constraintSemantics,    JobScheduler scheduler,    TokenNameLookup tokenNameLookup,    LockService lockService,    SchemaIndexProvider indexProvider,    IndexingService.Monitor indexingServiceMonitor,    KernelHealth kernelHealth,    LabelScanStoreProvider labelScanStoreProvider){
      super(storeDir,config,idGeneratorFactory,pageCache,fs,logProvider,propertyKeyTokenHolder,labelTokens,relationshipTypeTokens,schemaStateChangeCallback,constraintSemantics,scheduler,tokenNameLookup,lockService,indexProvider,indexingServiceMonitor,kernelHealth,labelScanStoreProvider);
    }
  }
  LabelScanStoreProvider labelScanStore=dependencyResolver.resolveDependency(LabelScanStoreProvider.class,LabelScanStoreProvider.HIGHEST_PRIORITIZED);
  return life.add(new Module(storeDir,config,idGeneratorFactory,pageCache,fs,logProvider,propertyKeyTokenHolder,labelTokens,relationshipTypeTokens,schemaStateChangeCallback,constraintSemantics,scheduler,tokenNameLookup,lockService,indexProvider,indexingServiceMonitor,kernelHealth,labelScanStore));
}
