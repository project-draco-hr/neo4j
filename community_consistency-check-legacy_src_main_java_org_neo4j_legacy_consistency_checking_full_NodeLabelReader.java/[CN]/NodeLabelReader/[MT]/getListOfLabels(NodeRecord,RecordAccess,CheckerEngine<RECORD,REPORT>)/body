{
  final Set<Long> labels=new HashSet<>();
  NodeLabels nodeLabels=NodeLabelsField.parseLabelsField(nodeRecord);
  if (nodeLabels instanceof DynamicNodeLabels) {
    DynamicNodeLabels dynamicNodeLabels=(DynamicNodeLabels)nodeLabels;
    long firstRecordId=dynamicNodeLabels.getFirstDynamicRecordId();
    RecordReference<DynamicRecord> firstRecordReference=records.nodeLabels(firstRecordId);
    engine.comparativeCheck(firstRecordReference,new LabelChainWalker<>(new LabelChainWalker.Validator<RECORD,REPORT>(){
      @Override public void onRecordNotInUse(      DynamicRecord dynamicRecord,      CheckerEngine<RECORD,REPORT> engine){
      }
      @Override public void onRecordChainCycle(      DynamicRecord record,      CheckerEngine<RECORD,REPORT> engine){
      }
      @Override public void onWellFormedChain(      long[] labelIds,      CheckerEngine<RECORD,REPORT> engine,      RecordAccess records){
        copyToSet(labelIds,labels);
      }
    }
));
  }
 else {
    copyToSet(nodeLabels.get(null),labels);
  }
  return labels;
}
