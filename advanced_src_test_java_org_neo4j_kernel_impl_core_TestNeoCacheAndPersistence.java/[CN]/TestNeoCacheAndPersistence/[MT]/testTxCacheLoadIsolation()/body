{
  Node node=getNeo().createNode();
  node.setProperty("someproptest","testing");
  Node node1=getNeo().createNode();
  node1.setProperty("someotherproptest",2);
  commit();
  EmbeddedGraphDatabase eNeo=(EmbeddedGraphDatabase)getNeo();
  TransactionManager txManager=eNeo.getConfig().getTxModule().getTxManager();
  NodeManager nodeManager=eNeo.getConfig().getNeoModule().getNodeManager();
  try {
    txManager.begin();
    node.setProperty("someotherproptest","testing2");
    Relationship rel=node.createRelationshipTo(node1,MyRelTypes.TEST);
    javax.transaction.Transaction txA=txManager.suspend();
    txManager.begin();
    assertEquals("testing",node.getProperty("someproptest"));
    assertTrue(!node.hasProperty("someotherproptest"));
    assertTrue(!node.hasRelationship());
    nodeManager.clearCache();
    assertEquals("testing",node.getProperty("someproptest"));
    assertTrue(!node.hasProperty("someotherproptest"));
    javax.transaction.Transaction txB=txManager.suspend();
    txManager.resume(txA);
    assertEquals("testing",node.getProperty("someproptest"));
    assertTrue(node.hasProperty("someotherproptest"));
    assertTrue(node.hasRelationship());
    nodeManager.clearCache();
    assertEquals("testing",node.getProperty("someproptest"));
    assertTrue(node.hasProperty("someotherproptest"));
    assertTrue(node.hasRelationship());
    txManager.suspend();
    txManager.resume(txB);
    assertEquals("testing",node.getProperty("someproptest"));
    assertTrue(!node.hasProperty("someotherproptest"));
    assertTrue(!node.hasRelationship());
    txManager.rollback();
    txManager.resume(txA);
    node.delete();
    node1.delete();
    rel.delete();
    txManager.commit();
    newTransaction();
  }
 catch (  Exception e) {
    fail("" + e);
  }
}
