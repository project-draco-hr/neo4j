{
  transaction=neo.beginTx();
  System.out.println("Generating graph");
  nodes=new long[numberOfNodes];
  ProgressBar progressBar=new ProgressBar(numberOfNodes);
  for (int n=0; n < numberOfNodes; ++n) {
    nodes[n]=neo.createNode().getId();
    renewTransaction();
    progressBar.Print();
  }
  progressBar=new ProgressBar(numberOfNodes);
  for (int n=0; n < numberOfNodes; ++n) {
    Node node=getNodeByInternalId(n);
    for (int i=0; i < numberOfRelationshipsFromEachNode; ++i) {
      Node node2=null;
      if (random.nextDouble() < rewireFactor) {
        if (!distanceRelativeRewiring) {
          node2=getRandomNode(node);
        }
 else {
          double r=random.nextDouble() * Math.log(numberOfNodes / 2);
          int k=(int)Math.exp(r);
          node2=getNodeByInternalId((n + k) % (numberOfNodes / 2));
        }
      }
      if (node2 != null) {
        node.createRelationshipTo(node2,relationshipType);
        renewTransaction();
      }
      if (node2 == null || !rewireReplaces) {
        node2=getNodeByInternalId((n + i + 1) % numberOfNodes);
        node.createRelationshipTo(node2,relationshipType);
        renewTransaction();
      }
    }
    progressBar.Print();
  }
  transaction.success();
  transaction.finish();
}
