{
  byte continuation=buffer.readByte();
  if (continuation == ChunkingChannelBuffer.CONTINUATION_MORE) {
    PartialRequest partialRequest=partialRequests.get(channel);
    if (partialRequest == null) {
      RequestType<M> type=getRequestContext(buffer.readByte());
      SlaveContext context=readContext(buffer);
      Pair<ChannelBuffer,ByteBuffer> targetBuffers=mapSlave(channel,context);
      partialRequest=new PartialRequest(type,context,targetBuffers);
      partialRequests.put(channel,partialRequest);
    }
    partialRequest.add(buffer);
  }
 else {
    PartialRequest partialRequest=partialRequests.remove(channel);
    RequestType<M> type=null;
    SlaveContext context=null;
    Pair<ChannelBuffer,ByteBuffer> targetBuffers;
    ChannelBuffer bufferToReadFrom=null;
    ChannelBuffer bufferToWriteTo=null;
    if (partialRequest == null) {
      type=getRequestContext(buffer.readByte());
      context=readContext(buffer);
      targetBuffers=mapSlave(channel,context);
      bufferToReadFrom=buffer;
      bufferToWriteTo=targetBuffers.first();
    }
 else {
      type=partialRequest.type;
      context=partialRequest.context;
      targetBuffers=partialRequest.buffers;
      partialRequest.add(buffer);
      bufferToReadFrom=targetBuffers.first();
      bufferToWriteTo=ChannelBuffers.dynamicBuffer();
    }
    bufferToWriteTo.clear();
    final ChunkingChannelBuffer chunkingBuffer=new ChunkingChannelBuffer(bufferToWriteTo,channel,MAX_FRAME_LENGTH);
    executor.submit(responseWriter(type,channel,context,chunkingBuffer,bufferToReadFrom,targetBuffers.other()));
  }
}
