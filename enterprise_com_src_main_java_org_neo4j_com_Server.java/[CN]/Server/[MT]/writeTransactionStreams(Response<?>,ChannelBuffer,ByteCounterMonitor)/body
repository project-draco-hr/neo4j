{
  final NetworkWritableLogChannel channel=new NetworkWritableLogChannel(buffer);
  final LogEntryWriterv1 writer=new LogEntryWriterv1(channel,new CommandWriter(channel));
  response.accept(new Visitor<CommittedTransactionRepresentation,IOException>(){
    @Override public boolean visit(    CommittedTransactionRepresentation tx) throws IOException {
      LogEntry.Start startEntry=tx.getStartEntry();
      writer.writeStartEntry(startEntry.getMasterId(),startEntry.getLocalId(),startEntry.getTimeWritten(),startEntry.getLastCommittedTxWhenTransactionStarted(),startEntry.getAdditionalHeader());
      writer.serialize(tx.getTransactionRepresentation());
      LogEntry.Commit commitEntry=tx.getCommitEntry();
      writer.writeCommitEntry(commitEntry.getTxId(),commitEntry.getTimeWritten());
      return true;
    }
  }
);
}
