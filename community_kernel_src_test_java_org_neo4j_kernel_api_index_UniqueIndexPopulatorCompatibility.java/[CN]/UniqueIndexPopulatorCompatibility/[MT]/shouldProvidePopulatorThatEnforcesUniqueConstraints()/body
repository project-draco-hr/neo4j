{
  String value="value1";
  int nodeId1=1;
  int nodeId2=2;
  IndexConfiguration config=new IndexConfiguration(true);
  UniqueIndexSizeSampler sampler=new UniqueIndexSizeSampler();
  IndexPopulator populator=indexProvider.getPopulator(17,descriptor,config,sampler);
  populator.create();
  populator.add(nodeId1,value);
  populator.add(nodeId2,value);
  try {
    PropertyAccessor propertyAccessor=mock(PropertyAccessor.class);
    int propertyKeyId=descriptor.getPropertyKeyId();
    when(propertyAccessor.getProperty(nodeId1,propertyKeyId)).thenReturn(stringProperty(propertyKeyId,value));
    when(propertyAccessor.getProperty(nodeId2,propertyKeyId)).thenReturn(stringProperty(propertyKeyId,value));
    populator.verifyDeferredConstraints(propertyAccessor);
    fail("expected exception");
  }
 catch (  PreexistingIndexEntryConflictException conflict) {
    assertEquals(nodeId1,conflict.getExistingNodeId());
    assertEquals(value,conflict.getPropertyValue());
    assertEquals(nodeId2,conflict.getAddedNodeId());
  }
}
