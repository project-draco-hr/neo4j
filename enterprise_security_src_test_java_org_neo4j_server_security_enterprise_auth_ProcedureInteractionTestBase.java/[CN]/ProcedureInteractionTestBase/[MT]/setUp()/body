{
  neo=setUpNeoServer();
  neo.getLocalGraph().getDependencyResolver().resolveDependency(Procedures.class).register(ClassWithProcedures.class);
  userManager=neo.getLocalUserManager();
  userManager.newUser("noneSubject","abc",false);
  userManager.newUser("pwdSubject","abc",true);
  userManager.newUser("adminSubject","abc",false);
  userManager.newUser("schemaSubject","abc",false);
  userManager.newUser("writeSubject","abc",false);
  userManager.newUser("readSubject","123",false);
  userManager.addRoleToUser(ADMIN,"adminSubject");
  userManager.addRoleToUser(ARCHITECT,"schemaSubject");
  userManager.addRoleToUser(PUBLISHER,"writeSubject");
  userManager.addRoleToUser(READER,"readSubject");
  userManager.newRole(EMPTY_ROLE);
  noneSubject=neo.login("noneSubject","abc");
  pwdSubject=neo.login("pwdSubject","abc");
  readSubject=neo.login("readSubject","123");
  writeSubject=neo.login("writeSubject","abc");
  schemaSubject=neo.login("schemaSubject","abc");
  adminSubject=neo.login("adminSubject","abc");
  executeQuery(writeSubject,"UNWIND range(0,2) AS number CREATE (:Node {number:number, name:'node'+number})");
}
