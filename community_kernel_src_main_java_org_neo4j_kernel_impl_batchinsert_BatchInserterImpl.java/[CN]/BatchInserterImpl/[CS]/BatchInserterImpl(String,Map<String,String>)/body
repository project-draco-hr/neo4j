{
  rejectAutoUpgrade(stringParams);
  msgLog=StringLogger.logger(storeDir);
  Map<Object,Object> params=getDefaultParams();
  params.put(Config.USE_MEMORY_MAPPED_BUFFERS,"false");
  boolean dump=Boolean.parseBoolean(stringParams.get(Config.DUMP_CONFIGURATION));
  new AutoConfigurator(storeDir,false,dump).configure(params);
  for (  Map.Entry<String,String> entry : stringParams.entrySet()) {
    params.put(entry.getKey(),entry.getValue());
  }
  this.storeDir=storeDir;
  this.idGeneratorFactory=CommonFactories.defaultIdGeneratorFactory();
  params.put(IdGeneratorFactory.class,idGeneratorFactory);
  FileSystemAbstraction fileSystem=CommonFactories.defaultFileSystemAbstraction();
  params.put(FileSystemAbstraction.class,fileSystem);
  String store=fixPath(storeDir,params);
  params.put("neo_store",store);
  if (dump) {
    Config.dumpConfiguration(params);
  }
  msgLog.logMessage(Thread.currentThread() + " Starting BatchInserter(" + this+ ")");
  neoStore=new NeoStore(params);
  if (!neoStore.isStoreOk()) {
    throw new IllegalStateException(storeDir + " store is not cleanly shutdown.");
  }
  neoStore.makeStoreOk();
  NameData[] indexes=getPropertyIndexStore().getNames(10000);
  indexHolder=new PropertyIndexHolder(indexes);
  NameData[] types=getRelationshipTypeStore().getNames(Integer.MAX_VALUE);
  typeHolder=new RelationshipTypeHolder(types);
  graphDbService=new BatchGraphDatabaseImpl(this);
  indexStore=new IndexStore(storeDir,fileSystem);
}
