{
  graph.makeEdgeChain("a,b,c,d,e");
  AllSimplePaths allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),3,Direction.OUTGOING,MyRelTypes.R1);
  assertTrue(allSimplePaths.getPaths().size() == 0);
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),4,Direction.OUTGOING,MyRelTypes.R1);
  assertTrue(allSimplePaths.getPaths().size() == 1);
  for (  List<Node> nodePath : allSimplePaths.getPathsAsNodes()) {
    assertTrue(nodePath.size() == 5);
    assertTrue(nodePath.get(0).equals(graph.getNode("a")));
    assertTrue(nodePath.get(1).equals(graph.getNode("b")));
    assertTrue(nodePath.get(2).equals(graph.getNode("c")));
    assertTrue(nodePath.get(3).equals(graph.getNode("d")));
    assertTrue(nodePath.get(4).equals(graph.getNode("e")));
  }
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),8,Direction.OUTGOING,MyRelTypes.R1);
  assertTrue(allSimplePaths.getPaths().size() == 1);
  for (  List<Node> nodePath : allSimplePaths.getPathsAsNodes()) {
    assertTrue(nodePath.size() == 5);
    assertTrue(nodePath.get(0).equals(graph.getNode("a")));
    assertTrue(nodePath.get(1).equals(graph.getNode("b")));
    assertTrue(nodePath.get(2).equals(graph.getNode("c")));
    assertTrue(nodePath.get(3).equals(graph.getNode("d")));
    assertTrue(nodePath.get(4).equals(graph.getNode("e")));
  }
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),100,Direction.OUTGOING,MyRelTypes.R1);
  List<List<?>> paths=allSimplePaths.getPaths();
  List<List<Node>> pathsAsNodes=allSimplePaths.getPathsAsNodes();
  assertTrue(paths.size() == 1);
  assertTrue(pathsAsNodes.size() == 1);
  for (  List<Node> nodePath : allSimplePaths.getPathsAsNodes()) {
    assertTrue(nodePath.size() == 5);
    assertTrue(nodePath.get(0).equals(graph.getNode("a")));
    assertTrue(nodePath.get(1).equals(graph.getNode("b")));
    assertTrue(nodePath.get(2).equals(graph.getNode("c")));
    assertTrue(nodePath.get(3).equals(graph.getNode("d")));
    assertTrue(nodePath.get(4).equals(graph.getNode("e")));
  }
}
