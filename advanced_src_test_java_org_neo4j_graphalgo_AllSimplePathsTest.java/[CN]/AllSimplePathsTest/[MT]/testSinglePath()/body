{
  graph.makeEdgeChain("a,b,c,d,e");
  AllSimplePaths allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),MyRelTypes.R1,Direction.OUTGOING);
  assertTrue(allSimplePaths.getPaths(3).size() == 0);
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),MyRelTypes.R1,Direction.OUTGOING);
  assertTrue(allSimplePaths.getPaths(4).size() == 1);
  for (  List<Node> nodePath : allSimplePaths.getPathsAsNodes(4)) {
    assertTrue(nodePath.size() == 5);
    assertTrue(nodePath.get(0).equals(graph.getNode("a")));
    assertTrue(nodePath.get(1).equals(graph.getNode("b")));
    assertTrue(nodePath.get(2).equals(graph.getNode("c")));
    assertTrue(nodePath.get(3).equals(graph.getNode("d")));
    assertTrue(nodePath.get(4).equals(graph.getNode("e")));
  }
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),MyRelTypes.R1,Direction.OUTGOING);
  assertTrue(allSimplePaths.getPaths(8).size() == 1);
  for (  List<Node> nodePath : allSimplePaths.getPathsAsNodes(8)) {
    assertTrue(nodePath.size() == 5);
    assertTrue(nodePath.get(0).equals(graph.getNode("a")));
    assertTrue(nodePath.get(1).equals(graph.getNode("b")));
    assertTrue(nodePath.get(2).equals(graph.getNode("c")));
    assertTrue(nodePath.get(3).equals(graph.getNode("d")));
    assertTrue(nodePath.get(4).equals(graph.getNode("e")));
  }
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),MyRelTypes.R1,Direction.OUTGOING);
  List<List<PropertyContainer>> paths=allSimplePaths.getPaths(100);
  List<List<Node>> pathsAsNodes=allSimplePaths.getPathsAsNodes(100);
  assertTrue(paths.size() == 1);
  assertTrue(pathsAsNodes.size() == 1);
  for (  List<Node> nodePath : allSimplePaths.getPathsAsNodes(100)) {
    assertTrue(nodePath.size() == 5);
    assertTrue(nodePath.get(0).equals(graph.getNode("a")));
    assertTrue(nodePath.get(1).equals(graph.getNode("b")));
    assertTrue(nodePath.get(2).equals(graph.getNode("c")));
    assertTrue(nodePath.get(3).equals(graph.getNode("d")));
    assertTrue(nodePath.get(4).equals(graph.getNode("e")));
  }
}
