{
  graph.makeEdgeChain("a,b1,c,d1,e");
  graph.makeEdgeChain("a,b2,c,d2,e");
  AllSimplePaths allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),MyRelTypes.R1,Direction.OUTGOING);
  assertTrue(allSimplePaths.getPaths(3).size() == 0);
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),MyRelTypes.R1,Direction.OUTGOING);
  assertTrue(allSimplePaths.getPaths(4).size() == 4);
  allSimplePaths=new AllSimplePaths(graph.getNode("a"),graph.getNode("e"),MyRelTypes.R1,Direction.OUTGOING);
  List<List<PropertyContainer>> paths=allSimplePaths.getPaths(100);
  List<List<Node>> pathsAsNodes=allSimplePaths.getPathsAsNodes(100);
  assertTrue(paths.size() == 4);
  assertTrue(pathsAsNodes.size() == 4);
  boolean b1=false, b2=false, d1=false, d2=false;
  for (  List<Node> nodePath : pathsAsNodes) {
    assertTrue(nodePath.size() == 5);
    assertTrue(nodePath.get(0).equals(graph.getNode("a")));
    assertTrue(nodePath.get(2).equals(graph.getNode("c")));
    assertTrue(nodePath.get(4).equals(graph.getNode("e")));
    if (nodePath.get(1).equals(graph.getNode("b1"))) {
      b1=true;
    }
    if (nodePath.get(1).equals(graph.getNode("b2"))) {
      b2=true;
    }
    if (nodePath.get(3).equals(graph.getNode("d1"))) {
      d1=true;
    }
    if (nodePath.get(3).equals(graph.getNode("d2"))) {
      d2=true;
    }
  }
  assertTrue(b1);
  assertTrue(b2);
  assertTrue(d1);
  assertTrue(d2);
}
