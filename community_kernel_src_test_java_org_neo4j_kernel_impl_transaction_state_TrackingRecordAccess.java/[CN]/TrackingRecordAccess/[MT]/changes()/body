{
  return new IterableWrapper<RecordProxy<Long,RECORD,ADDITIONAL>,RecordProxy<Long,RECORD,ADDITIONAL>>(delegate.changes()){
    @Override protected RecordProxy<Long,RECORD,ADDITIONAL> underlyingObjectToObject(    RecordProxy<Long,RECORD,ADDITIONAL> actual){
      return new TrackingRecordProxy<>(actual,false,tracker);
    }
  }
;
}
