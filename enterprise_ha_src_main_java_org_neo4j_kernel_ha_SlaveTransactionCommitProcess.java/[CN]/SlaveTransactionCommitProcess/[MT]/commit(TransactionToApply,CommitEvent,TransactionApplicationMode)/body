{
  if (batch.next() != null) {
    throw new IllegalArgumentException("Only supports single-commit on slave --> master");
  }
  try {
    TransactionRepresentation representation=batch.transactionRepresentation();
    RequestContext context=requestContextFactory.newRequestContext(representation.getLockSessionId());
    try (Response<Long> response=master.commit(context,representation)){
      return response.response();
    }
   }
 catch (  IOException e) {
    throw new TransactionFailureException(Status.Transaction.CouldNotCommit,e,"Could not commit transaction on the master");
  }
catch (  ComException e) {
    throw new TransientTransactionFailureException("Cannot commit this transaction on the master. " + "The master is either down, or we have network connectivity problems.",e);
  }
}
