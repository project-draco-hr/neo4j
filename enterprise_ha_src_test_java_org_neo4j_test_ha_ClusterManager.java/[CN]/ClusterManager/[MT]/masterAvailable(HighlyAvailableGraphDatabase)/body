{
  final Collection<HighlyAvailableGraphDatabase> excludedNodes=asList(except);
  return new Predicate<ClusterManager.ManagedCluster>(){
    @Override public boolean test(    ManagedCluster cluster){
      Predicate<HighlyAvailableGraphDatabase> filterMasterPredicate=new Predicate<HighlyAvailableGraphDatabase>(){
        @Override public boolean test(        HighlyAvailableGraphDatabase node){
          return !excludedNodes.contains(node) && node.isAvailable(0) && node.isMaster();
        }
      }
;
      return Iterables.filter(filterMasterPredicate,cluster.getAllMembers()).iterator().hasNext();
    }
    @Override public String toString(){
      return "There's an available master";
    }
  }
;
}
