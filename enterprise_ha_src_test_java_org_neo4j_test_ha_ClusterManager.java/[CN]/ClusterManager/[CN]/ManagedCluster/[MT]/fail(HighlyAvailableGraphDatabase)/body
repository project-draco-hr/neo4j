{
  assertMember(db);
  ClusterClient clusterClient=db.getDependencyResolver().resolveDependency(ClusterClient.class);
  LifeSupport clusterClientLife=(LifeSupport)accessible(clusterClient.getClass().getDeclaredField("life")).get(clusterClient);
  NetworkReceiver receiver=instance(NetworkReceiver.class,clusterClientLife.getLifecycleInstances());
  receiver.stop();
  ExecutorLifecycleAdapter statemachineExecutor=instance(ExecutorLifecycleAdapter.class,clusterClientLife.getLifecycleInstances());
  statemachineExecutor.stop();
  NetworkSender sender=instance(NetworkSender.class,clusterClientLife.getLifecycleInstances());
  sender.stop();
  List<Lifecycle> stoppedServices=new ArrayList<Lifecycle>();
  stoppedServices.add(sender);
  stoppedServices.add(statemachineExecutor);
  stoppedServices.add(receiver);
  return new StartNetworkAgainKit(db,stoppedServices);
}
