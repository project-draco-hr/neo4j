{
  super(fs,pages,baseFile,new RotationMonitor(){
    final Log log=logProvider.getLog(CountsTracker.class);
    @Override public void failedToOpenStoreFile(    File path,    Exception error){
      log.error("Failed to open counts store file: " + path,error);
    }
    @Override public void beforeRotation(    File source,    File target,    Headers headers){
      log.info(format("About to rotate counts store at transaction %d to [%s], from [%s].",headers.get(FileVersion.FILE_VERSION).txId,target,source));
    }
    @Override public void rotationSucceeded(    File source,    File target,    Headers headers){
      log.info(format("Successfully rotated counts store at transaction %d to [%s], from [%s].",headers.get(FileVersion.FILE_VERSION).txId,target,source));
    }
    @Override public void rotationFailed(    File source,    File target,    Headers headers,    Exception e){
      log.error(format("Failed to rotate counts store at transaction %d to [%s], from [%s].",headers.get(FileVersion.FILE_VERSION).txId,target,source),e);
    }
  }
,new RotationTimerFactory(Clock.SYSTEM_CLOCK,config.get(GraphDatabaseSettings.store_interval_log_rotation_wait_time)),16,16,HEADER_FIELDS);
}
