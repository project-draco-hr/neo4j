{
  try {
    final StreamingOutput stream=new StreamingOutput(){
      @Override public void write(      final OutputStream output) throws IOException, WebApplicationException {
        try {
          final ServletOutputStream servletOutputStream=new ServletOutputStream(){
            @Override public void write(            int i) throws IOException {
              output.write(i);
            }
            @Override public boolean isReady(){
              return true;
            }
            @Override public void setWriteListener(            WriteListener writeListener){
              try {
                writeListener.onWritePossible();
              }
 catch (              IOException e) {
              }
            }
          }
;
          new StreamingBatchOperations(webServer).readAndExecuteOperations(uriInfo,httpHeaders,req,body,servletOutputStream);
          representationWriteHandler.onRepresentationWritten();
        }
 catch (        Exception e) {
          LOGGER.warn("Error executing batch request ",e);
        }
 finally {
          representationWriteHandler.onRepresentationFinal();
        }
      }
    }
;
    return Response.ok(stream).type(HttpHeaderUtils.mediaTypeWithCharsetUtf8(MediaType.APPLICATION_JSON_TYPE)).build();
  }
 catch (  Exception e) {
    return output.serverError(e);
  }
}
