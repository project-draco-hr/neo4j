{
  AbstractGraphDatabase db=database.graph;
  Transaction tx=db.beginTx();
  try {
    List<Object> operations=input.readList(body);
    BatchOperationResults results=new BatchOperationResults(operations.size());
    InternalJettyServletRequest req=new InternalJettyServletRequest();
    InternalJettyServletResponse res=new InternalJettyServletResponse();
    String servletPath=uriInfo.getBaseUri().getPath();
    String servletBaseUrl=uriInfo.getBaseUri().toString();
    servletBaseUrl=servletBaseUrl.substring(0,servletBaseUrl.length() - 1);
    for (    Object rawOperation : operations) {
      performJob(results,req,res,servletBaseUrl,servletPath,(Map<String,Object>)rawOperation);
    }
    tx.success();
    return Response.ok().entity(results.toJSON().getBytes("UTF-8")).header(HttpHeaders.CONTENT_ENCODING,"UTF-8").type(MediaType.APPLICATION_JSON).build();
  }
 catch (  Exception e) {
    tx.failure();
    return output.badRequest(e);
  }
 finally {
    tx.finish();
  }
}
