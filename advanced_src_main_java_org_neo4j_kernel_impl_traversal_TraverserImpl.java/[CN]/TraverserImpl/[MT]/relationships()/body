{
  return new IterableWrapper<Relationship,Path>(this){
    @Override public Iterator<Relationship> iterator(){
      Iterator<Relationship> iter=super.iterator();
      if (iter.hasNext()) {
        Relationship first=iter.next();
        if (first == null)         return iter;
        return new CombiningIterator<Relationship>(first,iter);
      }
 else {
        return iter;
      }
    }
    @Override protected Relationship underlyingObjectToObject(    Path position){
      return position.lastRelationship();
    }
  }
;
}
