{
  GraphDatabaseService db=globalDb;
  Node n1=createNode(db);
  Node n2=createNode(db);
  Relationship r3=createRelationship(n1);
  Relationship r2=createRelationship(n1);
  Relationship r1=createRelationship(n1);
  Transaction t1Tx=db.beginTx();
  Transaction t2Tx=t2.execute(beginTx(db)).get();
  n2.setProperty("locked","indeed");
  t2.execute(setProperty(r1,"locked","absolutely")).get();
  Future<Object> t2n2Wait=t2.execute(setProperty(n2,"locked","In my dreams"));
  t2.get().waitUntilWaiting();
  r2.delete();
  t1Tx.success();
  try {
    t1Tx.close();
    fail("Should throw exception about deadlock");
  }
 catch (  Exception e) {
    assertEquals(DeadlockDetectedException.class,e.getClass());
  }
 finally {
    t2n2Wait.get();
    t2.execute(close(t2Tx)).get();
  }
}
