{
  ResourceBundle bundle;
  try {
    bundle=new SettingsResourceBundle(Class.forName(settingsResource));
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException("Couldn't load settings class: ",e);
  }
  System.out.println("Generating docs for: " + settingsResource);
  String settingsResourceId="config-" + settingsResource;
  String bundleDescription="List of configuration settings";
  if (bundle.containsKey(SettingsResourceBundle.CLASS_DESCRIPTION)) {
    bundleDescription=bundle.getString(SettingsResourceBundle.CLASS_DESCRIPTION);
  }
  StringBuilder details=new StringBuilder();
  List<Triplet<String,String,String>> beanList=new ArrayList<>();
  List<Triplet<String,String,String>> deprecatedBeansList=new ArrayList<>();
  AsciiDocListGenerator listGenerator=new AsciiDocListGenerator(settingsResourceId,bundleDescription,true);
  AsciiDocListGenerator deprecatedBeanslistGenerator=new AsciiDocListGenerator(settingsResourceId + "-deprecated","Deprecated settings",true);
  List<String> keys=new ArrayList<String>(bundle.keySet());
  Collections.sort(keys);
  for (  String property : keys) {
    if (property.endsWith(SettingsResourceBundle.DESCRIPTION)) {
      String name=property.substring(0,property.lastIndexOf("."));
      String internalKey=name + SettingsResourceBundle.INTERNAL;
      if (!bundle.containsKey(internalKey)) {
        String id="config_" + name;
        String descriptionKey=name + SettingsResourceBundle.DESCRIPTION;
        String description=linkifyConfigSettings(bundle.getString(descriptionKey),name,false);
        Triplet<String,String,String> beanSummary=Triplet.of(id,name,description);
        String deprecatedKey=name + SettingsResourceBundle.DEPRECATED;
        String obsoletedKey=name + SettingsResourceBundle.OBSOLETED;
        if (bundle.containsKey(deprecatedKey) || bundle.containsKey(obsoletedKey)) {
          deprecatedBeansList.add(beanSummary);
        }
 else {
          beanList.add(beanSummary);
        }
        details.append(addDocsForOneSetting(bundle,id,name,description,false));
        details.append(addDocsForOneSetting(bundle,id,name,description,true));
      }
    }
  }
  return listGenerator.generateListAndTableCombo(beanList) + (deprecatedBeansList.isEmpty() ? "" : deprecatedBeanslistGenerator.generateListAndTableCombo(deprecatedBeansList)) + details.toString();
}
