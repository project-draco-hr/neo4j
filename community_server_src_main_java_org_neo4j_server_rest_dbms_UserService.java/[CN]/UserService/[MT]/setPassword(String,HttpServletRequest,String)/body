{
  Principal principal=req.getUserPrincipal();
  if (principal == null || !principal.getName().equals(username)) {
    return output.notFound();
  }
  final Map<String,Object> deserialized;
  try {
    deserialized=input.readMap(payload);
  }
 catch (  BadInputException e) {
    return output.response(BAD_REQUEST,new ExceptionRepresentation(new Neo4jError(Status.Request.InvalidFormat,e.getMessage())));
  }
  Object o=deserialized.get(PASSWORD);
  if (o == null) {
    return output.response(UNPROCESSABLE,new ExceptionRepresentation(new Neo4jError(Status.Request.InvalidFormat,String.format("Required parameter '%s' is missing.",PASSWORD))));
  }
  if (!(o instanceof String)) {
    return output.response(UNPROCESSABLE,new ExceptionRepresentation(new Neo4jError(Status.Request.InvalidFormat,String.format("Expected '%s' to be a string.",PASSWORD))));
  }
  String newPassword=(String)o;
  if (newPassword.length() == 0) {
    return output.response(UNPROCESSABLE,new ExceptionRepresentation(new Neo4jError(Status.Request.Invalid,"Password cannot be empty.")));
  }
  final User currentUser=authManager.getUser(username);
  if (currentUser == null) {
    return output.notFound();
  }
  if (currentUser.credentials().matchesPassword(newPassword)) {
    return output.response(UNPROCESSABLE,new ExceptionRepresentation(new Neo4jError(Status.Request.Invalid,"Old password and new password cannot be the same.")));
  }
  try {
    if (authManager.setUserPassword(username,newPassword) == null) {
      return output.notFound();
    }
  }
 catch (  IOException e) {
    return output.serverErrorWithoutLegacyStacktrace(e);
  }
  return output.ok();
}
