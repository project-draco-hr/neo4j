{
  try {
    Map<String,Object> deserialized=input.readMap(payload);
    String password=getString(deserialized,PASSWORD);
    if (security.authenticate(user,password)) {
      User updatedUser;
      if (deserialized.containsKey(NEW_AUTHORIZATION_TOKEN)) {
        updatedUser=security.setToken(user,getString(deserialized,NEW_AUTHORIZATION_TOKEN));
      }
 else {
        updatedUser=security.regenerateToken(user);
      }
      return output.ok(new AuthorizationRepresentation(updatedUser));
    }
 else {
      log.warn("Failed authentication attempt for '%s' from %s",user,req.getRemoteAddr());
    }
    return output.response(UNPROCESSABLE,new ExceptionRepresentation(new Neo4jError(Status.Security.AuthenticationFailed,"Invalid username and/or password.")));
  }
 catch (  BadInputException|IllegalTokenException e) {
    return output.badRequestWithoutLegacyStacktrace(e);
  }
catch (  IllegalArgumentException e) {
    return output.response(UNPROCESSABLE,new ExceptionRepresentation(new Neo4jError(Status.Request.Invalid,e.getMessage())));
  }
catch (  TooManyAuthenticationAttemptsException e) {
    return output.response(TOO_MANY,new ExceptionRepresentation(new Neo4jError(e.status(),e)));
  }
catch (  IOException e) {
    return output.serverErrorWithoutLegacyStacktrace(e);
  }
}
