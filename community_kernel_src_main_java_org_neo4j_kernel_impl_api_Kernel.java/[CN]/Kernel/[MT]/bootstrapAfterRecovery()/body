{
  try {
    transactionManager.begin();
    StatementOperationParts parts=newTransaction().newStatementOperations();
    this.statementLogic=parts.asStatementOperations();
    ReadOnlyStatementOperations readOnlyParts=new ReadOnlyStatementOperations(parts.schemaStateOperations());
    this.readOnlyStatementLogic=parts.override(parts.keyReadOperations(),readOnlyParts,parts.entityReadOperations(),readOnlyParts,parts.schemaReadOperations(),readOnlyParts,readOnlyParts,parts.lifecycleOperations()).asStatementOperations();
  }
 catch (  SystemException|NotSupportedException e) {
    throw new IllegalStateException("Unable to start transaction for creating a statement operations cake",e);
  }
 finally {
    try {
      transactionManager.rollback();
    }
 catch (    IllegalStateException|SecurityException|SystemException e) {
      throw new IllegalStateException("Unable to close transaction after creating a statement operations cake",e);
    }
  }
}
