{
  StoreReadLayer storeLayer=new CacheLayer(new DiskLayer(propertyKeyTokenHolder,labelTokenHolder,relationshipTypeTokenHolder,new SchemaStorage(neoStore.getSchemaStore()),neoStore,indexService),persistenceCache,schemaCache);
  ;
  StateHandlingStatementOperations stateHandlingContext=new StateHandlingStatementOperations(storeLayer,legacyPropertyTrackers,new ConstraintIndexCreator(new Transactor(transactionManager,persistenceManager),indexService),persistenceManager);
  StatementOperationParts parts=new StatementOperationParts(stateHandlingContext,stateHandlingContext,stateHandlingContext,stateHandlingContext,stateHandlingContext,stateHandlingContext,new SchemaStateConcern(schemaState));
  ConstraintEnforcingEntityOperations constraintEnforcingEntityOperations=new ConstraintEnforcingEntityOperations(parts.entityWriteOperations(),parts.entityReadOperations(),parts.schemaReadOperations());
  DataIntegrityValidatingStatementOperations dataIntegrityContext=new DataIntegrityValidatingStatementOperations(parts.keyWriteOperations(),parts.schemaReadOperations(),parts.schemaWriteOperations());
  parts=parts.override(null,dataIntegrityContext,constraintEnforcingEntityOperations,constraintEnforcingEntityOperations,null,dataIntegrityContext,null);
  LockingStatementOperations lockingContext=new LockingStatementOperations(parts.entityWriteOperations(),parts.schemaReadOperations(),parts.schemaWriteOperations(),parts.schemaStateOperations());
  parts=parts.override(null,null,null,lockingContext,lockingContext,lockingContext,lockingContext);
  return parts;
}
