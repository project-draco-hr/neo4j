{
  checkIfShutdown();
  StoreKernelTransaction storeTransactionContext=new StoreKernelTransaction(transactionManager,persistenceManager,propertyKeyTokenHolder,labelTokenHolder,neoStore,indexService);
  KernelTransaction result=new StateHandlingKernelTransaction(storeTransactionContext,new SchemaStorage(neoStore.getSchemaStore()),newTxState(),providerMap,persistenceCache,schemaCache,persistenceManager,schemaState,new ConstraintIndexCreator(new Transactor(transactionManager),indexService),propertyKeyTokenHolder,nodeManager);
  result=new ConstraintValidatingKernelTransaction(result);
  result=new LockingKernelTransaction(result,lockManager,transactionManager,nodeManager);
  if (highlyAvailableInstance) {
    result=new UniquenessConstraintStoppingKernelTransaction(result);
  }
  result=new ReferenceCountingKernelTransaction(result,statementLogic != null ? statementLogic.lifecycleOperations() : null);
  return result;
}
