{
  this.fs=fs;
  this.config=config;
  this.transactionManager=transactionManager;
  this.propertyKeyTokenHolder=propertyKeyTokenHolder;
  this.labelTokenHolder=labelTokenHolder;
  this.relationshipTypeTokenHolder=relationshipTypeTokenHolder;
  this.persistenceManager=persistenceManager;
  this.schemaState=schemaState;
  this.providerMap=providerMap;
  this.readOnly=readOnly;
  this.schemaWriteGuard=schemaWriteGuard;
  this.indexService=indexService;
  this.neoStore=neoStoreProvider.instance();
  this.neoStoreProvider=neoStoreProvider;
  this.persistenceCache=persistenceCache;
  this.schemaCache=schemaCache;
  this.labelScanStore=labelScanStore;
  this.nodeManager=nodeManager;
  this.scheduler=scheduler;
  this.legacyPropertyTrackers=new LegacyPropertyTrackers(propertyKeyTokenHolder,nodeManager.getNodePropertyTrackers(),nodeManager.getRelationshipPropertyTrackers(),nodeManager);
  this.storeLayer=storeLayer;
  this.statementOperations=buildStatementOperations();
  this.heuristicsService=new HeuristicsServiceRepository(fs,config,storeLayer,scheduler).loadHeuristics();
}
