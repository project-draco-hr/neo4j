{
  String path="target/test-data/stringlogger";
  deleteRecursively(new File(path));
  File logFile=new File(path,"messages.log");
  File oldFile=new File(path,"messages.log.1");
  File oldestFile=new File(path,"messages.log.2");
  StringLogger logger=getLogger(path,1);
  assertFalse(oldFile.exists());
  int counter=0;
  String prefix="Bogus message ";
  while (!oldFile.exists()) {
    logger.logMessage(prefix + counter++,true);
  }
  int mark1=counter - 1;
  logger.logMessage(prefix + counter++,true);
  assertTrue(firstLineOfFile(oldFile).contains(prefix + "0"));
  assertTrue(lastLineOfFile(oldFile).contains(prefix + mark1));
  assertTrue(firstLineOfFile(logFile).contains(prefix + (counter - 1)));
  while (!oldestFile.exists()) {
    logger.logMessage(prefix + counter++,true);
  }
  int mark2=counter - 1;
  logger.logMessage(prefix + counter++,true);
  assertTrue(firstLineOfFile(oldestFile).contains(prefix + "0"));
  assertTrue(lastLineOfFile(oldestFile).contains(prefix + mark1));
  assertTrue(firstLineOfFile(oldFile).contains(prefix + (mark1 + 1)));
  assertTrue(lastLineOfFile(oldFile).contains(prefix + mark2));
  assertTrue(firstLineOfFile(logFile).contains(prefix + (counter - 1)));
  int linesToRotate=mark2 - mark1;
  for (int i=0; i < linesToRotate; i++) {
    logger.logMessage(prefix + counter++,true);
  }
  assertFalse(new File(path,"messages.log.3").exists());
  assertTrue(firstLineOfFile(oldestFile).contains(prefix + (mark1 + 1)));
  assertTrue(lastLineOfFile(oldestFile).contains(prefix + mark2));
}
