{
  log.info("Non clean shutdown detected on log [" + logFileName + "]. Recovery started ...");
  msgLog.logMessage("Non clean shutdown detected on log [" + logFileName + "]. Recovery started ...");
  buffer.clear();
  buffer.limit(8);
  if (fileChannel.read(buffer) != 8) {
    log.info("Unable to read header information, " + "no records in logical log.");
    msgLog.logMessage("No log version found for " + logFileName);
    fileChannel.close();
    boolean success=FileUtils.renameFile(new File(logFileName),new File(logFileName + "_unknown_timestamp_" + System.currentTimeMillis()+ ".log"));
    assert success;
    fileChannel=new RandomAccessFile(logFileName,"rw").getChannel();
    return;
  }
  buffer.flip();
  logVersion=buffer.getLong();
  log.fine("Logical log version: " + logVersion);
  msgLog.logMessage("[" + logFileName + "] logVersion="+ logVersion);
  long logEntriesFound=0;
  long lastEntryPos=fileChannel.position();
  while (readEntry()) {
    logEntriesFound++;
    lastEntryPos=fileChannel.position();
  }
  fileChannel.position(lastEntryPos);
  msgLog.logMessage("[" + logFileName + "] entries found="+ logEntriesFound+ " lastEntryPos="+ lastEntryPos);
  buffer.clear();
  while (buffer.hasRemaining()) {
    buffer.put((byte)0);
  }
  buffer.flip();
  long endPosition=fileChannel.size();
  do {
    long bytesLeft=fileChannel.size() - fileChannel.position();
    if (bytesLeft < buffer.capacity()) {
      buffer.limit((int)bytesLeft);
    }
    fileChannel.write(buffer);
    buffer.flip();
  }
 while (fileChannel.position() < endPosition);
  fileChannel.position(lastEntryPos);
  scanIsComplete=true;
  log.fine("Internal recovery completed, scanned " + logEntriesFound + " log entries.");
  xaRm.checkXids();
  if (xidIdentMap.size() == 0) {
    log.fine("Recovery completed.");
  }
 else {
    log.fine("[" + logFileName + "] Found "+ xidIdentMap.size()+ " prepared 2PC transactions.");
    for (    StartEntry entry : xidIdentMap.values()) {
      log.fine("[" + logFileName + "] 2PC xid["+ entry.getXid()+ "]");
    }
  }
  recoveredTxMap.clear();
}
