{
  List<LogEntry> logEntryList=null;
  Map<Integer,List<LogEntry>> transactions=new HashMap<Integer,List<LogEntry>>();
  LogEntry entry;
  while ((entry=LogIoUtils.readEntry(buffer,log,cf)) != null && logEntryList == null) {
    if (entry instanceof LogEntry.Start) {
      List<LogEntry> list=new LinkedList<LogEntry>();
      list.add(entry);
      transactions.put(entry.getIdentifier(),list);
    }
 else     if (entry instanceof LogEntry.Commit) {
      if (((LogEntry.Commit)entry).getTxId() == txId) {
        logEntryList=transactions.get(entry.getIdentifier());
        logEntryList.add(entry);
      }
 else {
        transactions.remove(entry.getIdentifier());
      }
    }
 else     if (entry instanceof LogEntry.Command || entry instanceof LogEntry.Prepare) {
      List<LogEntry> list=transactions.get(entry.getIdentifier());
      if (list != null) {
        list.add(entry);
      }
    }
 else     if (entry instanceof LogEntry.Done) {
      transactions.remove(entry.getIdentifier());
    }
 else {
      throw new RuntimeException("Unknown entry: " + entry);
    }
  }
  if (logEntryList == null) {
    msgLog.logMessage("txId=" + txId + " not found in log="+ expectedVersion,true);
    throw new IOException("Transaction[" + txId + "] not found in log ("+ expectedVersion+ ") "+ "current version is ("+ this.logVersion+ ")");
  }
  logEntryList.add(new LogEntry.Done(logEntryList.get(0).getIdentifier()));
  return logEntryList;
}
