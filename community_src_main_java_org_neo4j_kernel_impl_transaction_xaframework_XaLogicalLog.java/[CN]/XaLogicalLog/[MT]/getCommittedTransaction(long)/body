{
  String name=fileName + ".tx_" + txId;
  File txFile=new File(name);
  if (txFile.exists()) {
    return new RandomAccessFile(name,"r").getChannel();
  }
  long version=logVersion;
  long committedTx=previousLogLastCommittedTx;
  while (committedTx < txId) {
    version--;
    ReadableByteChannel log=getLogicalLog(version);
    ByteBuffer buf=ByteBuffer.allocate(16);
    if (log.read(buf) != 16) {
      throw new IOException("Unable to read log version " + version);
    }
    buf.flip();
    long readVersion=buffer.getLong();
    if (readVersion != version) {
      throw new IOException("Got " + readVersion + " from log when expecting "+ version);
    }
    committedTx=buffer.getLong();
    log.close();
  }
  return null;
}
