{
  long version=logVersion;
  long committedTx=previousLogLastCommittedTx;
  while (version >= 0) {
    ReadableByteChannel log=getLogicalLogOrMyself(version);
    ByteBuffer buf=ByteBuffer.allocate(16);
    if (log.read(buf) != 16) {
      throw new IOException("Unable to read log version " + version);
    }
    buf.flip();
    long readVersion=buffer.getLong();
    if (readVersion != version) {
      throw new IOException("Got " + readVersion + " from log when expecting "+ version);
    }
    committedTx=buffer.getLong();
    log.close();
    if (committedTx <= txId) {
      break;
    }
    version--;
  }
  return version;
}
