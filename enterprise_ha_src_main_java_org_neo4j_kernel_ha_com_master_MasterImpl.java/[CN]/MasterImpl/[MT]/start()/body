{
  this.slaveLockSessions=new TimedRepository<>(new TimedRepository.ValueFactory<RequestContext,Locks.Client>(){
    @Override public Locks.Client newInstance(    RequestContext ctx){
      return spi.acquireClient().description(String.format("Locks held on behalf of slave `%d`, slave transaction id `%d`",ctx.machineId(),ctx.getEventIdentifier()));
    }
  }
,new Consumer<Locks.Client>(){
    @Override public void accept(    Locks.Client value){
      value.close();
    }
  }
,config.get(HaSettings.lock_read_timeout) + TX_TIMEOUT_ADDITION,Clock.SYSTEM_CLOCK);
  staleSlaveReaperJob=spi.scheduleRecurringJob(slaveLocksTimeout,unfinishedSessionsCheckInterval,slaveLockSessions);
}
