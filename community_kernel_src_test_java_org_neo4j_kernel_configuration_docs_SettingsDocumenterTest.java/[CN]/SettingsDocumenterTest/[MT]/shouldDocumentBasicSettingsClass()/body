{
  String result=new SettingsDocumenter().document(SimpleSettings.class);
  assertThat(result,equalTo(String.format("[[config-org.neo4j.kernel.configuration.docs.SettingsDocumenterTest-SimpleSettings]]%n" + ".List of configuration settings%n" + "ifndef::nonhtmloutput[]%n"+ "%n"+ "[options=\"header\"]%n"+ "|===%n"+ "|Name|Description%n"+ "|<<config_public.default,public.default>>|Public with default.%n"+ "|<<config_public.nodefault,public.nodefault>>|Public nodefault.%n"+ "|===%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "ifdef::nonhtmloutput[]%n"+ "%n"+ "* <<config_public.default,public.default>>: Public with default.%n"+ "* <<config_public.nodefault,public.nodefault>>: Public nodefault.%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "%n"+ "[[config-org.neo4j.kernel.configuration.docs.SettingsDocumenterTest-SimpleSettings-deprecated]]%n"+ ".Deprecated settings%n"+ "ifndef::nonhtmloutput[]%n"+ "%n"+ "[options=\"header\"]%n"+ "|===%n"+ "|Name|Description%n"+ "|<<config_public.deprecated,public.deprecated>>|Public deprecated.%n"+ "|===%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "ifdef::nonhtmloutput[]%n"+ "%n"+ "* <<config_public.deprecated,public.deprecated>>: Public deprecated.%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "%n"+ "ifndef::nonhtmloutput[]%n"+ "[[config_public.default]]%n"+ ".public.default%n"+ "[cols=\"<1h,<4\"]%n"+ "|===%n"+ "|Description a|Public with default.%n"+ "|Valid values a|public.default is an integer%n"+ "|Default value m|1%n"+ "|===%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "ifdef::nonhtmloutput[]%n"+ "[[config_public.default]]%n"+ ".public.default%n"+ "[cols=\"<1h,<4\"]%n"+ "|===%n"+ "|Description a|Public with default.%n"+ "|Valid values a|public.default is an integer%n"+ "|Default value m|1%n"+ "|===%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "ifndef::nonhtmloutput[]%n"+ "[[config_public.deprecated]]%n"+ ".public.deprecated%n"+ "[cols=\"<1h,<4\"]%n"+ "|===%n"+ "|Description a|Public deprecated.%n"+ "|Valid values a|public.deprecated is a boolean%n"+ "|Default value m|false%n"+ "|Deprecated a|The `public.deprecated` configuration setting has been deprecated.%n"+ "|===%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "ifdef::nonhtmloutput[]%n"+ "[[config_public.deprecated]]%n"+ ".public.deprecated%n"+ "[cols=\"<1h,<4\"]%n"+ "|===%n"+ "|Description a|Public deprecated.%n"+ "|Valid values a|public.deprecated is a boolean%n"+ "|Default value m|false%n"+ "|Deprecated a|The `public.deprecated` configuration setting has been deprecated.%n"+ "|===%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "ifndef::nonhtmloutput[]%n"+ "[[config_public.nodefault]]%n"+ ".public.nodefault%n"+ "[cols=\"<1h,<4\"]%n"+ "|===%n"+ "|Description a|Public nodefault.%n"+ "|Valid values a|public.nodefault is a string%n"+ "|===%n"+ "endif::nonhtmloutput[]%n"+ "%n"+ "ifdef::nonhtmloutput[]%n"+ "[[config_public.nodefault]]%n"+ ".public.nodefault%n"+ "[cols=\"<1h,<4\"]%n"+ "|===%n"+ "|Description a|Public nodefault.%n"+ "|Valid values a|public.nodefault is a string%n"+ "|===%n"+ "endif::nonhtmloutput[]%n%n")));
}
