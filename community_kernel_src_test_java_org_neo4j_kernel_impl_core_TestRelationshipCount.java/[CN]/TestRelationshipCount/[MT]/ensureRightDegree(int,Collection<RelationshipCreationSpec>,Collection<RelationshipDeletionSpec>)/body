{
  Map<RelType,int[]> expectedCounts=new EnumMap<>(RelType.class);
  for (  RelType type : RelType.values()) {
    expectedCounts.put(type,new int[3]);
  }
  Node me=getGraphDb().createNode();
  for (int i=0; i < initialSize; i++) {
    me.createRelationshipTo(getGraphDb().createNode(),RelType.INITIAL);
  }
  newTransaction();
  expectedCounts.get(RelType.INITIAL)[0]=initialSize;
  assertCounts(me,expectedCounts);
  int counter=0;
  for (  RelationshipCreationSpec spec : cspecs) {
    for (int i=0; i < spec.count; i++) {
      Node otherNode=null;
      if (spec.dir == Direction.OUTGOING) {
        me.createRelationshipTo((otherNode=getGraphDb().createNode()),spec.type);
      }
 else       if (spec.dir == Direction.INCOMING) {
        (otherNode=getGraphDb().createNode()).createRelationshipTo(me,spec.type);
      }
 else {
        me.createRelationshipTo(me,spec.type);
      }
      expectedCounts.get(spec.type)[spec.dir.ordinal()]++;
      if (otherNode != null) {
        assertEquals(1,otherNode.getDegree());
      }
      assertCounts(me,expectedCounts);
      if (counter % 3 == 0 && counter > 0) {
        newTransaction();
        assertCounts(me,expectedCounts);
      }
    }
  }
  assertCounts(me,expectedCounts);
  newTransaction();
  assertCounts(me,expectedCounts);
  counter=0;
  if (dspecs == null) {
    for (    RelType type : RelType.values()) {
      if (!type.measure) {
        continue;
      }
      for (      Direction direction : Direction.values()) {
        int[] counts=expectedCounts.get(type);
        if (counts[direction.ordinal()] > 0) {
          deleteOneRelationship(me,type,direction,0);
          counts[direction.ordinal()]--;
          assertCounts(me,expectedCounts);
          if (counter % 3 == 0 && counter > 0) {
            newTransaction();
            assertCounts(me,expectedCounts);
          }
        }
      }
    }
  }
 else {
    for (    RelationshipDeletionSpec spec : dspecs) {
      deleteOneRelationship(me,spec.type,spec.dir,spec.which);
      expectedCounts.get(spec.type)[spec.dir.ordinal()]--;
      assertCounts(me,expectedCounts);
      if (counter % 3 == 0 && counter > 0) {
        newTransaction();
        assertCounts(me,expectedCounts);
      }
    }
  }
  assertCounts(me,expectedCounts);
  newTransaction();
  assertCounts(me,expectedCounts);
  for (  Relationship rel : me.getRelationships()) {
    Node otherNode=rel.getOtherNode(me);
    if (!otherNode.equals(me)) {
      otherNode.delete();
    }
    rel.delete();
  }
  me.delete();
}
