{
  assertExpectedRelationshipTypes(expectedTypes,node,false);
  node.createRelationshipTo(getGraphDb().createNode(),RelType.TYPE1);
  expectedTypes.add(RelType.TYPE1.name());
  assertExpectedRelationshipTypes(expectedTypes,node,false);
  node.createRelationshipTo(getGraphDb().createNode(),RelType.TYPE1);
  assertExpectedRelationshipTypes(expectedTypes,node,true);
  Relationship rel=node.createRelationshipTo(getGraphDb().createNode(),RelType.TYPE2);
  expectedTypes.add(RelType.TYPE2.name());
  assertExpectedRelationshipTypes(expectedTypes,node,false);
  rel.delete();
  expectedTypes.remove(RelType.TYPE2.name());
  assertExpectedRelationshipTypes(expectedTypes,node,true);
  node.createRelationshipTo(getGraphDb().createNode(),RelType.TYPE2);
  node.createRelationshipTo(getGraphDb().createNode(),RelType.TYPE2);
  expectedTypes.add(RelType.TYPE2.name());
  node.createRelationshipTo(getGraphDb().createNode(),MyRelTypes.TEST);
  expectedTypes.add(MyRelTypes.TEST.name());
  assertExpectedRelationshipTypes(expectedTypes,node,true);
  for (  Relationship r : node.getRelationships(RelType.TYPE1)) {
    assertExpectedRelationshipTypes(expectedTypes,node,false);
    r.delete();
  }
  expectedTypes.remove(RelType.TYPE1.name());
  assertExpectedRelationshipTypes(expectedTypes,node,true);
}
