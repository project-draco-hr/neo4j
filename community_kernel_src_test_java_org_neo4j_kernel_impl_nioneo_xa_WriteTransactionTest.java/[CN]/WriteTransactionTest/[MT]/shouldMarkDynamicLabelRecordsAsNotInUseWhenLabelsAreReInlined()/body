{
  final long nodeId=neoStore.getNodeStore().nextId();
  NeoStoreTransaction writeTransaction=newWriteTransaction(mockIndexing);
  writeTransaction.nodeCreate(nodeId);
  writeTransaction.addLabelToNode(7,nodeId);
  writeTransaction.addLabelToNode(11,nodeId);
  writeTransaction.addLabelToNode(12,nodeId);
  writeTransaction.addLabelToNode(15,nodeId);
  writeTransaction.addLabelToNode(23,nodeId);
  writeTransaction.addLabelToNode(27,nodeId);
  writeTransaction.addLabelToNode(50,nodeId);
  writeTransaction.prepare();
  writeTransaction.commit();
  CommandCapturingVisitor commandCapture=new CommandCapturingVisitor();
  writeTransaction=newWriteTransaction(mockIndexing,commandCapture);
  writeTransaction.removeLabelFromNode(11,nodeId);
  writeTransaction.removeLabelFromNode(23,nodeId);
  writeTransaction.prepare();
  writeTransaction.commit();
  commandCapture.visitCapturedCommands(new Visitor<XaCommand,RuntimeException>(){
    @Override public boolean visit(    XaCommand element) throws RuntimeException {
      if (element instanceof Command.NodeCommand) {
        Command.NodeCommand cmd=(Command.NodeCommand)element;
        Collection<DynamicRecord> beforeDynLabels=cmd.getAfter().getDynamicLabelRecords();
        assertThat(beforeDynLabels.size(),equalTo(1));
        assertThat(beforeDynLabels.iterator().next().inUse(),equalTo(false));
      }
      return true;
    }
  }
);
}
