{
  final long nodeId=neoStore.getNodeStore().nextId();
  NeoStoreTransaction writeTransaction=newWriteTransaction(mockIndexing);
  writeTransaction.nodeCreate(nodeId);
  writeTransaction.addLabelToNode(16,nodeId);
  writeTransaction.addLabelToNode(29,nodeId);
  writeTransaction.addLabelToNode(32,nodeId);
  writeTransaction.addLabelToNode(41,nodeId);
  writeTransaction.addLabelToNode(44,nodeId);
  writeTransaction.addLabelToNode(45,nodeId);
  writeTransaction.addLabelToNode(50,nodeId);
  writeTransaction.addLabelToNode(51,nodeId);
  writeTransaction.addLabelToNode(52,nodeId);
  writeTransaction.prepare();
  try (LockGroup lockGroup=new LockGroup()){
    writeTransaction.commit(lockGroup);
  }
   CommandCapturingVisitor commandCapture=new CommandCapturingVisitor();
  writeTransaction=newWriteTransaction(mockIndexing,commandCapture);
  writeTransaction.removeLabelFromNode(50,nodeId);
  writeTransaction.removeLabelFromNode(51,nodeId);
  writeTransaction.removeLabelFromNode(52,nodeId);
  writeTransaction.addLabelToNode(60,nodeId);
  writeTransaction.addLabelToNode(61,nodeId);
  writeTransaction.addLabelToNode(62,nodeId);
  writeTransaction.prepare();
  try (LockGroup lockGroup=new LockGroup()){
    writeTransaction.commit(lockGroup);
  }
   commandCapture.visitCapturedCommands(new Visitor<XaCommand,RuntimeException>(){
    @Override public boolean visit(    XaCommand element) throws RuntimeException {
      if (element instanceof Command.NodeCommand) {
        Command.NodeCommand cmd=(Command.NodeCommand)element;
        DynamicRecord before=cmd.getBefore().getDynamicLabelRecords().iterator().next();
        DynamicRecord after=cmd.getAfter().getDynamicLabelRecords().iterator().next();
        assertThat(before.getId(),equalTo(after.getId()));
        assertThat(after.inUse(),equalTo(true));
      }
      return true;
    }
  }
);
}
