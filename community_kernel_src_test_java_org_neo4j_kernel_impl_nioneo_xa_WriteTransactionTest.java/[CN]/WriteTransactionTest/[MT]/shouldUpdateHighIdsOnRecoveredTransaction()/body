{
  WriteTransaction tx=newWriteTransaction(MOCK_INDEXING);
  int nodeId=5, relId=10, relationshipType=3, propertyKeyId=4, ruleId=8;
  tx.nodeCreate(nodeId);
  tx.createRelationshipTypeToken(relationshipType,"type");
  tx.relationshipCreate(relId,0,nodeId,nodeId);
  tx.relAddProperty(relId,propertyKeyId,new long[]{1l << 60,1l << 60,1l << 60,1l << 60,1l << 60,1l << 60,1l << 60,1l << 60,1l << 60,1l << 60});
  tx.createPropertyKeyToken("key",propertyKeyId);
  tx.nodeAddProperty(nodeId,propertyKeyId,"something long and nasty that requires dynamic records for sure I would think and hope. Ok then ??????%!=");
  for (int i=0; i < 10; i++) {
    tx.addLabelToNode(10000 + i,nodeId);
  }
  tx.createSchemaRule(indexRule(ruleId,100,propertyKeyId,PROVIDER_DESCRIPTOR));
  prepareAndCommitRecovered(tx);
  assertEquals("NodeStore",nodeId + 1,neoStore.getNodeStore().getHighId());
  assertEquals("DynamicNodeLabelStore",2,neoStore.getNodeStore().getDynamicLabelStore().getHighId());
  assertEquals("RelationshipStore",relId + 1,neoStore.getRelationshipStore().getHighId());
  assertEquals("RelationshipTypeStore",relationshipType + 1,neoStore.getRelationshipTypeStore().getHighId());
  assertEquals("RelationshipType NameStore",2,neoStore.getRelationshipTypeStore().getNameStore().getHighId());
  assertEquals("PropertyStore",2,neoStore.getPropertyStore().getHighId());
  assertEquals("PropertyStore DynamicStringStore",2,neoStore.getPropertyStore().getStringStore().getHighId());
  assertEquals("PropertyStore DynamicArrayStore",2,neoStore.getPropertyStore().getArrayStore().getHighId());
  assertEquals("PropertyIndexStore",propertyKeyId + 1,neoStore.getPropertyStore().getPropertyKeyTokenStore().getHighId());
  assertEquals("PropertyKeyToken NameStore",2,neoStore.getPropertyStore().getPropertyKeyTokenStore().getNameStore().getHighId());
  assertEquals("SchemaStore",ruleId + 1,neoStore.getSchemaStore().getHighId());
}
