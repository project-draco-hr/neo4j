{
  PartitionedIndexStorage indexStorage=getIndexStorage();
  LuceneIndexAccessor accessor=createAccessor(indexStorage);
  updateAndCommit(accessor,asList(add(1L,"value1")));
  updateAndCommit(accessor,asList(add(2L,"value2")));
  updateAndCommit(accessor,asList(add(3L,"value3")));
  updateAndCommit(accessor,asList(add(4L,"value4")));
  updateAndCommit(accessor,asList(remove(1L,"value1")));
  updateAndCommit(accessor,asList(remove(2L,"value2")));
  updateAndCommit(accessor,asList(remove(3L,"value3")));
  updateAndCommit(accessor,asList(add(1L,"value1")));
  updateAndCommit(accessor,asList(add(3L,"value3b")));
  accessor.close();
  assertEquals(asList(1L),getAllNodes(indexStorage,"value1"));
  assertEquals(emptyList(),getAllNodes(indexStorage,"value2"));
  assertEquals(emptyList(),getAllNodes(indexStorage,"value3"));
  assertEquals(asList(3L),getAllNodes(indexStorage,"value3b"));
  assertEquals(asList(4L),getAllNodes(indexStorage,"value4"));
}
