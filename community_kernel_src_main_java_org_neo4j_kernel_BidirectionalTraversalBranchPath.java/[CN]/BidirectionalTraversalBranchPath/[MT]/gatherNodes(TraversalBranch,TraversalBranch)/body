{
  LinkedList<Node> nodes=new LinkedList<Node>();
  TraversalBranch branch=first;
  while (branch.length() > 0) {
    nodes.addFirst(branch.endNode());
    branch=branch.parent();
  }
  if (cachedStartNode == null && first == start)   cachedStartNode=branch.endNode();
  nodes.addFirst(branch.endNode());
  branch=then.parent();
  if (branch != null) {
    while (branch.length() > 0) {
      nodes.add(branch.endNode());
      branch=branch.parent();
    }
    if (branch.length() >= 0) {
      nodes.add(branch.endNode());
    }
  }
  if (cachedStartNode == null && then == start)   cachedStartNode=branch.endNode();
  return nodes;
}
