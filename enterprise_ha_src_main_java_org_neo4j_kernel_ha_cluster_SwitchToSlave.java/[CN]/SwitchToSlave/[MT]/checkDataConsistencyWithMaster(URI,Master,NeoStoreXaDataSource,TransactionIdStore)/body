{
  long myLastCommittedTx=transactionIdStore.getLastCommittedTransactionId();
  HandshakeResult handshake;
  try (Response<HandshakeResult> response=master.handshake(myLastCommittedTx,nioneoDataSource.getStoreId())){
    handshake=response.response();
    requestContextFactory.setEpoch(handshake.epoch());
  }
 catch (  BranchedDataException e) {
    throw new BranchedDataException("The database stored on this machine has diverged from that " + "of the master. This will be automatically resolved.",e);
  }
catch (  RuntimeException e) {
    if (e.getCause() instanceof MissingLogDataException) {
      throw new StoreOutOfDateException("The master is missing the log required to complete the " + "consistency check",e.getCause());
    }
    throw e;
  }
  final TransactionMetadataCache.TransactionMetadata metadata=nioneoDataSource.getDependencyResolver().resolveDependency(LogicalTransactionStore.class).getMetadataFor(myLastCommittedTx);
  int myMaster=metadata.getMasterId();
  long myChecksum=metadata.getChecksum();
  if (myMaster != -1 && (myMaster != handshake.txAuthor() || myChecksum != handshake.txChecksum())) {
    String msg="The cluster contains two logically different versions of the database.. This will be " + "automatically resolved. Details: I (machineId:" + config.get(ClusterSettings.server_id) + ") think machineId for txId ("+ myLastCommittedTx+ ") is "+ myMaster+ ", but master (machineId:"+ getServerId(availableMasterId)+ ") says that it's "+ handshake;
    throw new BranchedDataException(msg);
  }
  msgLog.logMessage("Master id for last committed tx ok with highestTxId=" + myLastCommittedTx + " with masterId="+ myMaster,true);
}
