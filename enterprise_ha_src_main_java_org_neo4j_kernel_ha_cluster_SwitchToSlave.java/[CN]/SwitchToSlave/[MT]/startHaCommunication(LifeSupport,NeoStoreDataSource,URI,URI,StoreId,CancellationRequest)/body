{
  MasterClient master=newMasterClient(masterUri,me,neoDataSource.getStoreId(),haCommunicationLife);
  TransactionObligationFulfiller obligationFulfiller=resolver.resolveDependency(TransactionObligationFulfiller.class);
  UpdatePullerScheduler updatePullerScheduler=updatePullerFactory.createUpdatePullerScheduler(updatePuller);
  Slave slaveImpl=new SlaveImpl(obligationFulfiller);
  SlaveServer server=slaveServerFactory.apply(slaveImpl);
  if (cancellationRequest.cancellationRequested()) {
    msgLog.info("Switch to slave cancelled, unable to start HA-communication");
    return null;
  }
  masterDelegateHandler.setDelegate(master);
  haCommunicationLife.add(updatePullerScheduler);
  haCommunicationLife.add(server);
  haCommunicationLife.start();
  if (!catchUpWithMaster(updatePuller)) {
    return null;
  }
  URI slaveHaURI=createHaURI(me,server);
  clusterMemberAvailability.memberIsAvailable(HighAvailabilityModeSwitcher.SLAVE,slaveHaURI,storeId);
  return slaveHaURI;
}
