{
  indexCommandDetector.reset();
  try {
    LogPosition logPositionBeforeCommit;
    LogPosition logPositionAfterCommit;
synchronized (channel) {
      logPositionBeforeCommit=channel.getCurrentPosition(positionMarker).newPosition();
      transactionLogWriter.append(transaction,transactionId);
      logPositionAfterCommit=channel.getCurrentPosition(positionMarker).newPosition();
    }
    long transactionChecksum=checksum(transaction.additionalHeader(),transaction.getMasterId(),transaction.getAuthorId());
    transactionMetadataCache.cacheTransactionMetadata(transactionId,logPositionBeforeCommit,transaction.getMasterId(),transaction.getAuthorId(),transactionChecksum);
    boolean hasLegacyIndexChanges=indexCommandDetector.hasWrittenAnyLegacyIndexCommand();
    if (hasLegacyIndexChanges) {
      legacyIndexTransactionOrdering.offer(transactionId);
    }
    return new TransactionCommitment(hasLegacyIndexChanges,transactionId,transactionChecksum,logPositionAfterCommit,transactionIdStore);
  }
 catch (  final Throwable panic) {
    kernelHealth.panic(panic);
    throw panic;
  }
}
