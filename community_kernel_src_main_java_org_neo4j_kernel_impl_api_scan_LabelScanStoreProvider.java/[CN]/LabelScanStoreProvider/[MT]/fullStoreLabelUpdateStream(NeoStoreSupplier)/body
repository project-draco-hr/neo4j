{
  return new FullStoreChangeStream(){
    @Override public Iterator<NodeLabelUpdate> iterator(){
      return new PrefetchingIterator<NodeLabelUpdate>(){
        private final NodeStore nodeStore=neoStoreSupplier.get().getNodeStore();
        private final long highId=nodeStore.getHighestPossibleIdInUse();
        private long current;
        @Override protected NodeLabelUpdate fetchNextOrNull(){
          while (current <= highId) {
            NodeRecord node=nodeStore.forceGetRecord(current++);
            if (node.inUse()) {
              long[] labels=NodeLabelsField.parseLabelsField(node).get(nodeStore);
              if (labels.length > 0) {
                return NodeLabelUpdate.labelChanges(node.getId(),EMPTY_LONG_ARRAY,labels);
              }
            }
          }
          return null;
        }
      }
;
    }
    @Override public long highestNodeId(){
      return neoStoreSupplier.get().getNodeStore().getHighestPossibleIdInUse();
    }
  }
;
}
