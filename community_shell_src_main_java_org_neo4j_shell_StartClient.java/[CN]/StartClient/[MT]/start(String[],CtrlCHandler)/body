{
  Args args=Args.withFlags(ARG_READONLY).parse(arguments);
  if (args.has("?") || args.has("h") || args.has("help")|| args.has("usage")) {
    printUsage(out);
    return;
  }
  String path=args.get(ARG_PATH,null);
  String host=args.get(ARG_HOST,null);
  String port=args.get(ARG_PORT,null);
  String name=args.get(ARG_NAME,null);
  String pid=args.get(ARG_PID,null);
  boolean version=args.getBoolean(ARG_VERSION,false,true);
  if (version) {
    String edition=StringUtils.capitalize(factory.getEdition().toLowerCase());
    out.printf("Neo4j %s, version %s",edition,Version.getKernelVersion());
  }
 else   if ((path != null && (port != null || name != null || host != null || pid != null)) || (pid != null && host != null)) {
    err.println("You have supplied both " + ARG_PATH + " as well as "+ ARG_HOST+ "/"+ ARG_PORT+ "/"+ ARG_NAME+ ". "+ "You should either supply only "+ ARG_PATH+ " or "+ ARG_HOST+ "/"+ ARG_PORT+ "/"+ ARG_NAME+ " so that either a local or "+ "remote shell client can be started");
  }
 else   if (path != null) {
    try {
      checkNeo4jDependency();
    }
 catch (    ShellException e) {
      throw new ShellExecutionFailureException(e,args);
    }
    startLocal(args,signalHandler);
  }
 else {
    String readonly=args.get(ARG_READONLY,null);
    if (readonly != null) {
      err.println("Warning: -" + ARG_READONLY + " is ignored unless you connect with -"+ ARG_PATH+ "!");
    }
    if (pid != null) {
      startServer(pid,args);
    }
    startRemote(args,signalHandler);
  }
}
