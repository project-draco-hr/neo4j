{
  raft.handle(appendEntriesRequest().from(otherMember).leaderTerm(0).prevLogIndex(-1).prevLogTerm(-1).logEntry(new RaftLogEntry(0,data(1))).leaderCommit(-1).build());
  raft.handle(appendEntriesRequest().from(otherMember).leaderTerm(0).prevLogIndex(0).prevLogTerm(0).logEntry(new RaftLogEntry(0,data(2))).leaderCommit(-1).build());
  raft.handle(appendEntriesRequest().from(otherMember).leaderTerm(0).prevLogIndex(1).prevLogTerm(0).logEntry(new RaftLogEntry(0,data(3))).leaderCommit(0).build());
  raft.handle(appendEntriesRequest().from(otherMember).leaderTerm(1).prevLogIndex(2).prevLogTerm(0).logEntry(new RaftLogEntry(1,data(4))).leaderCommit(1).build());
  raft.handle(appendEntriesRequest().from(otherMember).leaderTerm(1).prevLogIndex(3).prevLogTerm(1).logEntry(new RaftLogEntry(1,data(5))).leaderCommit(2).build());
  raft.handle(appendEntriesRequest().from(otherMember).leaderTerm(1).prevLogIndex(4).prevLogTerm(1).logEntry(new RaftLogEntry(1,data(6))).leaderCommit(4).build());
  InOrder invocationOrder=inOrder(outbound);
  invocationOrder.verify(outbound,times(1)).send(same(otherMember),eq(appendEntriesResponse().from(myself).term(0).appendIndex(0).matchIndex(0).success().build()));
  invocationOrder.verify(outbound,times(1)).send(same(otherMember),eq(appendEntriesResponse().from(myself).term(0).appendIndex(1).matchIndex(1).success().build()));
  invocationOrder.verify(outbound,times(1)).send(same(otherMember),eq(appendEntriesResponse().from(myself).term(0).appendIndex(2).matchIndex(2).success().build()));
  invocationOrder.verify(outbound,times(1)).send(same(otherMember),eq(appendEntriesResponse().from(myself).term(1).appendIndex(3).matchIndex(3).success().build()));
  invocationOrder.verify(outbound,times(1)).send(same(otherMember),eq(appendEntriesResponse().from(myself).term(1).appendIndex(4).matchIndex(4).success().build()));
  invocationOrder.verify(outbound,times(1)).send(same(otherMember),eq(appendEntriesResponse().from(myself).term(1).appendIndex(5).matchIndex(5).success().build()));
}
