{
  if (statement.equalsIgnoreCase(BEGIN)) {
    throw new QueryExecutionKernelException(new InvalidSemanticsException("Nested transactions are not supported."));
  }
 else   if (statement.equalsIgnoreCase(COMMIT)) {
    ctx.currentTransaction.success();
    ctx.currentTransaction.close();
    ctx.currentTransaction=null;
    long txId=spi.newestEncounteredTxId();
    Bookmark bookmark=new Bookmark(txId);
    ctx.currentResult=new BookmarkResult(bookmark);
    return AUTO_COMMIT;
  }
 else   if (statement.equalsIgnoreCase(ROLLBACK)) {
    ctx.currentTransaction.failure();
    ctx.currentTransaction.close();
    ctx.currentTransaction=null;
    ctx.currentResult=BoltResult.EMPTY;
    return AUTO_COMMIT;
  }
 else   if (spi.isPeriodicCommit(statement)) {
    throw new QueryExecutionKernelException(new InvalidSemanticsException("Executing queries that use periodic commit in an " + "open transaction is not possible."));
  }
 else {
    ctx.currentResultHandle=execute(ctx,spi,statement,params);
    ctx.currentResult=ctx.currentResultHandle.start();
    return EXPLICIT_TRANSACTION;
  }
}
