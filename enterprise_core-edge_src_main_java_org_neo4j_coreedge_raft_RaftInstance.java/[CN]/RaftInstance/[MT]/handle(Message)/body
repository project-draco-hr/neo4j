{
  if (handlingMessage) {
    throw new IllegalStateException("recursive use");
  }
  try {
    handlingMessage=true;
    Outcome<MEMBER> outcome=currentRole.handler.handle((RaftMessages.RaftMessage<MEMBER>)incomingMessage,raftState,log);
    handleOutcome(outcome);
    currentRole=outcome.getNewRole();
    for (    RaftMessages.Directed<MEMBER> outgoingMessage : outcome.getOutgoingMessages()) {
      outbound.send(outgoingMessage.to(),outgoingMessage.message());
    }
    if (outcome.electionTimeoutRenewed()) {
      electionTimer.renew();
    }
    membershipManager.onRole(currentRole);
    if (currentRole == LEADER) {
      membershipManager.onFollowerStateChange(raftState.followerStates());
    }
  }
 catch (  IOException e) {
    log.error("Failed to process RAFT message " + incomingMessage,e);
    databaseHealthSupplier.get().panic(e);
  }
 finally {
    handlingMessage=false;
  }
}
