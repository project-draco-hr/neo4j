{
  try {
    Outcome<MEMBER> outcome=currentRole.handler.handle((RaftMessages.RaftMessage<MEMBER>)incomingMessage,state,log);
    state.update(outcome);
    sendMessages(outcome);
    handleTimers(outcome);
    handleLogShipping(outcome);
    membershipManager.processLog(outcome.getLogCommands());
    driveMembership(outcome);
    volatileLeader.set(outcome.getLeader());
    raftStateMachine.notifyUpdate();
    notifyLeaderChanges(outcome);
  }
 catch (  Throwable e) {
    log.error("Failed to process RAFT message " + incomingMessage,e);
    databaseHealthSupplier.get().panic(e);
  }
}
