{
  count++;
  return new StatementState(){
    private boolean open=true;
    @Override public void markAsClosed(){
      boolean isOpen=open && count > 0;
      if (!isOpen) {
        throw new IllegalStateException("This " + StatementState.class.getSimpleName() + " has been closed. No more interaction allowed");
      }
      open=false;
      if (--count == 0) {
        operations.close(parentState);
        reference=null;
      }
    }
    @Override public TxState txState(){
      return parentState.txState();
    }
    @Override public LockHolder locks(){
      return parentState.locks();
    }
    @Override public IndexReaderFactory indexReaderFactory(){
      return parentState.indexReaderFactory();
    }
    @Override public Closeable closeable(    LifecycleOperations logic){
      return parentState.closeable(logic);
    }
  }
;
}
