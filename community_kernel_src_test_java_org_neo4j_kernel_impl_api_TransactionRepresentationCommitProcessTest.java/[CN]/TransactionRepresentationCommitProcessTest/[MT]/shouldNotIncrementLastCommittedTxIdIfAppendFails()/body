{
  TransactionAppender appender=mock(TransactionAppender.class);
  long txId=11;
  IOException rootCause=new IOException("Mock exception");
  doThrow(new IOException(rootCause)).when(appender).append(any(TransactionRepresentation.class),any(LogAppendEvent.class));
  TransactionIdStore transactionIdStore=mock(TransactionIdStore.class);
  TransactionRepresentationStoreApplier storeApplier=mock(TransactionRepresentationStoreApplier.class);
  StorageEngine storageEngine=mock(StorageEngine.class);
  when(storageEngine.transactionApplier()).thenReturn(storeApplier);
  TransactionCommitProcess commitProcess=new TransactionRepresentationCommitProcess(appender,storageEngine,mockedIndexUpdatesValidator());
  try (LockGroup locks=new LockGroup()){
    commitProcess.commit(mockedTransaction(),locks,commitEvent,INTERNAL);
    fail("Should have failed, something is wrong with the mocking in this test");
  }
 catch (  TransactionFailureException e) {
    assertThat(e.getMessage(),containsString("Could not append transaction representation to log"));
    assertTrue(contains(e,rootCause.getMessage(),rootCause.getClass()));
  }
  verify(transactionIdStore,times(0)).transactionCommitted(txId,0);
}
