{
  TransactionIdStore transactionIdStore=mock(TransactionIdStore.class);
  TransactionAppender appender=mock(TransactionAppender.class);
  long txId=11;
  when(appender.append(any(TransactionRepresentation.class),any(LogAppendEvent.class))).thenReturn(new FakeCommitment(txId,transactionIdStore));
  IOException rootCause=new IOException("Mock exception");
  TransactionRepresentationStoreApplier storeApplier=mock(TransactionRepresentationStoreApplier.class);
  doThrow(new IOException(rootCause)).when(storeApplier).apply(any(TransactionRepresentation.class),any(ValidatedIndexUpdates.class),any(LockGroup.class),eq(txId),eq(INTERNAL));
  TransactionCommitProcess commitProcess=new TransactionRepresentationCommitProcess(appender,storeApplier,mockedIndexUpdatesValidator());
  TransactionRepresentation transaction=mockedTransaction();
  try (LockGroup locks=new LockGroup()){
    commitProcess.commit(transaction,locks,commitEvent,INTERNAL);
  }
 catch (  TransactionFailureException e) {
    assertThat(e.getMessage(),containsString("Could not apply the transaction to the store"));
    assertTrue(contains(e,rootCause.getMessage(),rootCause.getClass()));
  }
  verify(transactionIdStore,times(1)).transactionClosed(eq(txId),anyLong(),anyLong());
  verifyNoMoreInteractions(transactionIdStore);
}
