{
  IndexUpdatesValidator indexUpdatesValidator=mock(IndexUpdatesValidator.class);
  RuntimeException error=new UnderlyingStorageException(new IndexCapacityExceededException(10,10));
  when(indexUpdatesValidator.validate(any(TransactionRepresentation.class))).thenThrow(error);
  TransactionRepresentationStoreApplier storeApplier=mock(TransactionRepresentationStoreApplier.class);
  StorageEngine storageEngine=mock(StorageEngine.class);
  when(storageEngine.transactionApplier()).thenReturn(storeApplier);
  TransactionRepresentationCommitProcess commitProcess=new TransactionRepresentationCommitProcess(mock(TransactionAppender.class),storageEngine,indexUpdatesValidator);
  try (LockGroup lockGroup=new LockGroup()){
    commitProcess.commit(mock(TransactionRepresentation.class),lockGroup,CommitEvent.NULL,INTERNAL);
    fail("Should have thrown " + TransactionFailureException.class.getSimpleName());
  }
 catch (  TransactionFailureException e) {
    assertEquals(Status.Transaction.ValidationFailed,e.status());
  }
}
