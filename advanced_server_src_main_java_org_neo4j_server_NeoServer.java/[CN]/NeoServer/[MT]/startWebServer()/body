{
  int webServerPort=getWebServerPort();
  this.webServer=new Jetty6WebServer();
  this.webServer.setNeoServer(this);
  log.info("Starting Neo Server on port [%s]",webServerPort);
  webServer.setPort(webServerPort);
  log.info("Mounting webadmin at [%s]",Configurator.DEFAULT_WEB_ADMIN_STATIC_WEB_CONTENT_LOCATION);
  webServer.addStaticContent(Configurator.DEFAULT_WEB_ADMIN_STATIC_WEB_CONTENT_LOCATION,Configurator.DEFAULT_WEB_ADMIN_PATH);
  System.out.println(String.format("Neo4j server webadmin URI [%s]",webadminUri().toString()));
  webServer.addJAXRSPackages(listFrom(new String[]{Configurator.ROOT_DISCOVERY_REST_API_PACKAGE}),ROOT_PATH);
  log.info("Mounting management API at [%s]",managementApiUri().toString());
  webServer.addJAXRSPackages(listFrom(new String[]{Configurator.WEB_ADMIN_REST_API_PACKAGE}),managementApiUri().toString());
  System.out.println(String.format("Neo4j server management URI [%s]",managementApiUri().toString()));
  log.info("Mounting REST API at [%s]",restApiUri().toString());
  webServer.addJAXRSPackages(listFrom(new String[]{Configurator.REST_API_PACKAGE}),restApiUri().toString());
  System.out.println(String.format("Neo4j server data URI [%s]",restApiUri().toString()));
  for (  ThirdPartyJaxRsPackage tpp : configurator.getThirdpartyJaxRsClasses()) {
    log.info("Mounting third-party JAX-RS package [%s] at [%s]",tpp.getPackageName(),tpp.getMountPoint());
    webServer.addJAXRSPackages(listFrom(new String[]{tpp.getPackageName()}),tpp.getMountPoint());
  }
  try {
    webServer.start();
  }
 catch (  Exception e) {
    e.printStackTrace();
    log.error("Failed to start Neo Server on port [%d], reason [%s]",getWebServerPort(),e.getMessage());
  }
}
