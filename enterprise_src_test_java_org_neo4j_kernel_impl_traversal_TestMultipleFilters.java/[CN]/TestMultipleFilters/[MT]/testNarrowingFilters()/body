{
  Predicate<Path> mustBeConnectedToK=new MustBeConnectedToNodeFilter(getNodeWithName("k"));
  Predicate<Path> mustNotHaveMoreThanTwoOutRels=new Predicate<Path>(){
    public boolean accept(    Path item){
      return IteratorUtil.count(item.endNode().getRelationships(Direction.OUTGOING)) <= 2;
    }
  }
;
  TraversalDescription description=Traversal.description().filter(mustBeConnectedToK);
  expectNodes(description.traverse(referenceNode()),"b","c");
  expectNodes(description.filter(mustNotHaveMoreThanTwoOutRels).traverse(referenceNode()),"c");
}
