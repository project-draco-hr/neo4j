{
  this.fileName=fileName;
  this.xaRm=xaRm;
  this.commandReaderFactory=commandReaderFactory;
  this.commandWriterFactory=commandWriterFactory;
  this.xaTf=xaTf;
  this.fileSystem=fileSystem;
  this.interceptor=interceptor;
  this.bufferMonitor=monitors.newMonitor(ByteCounterMonitor.class,XaLogicalLog.class);
  this.logDeserializerMonitor=monitors.newMonitor(ByteCounterMonitor.class,"logdeserializer");
  this.pruneStrategy=pruneStrategy;
  this.stateFactory=stateFactory;
  this.rotateAtSize=rotateAtSize;
  this.autoRotate=rotateAtSize > 0;
  this.logFiles=new XaLogicalLogFiles(fileName,fileSystem);
  sharedBuffer=ByteBuffer.allocateDirect(9 + Xid.MAXGTRIDSIZE + Xid.MAXBQUALSIZE * 10);
  msgLog=logging.getMessagesLog(getClass());
  this.partialTransactionCopier=new PartialTransactionCopier(sharedBuffer,commandReaderFactory,commandWriterFactory,msgLog,positionCache,this,logEntryWriter,xidIdentMap);
  this.injectedTxValidator=injectedTxValidator;
  logWriterSPI=new SomethingOrOtherSPI();
  logEntryWriter.setCommandWriter(commandWriterFactory.newInstance());
}
