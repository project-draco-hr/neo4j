{
  kernelHealth.assertHealthy(IOException.class);
  if (nextTxId != (xaTf.getLastCommittedTx() + 1)) {
    throw new IllegalStateException("Tried to apply tx " + nextTxId + " but expected transaction "+ (xaTf.getCurrentVersion() + 1));
  }
  logRecoveryMessage("applyTxWithoutTxId log version: " + logVersion + ", committing tx="+ nextTxId+ ") @ pos "+ writeBuffer.getFileChannelPosition());
  scanIsComplete=false;
  logWriterSPI.bind(forceMode,nextTxId);
  translatingEntryConsumer.reset(getNextIdentifier(),masterHandler);
  boolean success=true;
  masterHandler.startLog();
  try (Cursor<LogEntry,IOException> cursor=reader.cursor(byteChannel)){
    while (cursor.next(translatingEntryConsumer))     ;
  }
 catch (  IOException e) {
    kernelHealth.panic(e);
    success=false;
    throw launderedException(IOException.class,"Failure applying transaction",e);
  }
 finally {
    masterHandler.endLog(success);
    scanIsComplete=true;
  }
  logRecoveryMessage("Applied external tx and generated tx id=" + nextTxId);
  checkLogRotation();
}
