{
  kernelHealth.assertHealthy(IOException.class);
  scanIsComplete=false;
  LogDeserializer logApplier=getLogDeserializer(byteChannel);
  int xidIdent=getNextIdentifier();
  long startEntryPosition=writeBuffer.getFileChannelPosition();
  boolean successfullyApplied=false;
  try {
    exhaust(logApplier,xidIdent);
    successfullyApplied=true;
  }
  finally {
    if (!successfullyApplied && logApplier.getStartEntry() != null && xidIdentMap.get(xidIdent) != null) {
      try {
        xaRm.forget(logApplier.getStartEntry().getXid());
      }
 catch (      XAException e) {
        throw new IOException(e);
      }
 finally {
        xidIdentMap.remove(xidIdent);
      }
    }
  }
  byteChannel.close();
  scanIsComplete=true;
  LogEntry.Start startEntry=logApplier.getStartEntry();
  if (startEntry == null) {
    throw new IOException("Unable to find start entry");
  }
  startEntry.setStartPosition(startEntryPosition);
  positionCache.cacheStartPosition(logApplier.getCommitEntry().getTxId(),startEntry,logVersion);
  checkLogRotation();
}
