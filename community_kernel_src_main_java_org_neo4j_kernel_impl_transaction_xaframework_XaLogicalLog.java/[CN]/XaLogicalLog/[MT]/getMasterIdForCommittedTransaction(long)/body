{
  if (txId == 1) {
    return MASTER_ID_REPRESENTING_NO_MASTER;
  }
  TxPosition cache=txStartPositionCache.get(txId);
  if (cache != null) {
    return cache.masterId;
  }
  LogExtractor extractor=getLogExtractor(txId,txId);
  try {
    if (extractor.extractNext(NullLogBuffer.INSTANCE) != -1) {
      return extractor.lastCommitEntry.getMasterId();
    }
    throw new RuntimeException("Unable to find commit entry for txId[" + txId + "]");
  }
  finally {
    extractor.close();
  }
}
