{
  if (txId == 1) {
    return Pair.of(MASTER_ID_REPRESENTING_NO_MASTER,0L);
  }
  TxPosition cache=txStartPositionCache.get(txId);
  if (cache != null) {
    return Pair.of(cache.masterId,cache.timeWritten);
  }
  LogExtractor extractor=getLogExtractor(txId,txId);
  try {
    if (extractor.extractNext(NullLogBuffer.INSTANCE) != -1) {
      return Pair.of(extractor.getLastStartEntry().getMasterId(),extractor.getLastTxChecksum());
    }
    throw new RuntimeException("Unable to find commit entry for txId[" + txId + "]");
  }
  finally {
    extractor.close();
  }
}
