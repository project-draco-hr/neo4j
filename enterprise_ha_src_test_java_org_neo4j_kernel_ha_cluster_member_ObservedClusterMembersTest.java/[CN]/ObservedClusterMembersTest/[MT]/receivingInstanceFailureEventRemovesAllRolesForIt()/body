{
  Cluster cluster=mock(Cluster.class);
  Heartbeat heartbeat=mock(Heartbeat.class);
  ClusterMemberEvents memberEvents=mock(ClusterMemberEvents.class);
  ObservedClusterMembers members=new ObservedClusterMembers(logging,cluster,heartbeat,memberEvents,clusterId1);
  ArgumentCaptor<ClusterListener> listener=ArgumentCaptor.forClass(ClusterListener.class);
  verify(cluster).addClusterListener(listener.capture());
  listener.getValue().enteredCluster(clusterConfiguration(clusterUri1,clusterUri2,clusterUri3));
  ArgumentCaptor<ClusterMemberListener> memberListener=ArgumentCaptor.forClass(ClusterMemberListener.class);
  verify(memberEvents).addClusterMemberListener(memberListener.capture());
  memberListener.getValue().memberIsAvailable(OnlineBackupKernelExtension.BACKUP,clusterId2,clusterUri2,StoreId.DEFAULT);
  memberListener.getValue().memberIsAvailable(MASTER,clusterId2,clusterUri2,StoreId.DEFAULT);
  memberListener.getValue().memberIsFailed(clusterId2);
  for (  ClusterMember clusterMember : members.getMembers()) {
    if (clusterMember.getInstanceId().equals(clusterId2)) {
      assertThat(count(clusterMember.getRoles()),equalTo(0L));
      break;
    }
  }
}
