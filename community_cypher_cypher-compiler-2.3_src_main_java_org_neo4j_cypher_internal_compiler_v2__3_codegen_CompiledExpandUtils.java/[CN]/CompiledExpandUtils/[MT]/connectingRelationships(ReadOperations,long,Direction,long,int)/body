{
  int fromDegree=calculateTotalDegree(readOperations,fromNode,direction,relTypes);
  if (fromDegree == 0) {
    return RelationshipIterator.EMPTY;
  }
  int toDegree=calculateTotalDegree(readOperations,toNode,direction.reverse(),relTypes);
  if (toDegree == 0) {
    return RelationshipIterator.EMPTY;
  }
  long startNode;
  long endNode;
  Direction relDirection;
  if (fromDegree < toDegree) {
    startNode=fromNode;
    endNode=toNode;
    relDirection=direction;
  }
 else {
    startNode=toNode;
    endNode=fromNode;
    relDirection=direction.reverse();
  }
  RelationshipIterator allRelationships=readOperations.nodeGetRelationships(startNode,relDirection,relTypes);
  return connectingRelationshipsIterator(allRelationships,startNode,endNode);
}
