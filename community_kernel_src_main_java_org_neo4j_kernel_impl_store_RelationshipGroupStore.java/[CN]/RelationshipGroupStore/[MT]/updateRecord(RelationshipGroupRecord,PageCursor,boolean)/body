{
  long id=record.getId();
  cursor.setOffset(offsetForId(id));
  if (record.inUse() || force) {
    long nextMod=record.getNext() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getNext() & 0x700000000L) >> 31;
    long nextOutMod=record.getFirstOut() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstOut() & 0x700000000L) >> 28;
    long nextInMod=record.getFirstIn() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstIn() & 0x700000000L) >> 31;
    long nextLoopMod=record.getFirstLoop() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (record.getFirstLoop() & 0x700000000L) >> 28;
    cursor.putByte((byte)(nextOutMod | nextMod | 1));
    cursor.putByte((byte)(nextLoopMod | nextInMod));
    cursor.putShort((short)record.getType());
    cursor.putInt((int)record.getNext());
    cursor.putInt((int)record.getFirstOut());
    cursor.putInt((int)record.getFirstIn());
    cursor.putInt((int)record.getFirstLoop());
    cursor.putInt((int)record.getOwningNode());
    cursor.putByte((byte)(record.getOwningNode() >> 32));
  }
 else {
    cursor.putByte(Record.NOT_IN_USE.byteValue());
    freeId(id);
  }
}
