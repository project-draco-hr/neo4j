{
  InputRelationship[] input=batch.input;
  long[] ids=batch.ids;
  for (int i=0; i < input.length; i++) {
    InputRelationship rel=input[i];
    long startNode=ids[i * 2];
    long endNode=ids[i * 2 + 1];
    ensureNodeFound("start",rel,startNode);
    ensureNodeFound("end",rel,endNode);
    try {
      nodeRelationshipLink.incrementCount(startNode);
    }
 catch (    ArrayIndexOutOfBoundsException e) {
      throw new RuntimeException("Input relationship " + rel + " refers to missing start node "+ rel.startNode(),e);
    }
    if (!rel.isLoop()) {
      try {
        nodeRelationshipLink.incrementCount(endNode);
      }
 catch (      ArrayIndexOutOfBoundsException e) {
        throw new RuntimeException("Input relationship " + rel + " refers to missing end node "+ rel.endNode(),e);
      }
    }
    highestSeenNodeId=max(highestSeenNodeId,max(startNode,endNode));
  }
  return null;
}
