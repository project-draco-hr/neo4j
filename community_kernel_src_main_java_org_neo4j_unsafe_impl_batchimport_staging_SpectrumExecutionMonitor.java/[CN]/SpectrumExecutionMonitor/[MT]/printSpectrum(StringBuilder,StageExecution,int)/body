{
  long[] values=values(execution);
  long total=total(values);
  if (total == 0) {
    return false;
  }
  width-=values.length + 1 + 4;
  QuantizedProjection projection=new QuantizedProjection(total,width);
  long lastDoneBatches=0;
  int stepIndex=0;
  for (  StepStats step : execution.stats()) {
    if (!projection.next(avg(step))) {
      throw new IllegalStateException();
    }
    long stepWidth=projection.step();
    String name=step.toString(DetailLevel.IMPORTANT);
    builder.append(stepIndex++ == 0 ? '[' : '|');
    int charIndex=0;
    char backgroundChar='-';
    for (int i=0; i < stepWidth; i++, charIndex++) {
      char ch=backgroundChar;
      if (charIndex >= 0 && charIndex < name.length() && charIndex < stepWidth) {
        ch=name.charAt(charIndex);
      }
      builder.append(ch);
    }
    lastDoneBatches=step.stat(Keys.done_batches).asLong();
  }
  long progress=lastDoneBatches * execution.getConfig().batchSize();
  builder.append("]").append(fitInFour(progress));
  return true;
}
