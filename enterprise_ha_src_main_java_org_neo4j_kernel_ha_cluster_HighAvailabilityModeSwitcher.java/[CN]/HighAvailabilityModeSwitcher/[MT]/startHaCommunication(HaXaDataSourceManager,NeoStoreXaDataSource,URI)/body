{
  try {
    MasterClient master=newMasterClient(masterUri,nioneoDataSource.getStoreId(),haCommunicationLife);
    Slave slaveImpl=new SlaveImpl(nioneoDataSource.getStoreId(),master,new RequestContextFactory(getServerId(masterUri),xaDataSourceManager,graphDb.getDependencyResolver()),xaDataSourceManager);
    SlaveServer server=new SlaveServer(slaveImpl,serverConfig(),logging,graphDb.getDependencyResolver().resolveDependency(Monitors.class));
    assignMaster(master);
    haCommunicationLife.add(slaveImpl);
    haCommunicationLife.add(server);
    haCommunicationLife.start();
    slaveHaURI=createHaURI(server);
    clusterMemberAvailability.memberIsAvailable(SLAVE,slaveHaURI);
    return true;
  }
 catch (  Throwable t) {
    msgLog.logMessage("Got exception while starting HA communication",t);
    haCommunicationLife.shutdown();
    haCommunicationLife=new LifeSupport();
  }
  return false;
}
