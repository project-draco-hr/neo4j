{
  availableMasterId=event.getServerHaUri();
  if (event.getNewState() == event.getOldState()) {
    if (event.getNewState() == HighAvailabilityMemberState.MASTER) {
      clusterMemberAvailability.memberIsAvailable(MASTER,masterHaURI);
    }
 else     if (event.getNewState() == HighAvailabilityMemberState.SLAVE) {
      clusterMemberAvailability.memberIsAvailable(SLAVE,slaveHaURI);
    }
    return;
  }
switch (event.getNewState()) {
case TO_MASTER:
    life.shutdown();
  life=new LifeSupport();
if (event.getOldState().equals(HighAvailabilityMemberState.SLAVE)) {
  clusterMemberAvailability.memberIsUnavailable(SLAVE);
}
switchToMaster();
break;
case TO_SLAVE:
life.shutdown();
switchToSlave();
break;
case PENDING:
if (event.getOldState().equals(HighAvailabilityMemberState.SLAVE)) {
clusterMemberAvailability.memberIsUnavailable(SLAVE);
}
 else if (event.getOldState().equals(HighAvailabilityMemberState.MASTER)) {
clusterMemberAvailability.memberIsUnavailable(MASTER);
}
life.shutdown();
life=new LifeSupport();
break;
default :
}
}
