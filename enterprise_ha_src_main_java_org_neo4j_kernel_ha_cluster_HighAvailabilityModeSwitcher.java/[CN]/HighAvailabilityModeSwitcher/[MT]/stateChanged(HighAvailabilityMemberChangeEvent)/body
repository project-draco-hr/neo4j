{
  availableMasterId=event.getServerHaUri();
  if (event.getNewState() == event.getOldState()) {
    return;
  }
  currentTargetState=event.getNewState();
switch (event.getNewState()) {
case TO_MASTER:
    if (event.getOldState().equals(HighAvailabilityMemberState.SLAVE)) {
      clusterMemberAvailability.memberIsUnavailable(SLAVE);
    }
  switchToMaster();
break;
case TO_SLAVE:
switchToSlave();
break;
case PENDING:
if (event.getOldState().equals(HighAvailabilityMemberState.SLAVE)) {
clusterMemberAvailability.memberIsUnavailable(SLAVE);
}
 else if (event.getOldState().equals(HighAvailabilityMemberState.MASTER)) {
clusterMemberAvailability.memberIsUnavailable(MASTER);
}
switchToPending();
break;
default :
}
}
