{
  List<Class> services=new ArrayList<Class>(Arrays.asList(SERVICES_TO_RESTART_FOR_STORE_COPY));
  Collections.reverse(services);
  for (  Class<Lifecycle> serviceClass : services) {
    console.log("ServerId " + config.get(ClusterSettings.server_id) + ", STOPPING: "+ serviceClass);
    graphDb.getDependencyResolver().resolveDependency(serviceClass).stop();
    console.log("ServerId " + config.get(ClusterSettings.server_id) + ", STOPPED: "+ serviceClass);
  }
  console.log("ServerId " + config.get(ClusterSettings.server_id) + ", handling branching");
  branchPolicy.handle(config.get(InternalAbstractGraphDatabase.Configuration.store_dir));
}
