{
  JobScheduler.JobHandle reaperJobHandle=mock(JobScheduler.JobHandle.class);
  when(config.get(HaSettings.lock_read_timeout)).thenReturn(1L);
  when(conversationSPI.scheduleRecurringJob(any(JobScheduler.Group.class),any(Long.class),any(Runnable.class))).thenReturn(reaperJobHandle);
  RequestContext requestContext=getRequestContext();
  conversationManager=getConversationManager();
  TimedRepository conversationStorage=mock(TimedRepository.class);
  conversationManager.conversations=conversationStorage;
  conversationManager.begin(requestContext);
  conversationManager.acquire(requestContext);
  conversationManager.release(requestContext);
  conversationManager.end(requestContext);
  InOrder conversationOrder=inOrder(conversationStorage);
  conversationOrder.verify(conversationStorage).begin(requestContext);
  conversationOrder.verify(conversationStorage).acquire(requestContext);
  conversationOrder.verify(conversationStorage).release(requestContext);
  conversationOrder.verify(conversationStorage).end(requestContext);
}
