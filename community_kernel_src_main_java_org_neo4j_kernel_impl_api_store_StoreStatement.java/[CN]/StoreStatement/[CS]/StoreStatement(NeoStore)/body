{
  this.neoStore=neoStore;
  singleNodeCursor=new InstanceCache<StoreSingleNodeCursor>(){
    @Override protected StoreSingleNodeCursor create(){
      return new StoreSingleNodeCursor(new NodeRecord(-1),StoreStatement.this.neoStore.getNodeStore(),StoreStatement.this,this);
    }
  }
;
  iteratorNodeCursor=new InstanceCache<StoreIteratorNodeCursor>(){
    @Override protected StoreIteratorNodeCursor create(){
      return new StoreIteratorNodeCursor(new NodeRecord(-1),StoreStatement.this.neoStore.getNodeStore(),StoreStatement.this,this);
    }
  }
;
  singlePropertyCursor=new InstanceCache<StoreSinglePropertyCursor>(){
    @Override protected StoreSinglePropertyCursor create(){
      return new StoreSinglePropertyCursor(StoreStatement.this.neoStore.getPropertyStore(),this);
    }
  }
;
  allPropertyCursor=new InstanceCache<StorePropertyCursor>(){
    @Override protected StorePropertyCursor create(){
      return new StorePropertyCursor(StoreStatement.this.neoStore.getPropertyStore(),this);
    }
  }
;
  labelCursor=new InstanceCache<StoreLabelCursor>(){
    @Override protected StoreLabelCursor create(){
      return new StoreLabelCursor(this);
    }
  }
;
  singleLabelCursor=new InstanceCache<StoreSingleLabelCursor>(){
    @Override protected StoreSingleLabelCursor create(){
      return new StoreSingleLabelCursor(this);
    }
  }
;
  singleRelationshipCursor=new InstanceCache<StoreSingleRelationshipCursor>(){
    @Override protected StoreSingleRelationshipCursor create(){
      return new StoreSingleRelationshipCursor(new RelationshipRecord(-1),StoreStatement.this.neoStore.getRelationshipStore(),StoreStatement.this,this);
    }
  }
;
  nodeRelationshipCursor=new InstanceCache<StoreNodeRelationshipCursor>(){
    @Override protected StoreNodeRelationshipCursor create(){
      return new StoreNodeRelationshipCursor(new RelationshipRecord(-1),StoreStatement.this.neoStore.getRelationshipStore(),new RelationshipGroupRecord(-1,-1),StoreStatement.this.neoStore.getRelationshipGroupStore(),StoreStatement.this,this);
    }
  }
;
  iteratorRelationshipCursor=new InstanceCache<StoreIteratorRelationshipCursor>(){
    @Override protected StoreIteratorRelationshipCursor create(){
      return new StoreIteratorRelationshipCursor(new RelationshipRecord(-1),StoreStatement.this.neoStore.getRelationshipStore(),StoreStatement.this,this);
    }
  }
;
}
