{
  Thread thread=Thread.currentThread();
synchronized (channels) {
    Channel channel=channels.get(thread);
    if (channel == null) {
      while (channel == null) {
        Channel unusedChannel=unusedChannels.poll();
        if (unusedChannel == null) {
          break;
        }
 else         if (unusedChannel.isConnected()) {
          msgLog.logMessage("Found unused (and still connected) channel");
          channel=unusedChannel;
        }
 else {
          msgLog.logMessage("Found unused stale channel, discarding it");
        }
      }
      if (channel == null) {
        for (int i=0; i < 5; i++) {
          ChannelFuture channelFuture=bootstrap.connect(new InetSocketAddress(hostNameOrIp,port));
          channelFuture.awaitUninterruptibly();
          if (channelFuture.isSuccess()) {
            channel=channelFuture.getChannel();
            msgLog.logMessage("Opened a new channel to " + hostNameOrIp + ":"+ port);
            break;
          }
 else {
            msgLog.logMessage("Retrying connect to " + hostNameOrIp + ":"+ port);
            try {
              Thread.sleep(500);
            }
 catch (            InterruptedException e) {
              Thread.interrupted();
            }
          }
        }
      }
      if (channel == null) {
        throw new IOException("Not able to connect to master");
      }
      channels.put(thread,channel);
    }
    return channel;
  }
}
