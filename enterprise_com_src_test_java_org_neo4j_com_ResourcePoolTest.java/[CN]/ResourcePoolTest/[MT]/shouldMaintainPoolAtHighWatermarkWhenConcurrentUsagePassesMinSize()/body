{
  final int MIN_SIZE=50;
  final int MAX_SIZE=200;
  final int MID_SIZE=90;
  StatefulMonitor stateMonitor=new StatefulMonitor();
  FakeClock clock=new FakeClock();
  final ResourcePool<Something> pool=getResourcePool(stateMonitor,clock,MIN_SIZE);
  List<ResourceHolder> holders=new LinkedList<ResourceHolder>();
  buildAPeakOfAcquiredResourcesAndTriggerAlarmWithSideEffects(MAX_SIZE,clock,pool,holders);
  clock.forward(110,TimeUnit.MILLISECONDS);
  for (int i=0; i < 10; i++) {
    CountDownLatch release=new CountDownLatch(MID_SIZE);
    for (    ResourceHolder holder : acquireFromPool(pool,MID_SIZE)) {
      holder.release(release);
    }
    release.await();
    clock.forward(110,TimeUnit.MILLISECONDS);
  }
  assertEquals(MID_SIZE,stateMonitor.currentPeakSize.get());
  assertEquals(MID_SIZE,stateMonitor.targetSize.get());
  assertEquals(MAX_SIZE - MID_SIZE + 1,stateMonitor.disposed.get());
}
