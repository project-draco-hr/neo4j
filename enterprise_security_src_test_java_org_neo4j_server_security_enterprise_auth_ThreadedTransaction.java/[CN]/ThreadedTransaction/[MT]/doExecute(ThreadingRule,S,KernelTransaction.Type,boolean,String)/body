{
  NamedFunction<S,Throwable> startTransaction=new NamedFunction<S,Throwable>("threaded-transaction-" + queries.hashCode()){
    @Override public Throwable apply(    S subject){
      try {
        try (InternalTransaction tx=neo.beginLocalTransactionAsUser(subject,txType)){
          Result result=null;
          try {
            if (startEarly) {
              latch.start();
            }
            for (            String query : queries) {
              if (result != null) {
                result.close();
              }
              result=neo.getLocalGraph().execute(query);
            }
            if (!startEarly) {
              latch.startAndWaitForAllToStart();
            }
          }
 catch (          Throwable t) {
            latch.finish();
            return t;
          }
          latch.finishAndWaitForAllToFinish();
          result.close();
          tx.success();
          return null;
        }
       }
 catch (      Throwable t) {
        return t;
      }
    }
  }
;
  done=threading.execute(startTransaction,subject);
  return queries;
}
