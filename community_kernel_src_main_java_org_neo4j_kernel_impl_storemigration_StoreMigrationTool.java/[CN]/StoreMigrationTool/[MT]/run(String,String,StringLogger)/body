{
  LegacyStore legacyStore=new LegacyStore(new DefaultFileSystemAbstraction(),new File(new File(legacyStoreDirectory),NeoStore.DEFAULT_NAME),log);
  Map<String,String> config=new HashMap<String,String>();
  File targetStoreDirectoryFile=new File(targetStoreDirectory);
  if (targetStoreDirectoryFile.exists()) {
    throw new IllegalStateException("Cannot migrate to a directory that already exists, " + "please delete first and re-run");
  }
  boolean success=targetStoreDirectoryFile.mkdirs();
  if (!success) {
    throw new IllegalStateException("Failed to create directory");
  }
  File targetStoreFile=new File(targetStoreDirectory,NeoStore.DEFAULT_NAME);
  config.put("neo_store",targetStoreFile.getPath());
  FileSystemAbstraction fileSystem=new DefaultFileSystemAbstraction();
  NeoStore neoStore=new StoreFactory(new Config(config,GraphDatabaseSettings.class),new DefaultIdGeneratorFactory(),new DefaultWindowPoolFactory(),fileSystem,log,null).createNeoStore(targetStoreFile);
  long startTime=System.currentTimeMillis();
  new StoreMigrator(new VisibleMigrationProgressMonitor(log,System.out)).migrate(legacyStore,neoStore);
  long duration=System.currentTimeMillis() - startTime;
  System.out.printf("Migration completed in %d s%n",duration / 1000);
  neoStore.close();
  GraphDatabaseService database=new GraphDatabaseFactory().newEmbeddedDatabase(targetStoreDirectoryFile.getPath());
  database.shutdown();
}
