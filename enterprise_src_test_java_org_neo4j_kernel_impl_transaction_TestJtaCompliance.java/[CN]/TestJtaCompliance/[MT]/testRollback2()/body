{
  tm.begin();
  FakeXAResource res1=new FakeXAResource("XAResource1");
  FakeXAResource res2=new FakeXAResource("XAResource1");
  tm.getTransaction().enlistResource(res1);
  MethodCall calls1[]=res1.getAndRemoveMethodCalls();
  assertEquals(1,calls1.length);
  assertEquals("start",calls1[0].getMethodName());
  tm.getTransaction().enlistResource(res2);
  MethodCall calls2[]=res2.getAndRemoveMethodCalls();
  assertEquals(1,calls2.length);
  assertEquals("start",calls2[0].getMethodName());
  Object args[]=calls1[0].getArgs();
  Xid xid1=(Xid)args[0];
  assertEquals(XAResource.TMNOFLAGS,((Integer)args[1]).intValue());
  args=calls2[0].getArgs();
  Xid xid2=(Xid)args[0];
  assertEquals(XAResource.TMJOIN,((Integer)args[1]).intValue());
  assertTrue(xid1.equals(xid2));
  assertTrue(xid2.equals(xid1));
  tm.getTransaction().delistResource(res2,XAResource.TMSUCCESS);
  calls2=res2.getAndRemoveMethodCalls();
  assertEquals(1,calls2.length);
  tm.getTransaction().delistResource(res1,XAResource.TMSUCCESS);
  calls1=res1.getAndRemoveMethodCalls();
  assertEquals(1,calls1.length);
  assertEquals("end",calls1[0].getMethodName());
  args=calls1[0].getArgs();
  assertTrue(((Xid)args[0]).equals(xid1));
  assertEquals(XAResource.TMSUCCESS,((Integer)args[1]).intValue());
  assertEquals(1,calls2.length);
  assertEquals("end",calls2[0].getMethodName());
  args=calls2[0].getArgs();
  assertTrue(((Xid)args[0]).equals(xid2));
  assertEquals(XAResource.TMSUCCESS,((Integer)args[1]).intValue());
  tm.rollback();
  calls1=res1.getAndRemoveMethodCalls();
  calls2=res2.getAndRemoveMethodCalls();
  assertEquals(1,calls1.length);
  assertEquals("rollback",calls1[0].getMethodName());
  args=calls1[0].getArgs();
  assertTrue(((Xid)args[0]).equals(xid1));
  assertEquals(0,calls2.length);
}
