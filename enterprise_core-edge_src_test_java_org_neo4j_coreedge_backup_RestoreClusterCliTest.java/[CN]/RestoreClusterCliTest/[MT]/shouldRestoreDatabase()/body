{
  File classicDatabaseDir=testDirectory.cleanDirectory("classic-db");
  File classicNeo4jStore=RestoreClusterUtils.createClassicNeo4jStore(classicDatabaseDir,10,StandardV3_0.NAME);
  StoreMetadata storeMetadata=metadataFor(classicNeo4jStore);
  Path homeDir=Paths.get(testDirectory.cleanDirectory("new-db-1").getPath());
  String[] args=toArray(ArgsBuilder.args().from(classicNeo4jStore).database("graph.db").build());
  ByteArrayOutputStream output=new ByteArrayOutputStream();
  PrintStream sysOut=new PrintStream(output);
  new RestoreNewClusterCli(homeDir,homeDir,sysOut).execute(args);
  String seed=extractSeed(output.toString());
  ClusterSeed clusterSeed=ClusterSeed.create(seed);
  assertTrue(storeMetadata.storeId().equals(clusterSeed.before()));
  assertEquals(storeMetadata.lastTxId(),clusterSeed.lastTxId());
  assertFalse(storeMetadata.storeId().equals(clusterSeed.after()));
  Path rootNewDatabaseDir=Paths.get(testDirectory.cleanDirectory("new-db-2").getPath());
  String[] newArgs=toArray(ArgsBuilder.args().from(classicNeo4jStore).database("graph.db").seed(seed).build());
  new RestoreExistingClusterCli(rootNewDatabaseDir,rootNewDatabaseDir).execute(newArgs);
  StoreMetadata newMetadata=metadataFor(extractDatabaseDir(rootNewDatabaseDir.toFile()));
  assertTrue(clusterSeed.after().equals(newMetadata.storeId()));
}
