{
  long txId=3;
  String failureMessage="Forces a failure";
  WritableLogChannel channel=spy(new InMemoryLogChannel());
  IOException failure=new IOException(failureMessage);
  when(channel.putInt(anyInt())).thenThrow(failure);
  when(logFile.getWriter()).thenReturn(channel);
  when(transactionIdStore.nextCommittingTransactionId()).thenReturn(txId);
  Mockito.reset(databaseHealth);
  TransactionAppender appender=life.add(new BatchingTransactionAppender(logFile,NO_ROTATION,positionCache,transactionIdStore,BYPASS,databaseHealth));
  TransactionRepresentation transaction=mock(TransactionRepresentation.class);
  when(transaction.additionalHeader()).thenReturn(new byte[0]);
  try {
    appender.append(new TransactionToApply(transaction),logAppendEvent);
    fail("Expected append to fail. Something is wrong with the test itself");
  }
 catch (  IOException e) {
    assertSame(failure,e);
    verify(transactionIdStore,times(1)).nextCommittingTransactionId();
    verify(transactionIdStore,times(0)).transactionClosed(eq(txId),anyLong(),anyLong());
    verify(databaseHealth).panic(failure);
  }
}
