{
  long txId=3;
  String failureMessage="Forces a failure";
  WritableLogChannel channel=new InMemoryLogChannel();
  when(logFile.getWriter()).thenReturn(channel);
  when(transactionIdStore.nextCommittingTransactionId()).thenReturn(txId);
  IdOrderingQueue idOrderingQueue=mock(IdOrderingQueue.class);
  doThrow(new RuntimeException(failureMessage)).when(idOrderingQueue).waitFor(anyLong());
  TransactionAppender appender=life.add(new BatchingTransactionAppender(logFile,NO_ROTATION,positionCache,transactionIdStore,idOrderingQueue,kernelHealth));
  life.start();
  TransactionRepresentation transaction=transactionWithLegacyIndexCommand();
  try {
    appender.append(transaction,logAppendEvent);
    fail("Expected append to fail. Something is wrong with the test itself");
  }
 catch (  Exception e) {
    assertTrue(contains(e,failureMessage,RuntimeException.class));
    verify(transactionIdStore,times(1)).nextCommittingTransactionId();
    verify(transactionIdStore,times(1)).transactionCommitted(eq(txId),anyLong(),eq(BASE_TX_COMMIT_TIMESTAMP));
    verify(transactionIdStore,times(1)).transactionClosed(eq(txId),anyLong(),anyLong());
    verifyNoMoreInteractions(transactionIdStore);
  }
}
