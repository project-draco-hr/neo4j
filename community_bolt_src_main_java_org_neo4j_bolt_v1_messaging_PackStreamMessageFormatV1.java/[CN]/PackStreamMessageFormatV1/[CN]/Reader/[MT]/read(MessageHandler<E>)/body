{
  try {
    unpacker.unpackStructHeader();
    int type=(int)unpacker.unpackLong();
    try {
switch (type) {
case MessageTypes.MSG_RUN:
        unpackRunMessage(output);
      break;
case MessageTypes.MSG_DISCARD_ALL:
    unpackDiscardAllMessage(output);
  break;
case MessageTypes.MSG_PULL_ALL:
unpackPullAllMessage(output);
break;
case MessageTypes.MSG_RECORD:
unpackRecordMessage(output);
break;
case MessageTypes.MSG_SUCCESS:
unpackSuccessMessage(output);
break;
case MessageTypes.MSG_FAILURE:
unpackFailureMessage(output);
break;
case MessageTypes.MSG_ACK_FAILURE:
unpackAckFailureMessage(output);
break;
case MessageTypes.MSG_IGNORED:
unpackIgnoredMessage(output);
break;
case MessageTypes.MSG_INIT:
unpackInitMessage(output);
break;
case MessageTypes.MSG_RESET:
unpackResetMessage(output);
break;
default :
throw new BoltIOException(Status.Request.Invalid,"0x" + Integer.toHexString(type) + " is not a valid message type.");
}
}
 catch (PackStream.PackStreamException e) {
throw new BoltIOException(Status.Request.InvalidFormat,"Unable to read " + messageTypeName(type) + " message. "+ "Error was: "+ e.getMessage(),e);
}
}
 catch (PackStream.PackStreamException e) {
throw new BoltIOException(Status.Request.InvalidFormat,"Unable to read message type. " + "Error was: " + e.getMessage(),e);
}
}
