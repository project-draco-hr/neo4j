{
  return new InputStream(){
    @Override public int read(    byte[] b) throws IOException {
      readBytes(b);
      return b.length;
    }
    @Override public int read(    byte[] b,    int off,    int len) throws IOException {
      readBytes(b,off,len);
      return len;
    }
    @Override public long skip(    long n) throws IOException {
      skipBytes((int)n);
      return n;
    }
    @Override public int available() throws IOException {
      return super.available();
    }
    @Override public void close() throws IOException {
    }
    @Override public synchronized void mark(    int readlimit){
      throw new UnsupportedOperationException();
    }
    @Override public synchronized void reset() throws IOException {
      throw new UnsupportedOperationException();
    }
    @Override public boolean markSupported(){
      return false;
    }
    @Override public int read() throws IOException {
      return readByte();
    }
  }
;
}
