{
  if (DuplicateInputIdException.class.equals(e.getClass())) {
    printErrorMessage("Duplicate input ids that would otherwise clash can be put into separate id space, " + "read more about how to use id spaces in the manual:" + manualReference(ManualPage.IMPORT_TOOL_FORMAT,Anchor.ID_SPACES),e,stackTrace);
  }
 else   if (MissingRelationshipDataException.class.equals(e.getClass())) {
    printErrorMessage("Relationship missing mandatory field '" + ((MissingRelationshipDataException)e).getFieldType() + "', read more about "+ "relationship format in the manual: "+ manualReference(ManualPage.IMPORT_TOOL_FORMAT,Anchor.RELATIONSHIP),e,stackTrace);
  }
 else   if (Exceptions.contains(e,IllegalMultilineFieldException.class)) {
    printErrorMessage("Detected field which spanned multiple lines for an import where " + Options.MULTILINE_FIELDS.argument() + "=false. If you know that your input data "+ "include fields containing new-line characters then import with this option set to "+ "true.",e,stackTrace);
  }
 else   if (Exceptions.contains(e,InputException.class)) {
    printErrorMessage("Error in input data",e,stackTrace);
  }
 else {
    printErrorMessage(typeOfError + ": " + e.getMessage(),e,true);
  }
  System.err.println();
  Thread.currentThread().setUncaughtExceptionHandler(new UncaughtExceptionHandler(){
    @Override public void uncaughtException(    Thread t,    Throwable e){
    }
  }
);
  return launderedException(e);
}
