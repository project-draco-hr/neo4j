{
  final Iterable<Node> iterableStartNodes=Arrays.asList(startNodes);
  return new DefaultTraverser(new Factory<TraverserIterator>(){
    @Override public TraverserIterator newInstance(){
      Resource statement=statementFactory.newInstance();
      MonoDirectionalTraverserIterator iterator=new MonoDirectionalTraverserIterator(statement,uniqueness.create(uniquenessParameter),expander,branchOrdering,evaluator,iterableStartNodes,initialState);
      return sorting != null ? new SortingTraverserIterator(statement,sorting,iterator) : iterator;
    }
  }
);
}
