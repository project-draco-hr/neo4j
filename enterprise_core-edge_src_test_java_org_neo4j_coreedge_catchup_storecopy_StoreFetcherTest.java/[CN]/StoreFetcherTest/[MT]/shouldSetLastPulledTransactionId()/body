{
  long lastFlushedTxId=12;
  StoreId wantedStoreId=new StoreId(1,2,3,4);
  MemberId localhost=new MemberId(UUID.randomUUID());
  StoreCopyClient storeCopyClient=mock(StoreCopyClient.class);
  when(storeCopyClient.copyStoreFiles(eq(localhost),eq(wantedStoreId),any(StoreFileStreams.class))).thenReturn(lastFlushedTxId);
  TxPullClient txPullClient=mock(TxPullClient.class);
  when(txPullClient.pullTransactions(eq(localhost),eq(wantedStoreId),anyLong(),any(TxPullResponseListener.class))).thenReturn(SUCCESS);
  TransactionLogCatchUpWriter writer=mock(TransactionLogCatchUpWriter.class);
  StoreFetcher fetcher=new StoreFetcher(NullLogProvider.getInstance(),mock(FileSystemAbstraction.class),null,storeCopyClient,txPullClient,factory(writer));
  fetcher.copyStore(localhost,wantedStoreId,new File("destination"));
  verify(txPullClient).pullTransactions(eq(localhost),eq(wantedStoreId),eq(lastFlushedTxId),any(TxPullResponseListener.class));
}
