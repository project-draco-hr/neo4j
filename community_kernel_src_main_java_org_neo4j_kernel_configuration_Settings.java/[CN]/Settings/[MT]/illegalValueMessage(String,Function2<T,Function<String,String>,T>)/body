{
  return new Function2<T,Function<String,String>,T>(){
    @Override public T apply(    T from1,    Function<String,String> from2){
      try {
        return valueFunction.apply(from1,from2);
      }
 catch (      IllegalArgumentException e) {
        throw new IllegalArgumentException(message);
      }
    }
    @Override public String toString(){
      String description=message;
      if (valueFunction != null && !String.format(MATCHES_PATTERN_MESSAGE,ANY).equals(valueFunction.toString())) {
        description+=" (" + valueFunction.toString() + ")";
      }
      return description;
    }
  }
;
}
