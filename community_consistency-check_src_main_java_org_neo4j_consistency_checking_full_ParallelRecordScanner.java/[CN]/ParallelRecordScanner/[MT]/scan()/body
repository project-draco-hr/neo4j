{
  long recordsPerCPU=(store.maxCount() / numberOfThreads) + 1;
  cacheAccess.prepareForProcessingOfSingleStore(recordsPerCPU);
  Function<BlockingQueue<RECORD>,Worker<RECORD>> workerFactory=new Function<BlockingQueue<RECORD>,Worker<RECORD>>(){
    @Override public Worker<RECORD> apply(    BlockingQueue<RECORD> source){
      return new Worker<>(source,processor);
    }
  }
;
  distributeRecords(numberOfThreads,getClass().getSimpleName() + "-" + name,DEFAULT_QUEUE_SIZE,workerFactory,store,progress);
}
