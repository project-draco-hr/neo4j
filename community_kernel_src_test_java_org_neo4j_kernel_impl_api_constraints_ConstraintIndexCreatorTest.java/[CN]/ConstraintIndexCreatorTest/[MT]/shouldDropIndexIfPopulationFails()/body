{
  StatementContext constraintCreationContext=mock(StatementContext.class);
  StatementContext indexCreationContext=mock(StatementContext.class);
  StatementContext indexDestructionContext=mock(StatementContext.class);
  IndexDescriptor descriptor=new IndexDescriptor(123,456);
  when(indexCreationContext.addConstraintIndex(123,456)).thenReturn(descriptor);
  IndexingService indexingService=mock(IndexingService.class);
  StubTransactor transactor=new StubTransactor(indexCreationContext,indexDestructionContext);
  when(constraintCreationContext.getCommittedIndexId(descriptor)).thenReturn(2468l);
  IndexProxy indexProxy=mock(IndexProxy.class);
  when(indexingService.getProxyForRule(2468l)).thenReturn(indexProxy);
  doThrow(new IndexPopulationFailedKernelException(descriptor,null)).when(indexProxy).awaitPopulationCompleted();
  ConstraintIndexCreator creator=new ConstraintIndexCreator(transactor,indexingService);
  try {
    creator.createUniquenessConstraintIndex(constraintCreationContext,123,456);
    fail("expected exception");
  }
 catch (  IndexPopulationFailedKernelException e) {
    assertEquals("Failed to populate index for labelId 123 on propertyKeyId 456",e.getMessage());
  }
  verify(indexCreationContext).addConstraintIndex(123,456);
  verifyNoMoreInteractions(indexCreationContext);
  verify(constraintCreationContext).getCommittedIndexId(descriptor);
  verifyNoMoreInteractions(constraintCreationContext);
  verify(indexDestructionContext).dropConstraintIndex(descriptor);
  verifyNoMoreInteractions(indexDestructionContext);
}
