{
  MEMBER leader;
  try {
    leader=leaderLocator.getLeader();
  }
 catch (  NoLeaderTimeoutException e) {
    throw new AcquireLockTimeoutException(e,"Could not acquire lock session.");
  }
  if (!leader.equals(myself)) {
    throw new AcquireLockTimeoutException("Should only attempt to take lock as leader.");
  }
  try {
    replicator.replicate(new ReplicatedLockRequest<>(myself,replicatedLockStateMachine.nextId()));
  }
 catch (  Replicator.ReplicationFailedException e) {
    throw new AcquireLockTimeoutException(e,"Could not acquire lock session.");
  }
synchronized (replicatedLockStateMachine) {
    if (!replicatedLockStateMachine.currentLockSession().isMine()) {
      replicatedLockStateMachine.wait(LOCK_WAIT_TIME);
    }
  }
}
