{
  long specificId=channel.get() == SPECIFIC_ID ? channel.getLong() : -1;
  Group startNodeGroup=readGroup(0);
  Group endNodeGroup=readGroup(1);
  Object startNodeId=readValue();
  Object endNodeId=readValue();
  byte typeMode=channel.get();
  Object type;
switch (typeMode) {
case SAME_TYPE:
    type=previousType;
  break;
case NEW_TYPE:
type=previousType=(String)readToken(RELATIONSHIP_TYPE_TOKEN);
break;
case HAS_TYPE_ID:
type=channel.getInt();
break;
default :
throw new IllegalArgumentException("Unrecognized type mode " + typeMode);
}
InputRelationship relationship=new InputRelationship(sourceDescription(),lineNumber(),position(),properties.getClass().isArray() ? (Object[])properties : NO_PROPERTIES,properties.getClass().isArray() ? null : (Long)properties,startNodeGroup,startNodeId,endNodeGroup,endNodeId,type instanceof String ? (String)type : null,type instanceof String ? null : (Integer)type);
return specificId != -1 ? relationship.setSpecificId(specificId) : relationship;
}
