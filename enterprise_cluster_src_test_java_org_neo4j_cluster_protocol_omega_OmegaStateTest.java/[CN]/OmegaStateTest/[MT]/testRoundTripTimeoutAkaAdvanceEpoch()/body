{
  OmegaContext context=Mockito.mock(OmegaContext.class);
  Message<OmegaMessage> message=Message.internal(OmegaMessage.round_trip_timeout);
  MessageProcessor outgoing=Mockito.mock(MessageProcessor.class);
  State state=new State(new EpochNumber());
  Mockito.when(context.getMyState()).thenReturn(state);
  View myView=new View(state);
  Mockito.when(context.getMyView()).thenReturn(myView);
  OmegaState result=(OmegaState)OmegaState.omega.handle(context,message,outgoing);
  assertEquals(OmegaState.omega,result);
  Mockito.verify(context).getMyState();
  Mockito.verify(context).getMyView();
  Mockito.verify(context,Mockito.never()).roundDone(Matchers.anyInt());
  assertTrue(myView.isExpired());
  assertEquals(1,state.getEpochNum().getSerialNum());
  assertEquals(0,state.getFreshness());
}
