{
  OmegaContext context=Mockito.mock(OmegaContext.class);
  Message<OmegaMessage> message=Mockito.mock(Message.class);
  MessageHolder outgoing=Mockito.mock(MessageHolder.class);
  Map<URI,State> dummyState=new HashMap<URI,State>();
  Mockito.when(context.getRegistry()).thenReturn(dummyState);
  Mockito.when(message.getHeader(Message.FROM)).thenReturn(fromString);
  Mockito.when(message.getPayload()).thenReturn(new CollectPayload(1));
  Mockito.when(message.getMessageType()).thenReturn(OmegaMessage.collect);
  OmegaState.omega.handle(context,message,outgoing);
  Mockito.verify(context).getRegistry();
  Mockito.verify(outgoing).process(Matchers.argThat(new MessageArgumentMatcher<OmegaMessage>().to(new URI(fromString)).onMessageType(OmegaMessage.status).withPayload(new CollectResponsePayload(new URI[]{},new RefreshPayload[]{},1))));
}
