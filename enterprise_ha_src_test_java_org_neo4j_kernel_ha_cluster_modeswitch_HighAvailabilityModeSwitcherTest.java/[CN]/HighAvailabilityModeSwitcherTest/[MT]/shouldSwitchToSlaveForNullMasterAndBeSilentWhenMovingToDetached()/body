{
  SwitchToSlave sts=mock(SwitchToSlave.class);
  SwitchToMaster stm=mock(SwitchToMaster.class);
  Election election=mock(Election.class);
  ClusterMemberAvailability cma=mock(ClusterMemberAvailability.class);
  InstanceId instanceId=new InstanceId(14);
  ComponentSwitcher componentSwitcher=mock(ComponentSwitcher.class);
  HighAvailabilityModeSwitcher theSwitcher=new HighAvailabilityModeSwitcher(sts,stm,election,cma,mock(ClusterClient.class),storeSupplierMock(),instanceId,componentSwitcher,neoStoreDataSourceSupplierMock(),NullLogService.getInstance());
  theSwitcher.init();
  theSwitcher.start();
  theSwitcher.instanceDetached(new HighAvailabilityMemberChangeEvent(HighAvailabilityMemberState.MASTER,HighAvailabilityMemberState.PENDING,null,null));
  verify(componentSwitcher).switchToSlave();
  verifyZeroInteractions(cma);
}
