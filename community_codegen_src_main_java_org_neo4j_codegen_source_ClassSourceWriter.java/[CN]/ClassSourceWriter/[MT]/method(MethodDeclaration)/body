{
  StringBuilder target=new StringBuilder();
  if (signature.isConstructor()) {
    if (signature.isStatic()) {
      target.append("    static\n    {\n");
      return new MethodSourceWriter(target,this);
    }
 else {
      target.append("    public ");
      typeParameters(target,signature);
      target.append(signature.declaringClass().simpleName());
    }
  }
 else {
    target.append("    ");
    if (signature.isStatic()) {
      target.append("static ");
    }
    target.append("public ");
    typeParameters(target,signature);
    target.append(signature.returnType().name()).append(" ").append(signature.name());
  }
  target.append("(");
  String prefix=" ";
  for (  Parameter parameter : signature.parameters()) {
    target.append(prefix).append(parameter.type().name()).append(" ").append(parameter.name());
    prefix=", ";
  }
  if (prefix.length() > 1) {
    target.append(" ");
  }
  target.append(')');
  String sep=" throws ";
  for (  TypeReference thrown : signature.throwsList()) {
    target.append(sep).append(thrown.name());
    sep=", ";
  }
  target.append("\n    {\n");
  return new MethodSourceWriter(target,this);
}
