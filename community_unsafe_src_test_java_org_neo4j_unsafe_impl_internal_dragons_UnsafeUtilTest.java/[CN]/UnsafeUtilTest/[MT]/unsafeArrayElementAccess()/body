{
  int len=3;
  int scale;
  int base;
  boolean[] booleans=new boolean[len];
  scale=arrayIndexScale(booleans.getClass());
  base=arrayBaseOffset(booleans.getClass());
  putBoolean(booleans,arrayOffset(1,base,scale),true);
  assertThat(booleans[0],is(false));
  assertThat(booleans[1],is(true));
  assertThat(booleans[2],is(false));
  byte[] bytes=new byte[len];
  scale=arrayIndexScale(bytes.getClass());
  base=arrayBaseOffset(bytes.getClass());
  putByte(bytes,arrayOffset(1,base,scale),(byte)-1);
  assertThat(bytes[0],is((byte)0));
  assertThat(bytes[1],is((byte)-1));
  assertThat(bytes[2],is((byte)0));
  short[] shorts=new short[len];
  scale=arrayIndexScale(shorts.getClass());
  base=arrayBaseOffset(shorts.getClass());
  putShort(shorts,arrayOffset(1,base,scale),(short)-1);
  assertThat(shorts[0],is((short)0));
  assertThat(shorts[1],is((short)-1));
  assertThat(shorts[2],is((short)0));
  float[] floats=new float[len];
  scale=arrayIndexScale(floats.getClass());
  base=arrayBaseOffset(floats.getClass());
  putFloat(floats,arrayOffset(1,base,scale),-1);
  assertThat(floats[0],is((float)0));
  assertThat(floats[1],is((float)-1));
  assertThat(floats[2],is((float)0));
  char[] chars=new char[len];
  scale=arrayIndexScale(chars.getClass());
  base=arrayBaseOffset(chars.getClass());
  putChar(chars,arrayOffset(1,base,scale),(char)-1);
  assertThat(chars[0],is((char)0));
  assertThat(chars[1],is((char)-1));
  assertThat(chars[2],is((char)0));
  int[] ints=new int[len];
  scale=arrayIndexScale(ints.getClass());
  base=arrayBaseOffset(ints.getClass());
  putInt(ints,arrayOffset(1,base,scale),-1);
  assertThat(ints[0],is(0));
  assertThat(ints[1],is(-1));
  assertThat(ints[2],is(0));
  long[] longs=new long[len];
  scale=arrayIndexScale(longs.getClass());
  base=arrayBaseOffset(longs.getClass());
  putLong(longs,arrayOffset(1,base,scale),-1);
  assertThat(longs[0],is(0L));
  assertThat(longs[1],is(-1L));
  assertThat(longs[2],is(0L));
  double[] doubles=new double[len];
  scale=arrayIndexScale(doubles.getClass());
  base=arrayBaseOffset(doubles.getClass());
  putDouble(doubles,arrayOffset(1,base,scale),-1);
  assertThat(doubles[0],is((double)0));
  assertThat(doubles[1],is((double)-1));
  assertThat(doubles[2],is((double)0));
  Object[] objects=new Object[len];
  scale=arrayIndexScale(objects.getClass());
  base=arrayBaseOffset(objects.getClass());
  putObject(objects,arrayOffset(1,base,scale),objects);
  assertThat(objects[0],is(nullValue()));
  assertThat(objects[1],is(sameInstance((Object)objects)));
  assertThat(objects[2],is(nullValue()));
}
