{
  try {
    AuthSubject authSubject=authManager.login(authToken);
    boolean credentialsExpired=false;
switch (authSubject.getAuthenticationResult()) {
case SUCCESS:
      break;
case PASSWORD_CHANGE_REQUIRED:
    credentialsExpired=true;
  break;
case TOO_MANY_ATTEMPTS:
throw new AuthenticationException(Status.Security.AuthenticationRateLimit);
default :
log.warn("Failed authentication attempt for '%s'",AuthToken.safeCast(PRINCIPAL,authToken));
throw new AuthenticationException(Status.Security.Unauthorized);
}
return new BasicAuthenticationResult(authSubject,credentialsExpired);
}
 catch (InvalidAuthTokenException e) {
throw new AuthenticationException(e.status(),e.getMessage());
}
}
