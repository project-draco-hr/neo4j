{
  Map<String,String> config=new HashMap<String,String>();
  config.put(GraphDatabaseSettings.tx_manager_impl.name(),JOTMTransactionManager.NAME);
  GraphDatabaseAPI db=null;
  final AtomicBoolean externalResourceWasRolledBack=new AtomicBoolean(false);
  try {
    db=new ImpermanentGraphDatabase(config);
    db.registerTransactionEventHandler(failsBeforeCommitTransactionHandler);
    Transaction outerTx=db.beginTx();
    FakeXAResource externalResource=new FakeXAResource("BananaStorageFacility"){
      @Override public void rollback(      Xid xid){
        super.rollback(xid);
        externalResourceWasRolledBack.set(true);
      }
    }
;
    txManager(db).getTransaction().enlistResource(externalResource);
    try {
      db.createNode();
      Transaction innerTx=db.beginTx();
      try {
        db.createNode();
        innerTx.success();
      }
  finally {
        innerTx.finish();
      }
      outerTx.success();
    }
  finally {
      outerTx.finish();
    }
    fail("Transaction should have failed.");
  }
 catch (  TransactionFailureException e) {
  }
 finally {
    if (db != null) {
      db.shutdown();
    }
  }
  assertThat(externalResourceWasRolledBack.get(),is(true));
}
