{
  ManagedCluster cluster=clusterRule.startCluster();
  cluster.await(masterSeesSlavesAsAvailable(2));
  HighlyAvailableGraphDatabase master=cluster.getMaster();
  RepairKit masterShutdown=cluster.fail(master);
  cluster.await(instanceEvicted(master));
  for (  HighlyAvailableGraphDatabase db : cluster.getAllMembers()) {
    if (db.getInstanceState() == HighAvailabilityMemberState.PENDING) {
      continue;
    }
    assertEquals(3,ha(db).getInstancesInCluster().length);
  }
  masterShutdown.repair();
  cluster.await(ClusterManager.allSeesAllAsAvailable(),180);
  for (  HighlyAvailableGraphDatabase db : cluster.getAllMembers()) {
    int mastersFound=0;
    HighAvailability bean=ha(db);
    assertEquals(3,bean.getInstancesInCluster().length);
    for (    ClusterMemberInfo info : bean.getInstancesInCluster()) {
      assertTrue(bean.getInstanceId() + ": every instance should be available: " + info.getInstanceId(),info.isAvailable());
      for (      String role : info.getRoles()) {
        if (role.equals(HighAvailabilityModeSwitcher.MASTER)) {
          mastersFound++;
        }
      }
    }
    assertEquals(1,mastersFound);
  }
}
