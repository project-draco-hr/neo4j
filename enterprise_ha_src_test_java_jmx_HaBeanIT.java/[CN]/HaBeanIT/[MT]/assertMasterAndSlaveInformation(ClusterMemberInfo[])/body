{
  ClusterMemberInfo master=member(instancesInCluster,1);
  assertEquals(1137,ServerUtil.getUriForScheme("ha",Iterables.map(new Function<String,URI>(){
    @Override public URI apply(    String from){
      return URI.create(from);
    }
  }
,Arrays.asList(master.getUris()))).getPort());
  assertEquals(HighAvailabilityModeSwitcher.MASTER,master.getHaRole());
  ClusterMemberInfo slave=member(instancesInCluster,2);
  assertEquals(1138,ServerUtil.getUriForScheme("ha",Iterables.map(new Function<String,URI>(){
    @Override public URI apply(    String from){
      return URI.create(from);
    }
  }
,Arrays.asList(slave.getUris()))).getPort());
  assertEquals(HighAvailabilityModeSwitcher.SLAVE,slave.getHaRole());
  assertTrue("Slave not available",slave.isAvailable());
}
