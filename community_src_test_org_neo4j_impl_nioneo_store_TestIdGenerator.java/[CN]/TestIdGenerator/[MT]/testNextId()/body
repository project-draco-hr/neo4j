{
  try {
    IdGenerator.createGenerator("testIdGenerator.id");
    IdGenerator idGenerator=new IdGenerator("testIdGenerator.id",3);
    for (int i=0; i < 7; i++) {
      assertEquals(i,idGenerator.nextId());
    }
    idGenerator.freeId(1);
    idGenerator.freeId(3);
    idGenerator.freeId(5);
    assertEquals(7,idGenerator.nextId());
    idGenerator.freeId(6);
    idGenerator.close();
    idGenerator=new IdGenerator("testIdGenerator.id",5);
    idGenerator.freeId(2);
    idGenerator.freeId(4);
    assertEquals(1,idGenerator.nextId());
    idGenerator.freeId(1);
    assertEquals(3,idGenerator.nextId());
    idGenerator.freeId(3);
    assertEquals(5,idGenerator.nextId());
    idGenerator.freeId(5);
    assertEquals(6,idGenerator.nextId());
    idGenerator.freeId(6);
    assertEquals(8,idGenerator.nextId());
    idGenerator.freeId(8);
    assertEquals(9,idGenerator.nextId());
    idGenerator.freeId(9);
    idGenerator.close();
    idGenerator=new IdGenerator("testIdGenerator.id",3);
    assertEquals(2,idGenerator.nextId());
    assertEquals(4,idGenerator.nextId());
    assertEquals(1,idGenerator.nextId());
    assertEquals(3,idGenerator.nextId());
    assertEquals(5,idGenerator.nextId());
    assertEquals(6,idGenerator.nextId());
    assertEquals(8,idGenerator.nextId());
    assertEquals(9,idGenerator.nextId());
    assertEquals(10,idGenerator.nextId());
    assertEquals(11,idGenerator.nextId());
    idGenerator.close();
  }
 catch (  IOException e) {
    fail("" + e);
  }
 finally {
    File file=new File("testIdGenerator.id");
    if (file.exists()) {
      assertTrue(file.delete());
    }
  }
}
