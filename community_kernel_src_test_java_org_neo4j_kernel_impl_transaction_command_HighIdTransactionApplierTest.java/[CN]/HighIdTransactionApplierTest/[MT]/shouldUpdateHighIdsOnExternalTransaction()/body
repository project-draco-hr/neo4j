{
  NeoStores neoStores=neoStoresRule.open();
  HighIdTransactionApplier tracker=new HighIdTransactionApplier(EMPTY,neoStores);
  tracker.visitNodeCommand(Commands.createNode(10,2,3));
  tracker.visitNodeCommand(Commands.createNode(20,4,5));
  tracker.visitRelationshipCommand(Commands.createRelationship(4,10,20,0));
  tracker.visitRelationshipCommand(Commands.createRelationship(45,10,20,1));
  tracker.visitLabelTokenCommand(Commands.createLabelToken(3,0));
  tracker.visitLabelTokenCommand(Commands.createLabelToken(5,1));
  tracker.visitPropertyKeyTokenCommand(Commands.createPropertyKeyToken(3,0));
  tracker.visitPropertyKeyTokenCommand(Commands.createPropertyKeyToken(5,1));
  tracker.visitRelationshipTypeTokenCommand(Commands.createRelationshipTypeToken(3,0));
  tracker.visitRelationshipTypeTokenCommand(Commands.createRelationshipTypeToken(5,1));
  tracker.visitRelationshipGroupCommand(Commands.createRelationshipGroup(10,1));
  tracker.visitRelationshipGroupCommand(Commands.createRelationshipGroup(20,2));
  tracker.visitSchemaRuleCommand(Commands.createIndexRule(10,0,1));
  tracker.visitSchemaRuleCommand(Commands.createIndexRule(20,1,2));
  tracker.visitPropertyCommand(Commands.createProperty(10,PropertyType.STRING,0,6,7));
  tracker.visitPropertyCommand(Commands.createProperty(20,PropertyType.ARRAY,1,8,9));
  tracker.apply();
  tracker.close();
  assertEquals("NodeStore",20 + 1,neoStores.getNodeStore().getHighId());
  assertEquals("DynamicNodeLabelStore",5 + 1,neoStores.getNodeStore().getDynamicLabelStore().getHighId());
  assertEquals("RelationshipStore",45 + 1,neoStores.getRelationshipStore().getHighId());
  assertEquals("RelationshipTypeStore",5 + 1,neoStores.getRelationshipTypeTokenStore().getHighId());
  assertEquals("RelationshipType NameStore",1 + 1,neoStores.getRelationshipTypeTokenStore().getNameStore().getHighId());
  assertEquals("PropertyKeyStore",5 + 1,neoStores.getPropertyKeyTokenStore().getHighId());
  assertEquals("PropertyKey NameStore",1 + 1,neoStores.getPropertyKeyTokenStore().getNameStore().getHighId());
  assertEquals("LabelStore",5 + 1,neoStores.getLabelTokenStore().getHighId());
  assertEquals("Label NameStore",1 + 1,neoStores.getLabelTokenStore().getNameStore().getHighId());
  assertEquals("PropertyStore",20 + 1,neoStores.getPropertyStore().getHighId());
  assertEquals("PropertyStore DynamicStringStore",7 + 1,neoStores.getPropertyStore().getStringStore().getHighId());
  assertEquals("PropertyStore DynamicArrayStore",9 + 1,neoStores.getPropertyStore().getArrayStore().getHighId());
  assertEquals("SchemaStore",20 + 1,neoStores.getSchemaStore().getHighId());
}
