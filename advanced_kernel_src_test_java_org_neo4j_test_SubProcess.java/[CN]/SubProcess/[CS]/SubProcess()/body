{
  if (getClass().getSuperclass() != SubProcess.class) {
    throw new ClassCastException(SubProcess.class.getName() + " may only be extended one level ");
  }
  Class<?> me=getClass();
  while (me.getSuperclass() != SubProcess.class) {
    me=me.getSuperclass();
  }
  Type type=((ParameterizedType)me.getGenericSuperclass()).getActualTypeArguments()[0];
  @SuppressWarnings({"hiding"}) Class<T> t;
  if (type instanceof Class<?>) {
    t=(Class<T>)type;
  }
 else   if (type instanceof ParameterizedType) {
    t=(Class<T>)((ParameterizedType)type).getRawType();
  }
 else {
    throw new ClassCastException("Illegal type parameter " + type);
  }
  if (t == Object.class)   t=(Class)NoInterface.class;
  if (!t.isInterface()) {
    throw new ClassCastException(t + " is not an interface");
  }
  if (t.isAssignableFrom(getClass()) || t == NoInterface.class) {
    this.t=t;
  }
 else {
    throw new ClassCastException(getClass().getName() + " must implement declared interface " + t);
  }
}
