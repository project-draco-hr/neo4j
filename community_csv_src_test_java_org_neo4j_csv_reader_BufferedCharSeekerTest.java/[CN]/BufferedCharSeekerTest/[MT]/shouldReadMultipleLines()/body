{
  seeker=new BufferedCharSeeker(wrap(new StringReader("1\t2\t3\n" + "4\t5\t6\n")));
  assertTrue(seeker.seek(mark,TAB));
  assertEquals(1L,seeker.extract(mark,extractors.long_()).longValue());
  assertEquals(1,mark.lineNumber());
  assertTrue(seeker.seek(mark,TAB));
  assertEquals(2L,seeker.extract(mark,extractors.long_()).longValue());
  assertEquals(1,mark.lineNumber());
  assertTrue(seeker.seek(mark,TAB));
  assertEquals(3L,seeker.extract(mark,extractors.long_()).longValue());
  assertTrue(mark.isEndOfLine());
  assertEquals(1,mark.lineNumber());
  assertTrue(seeker.seek(mark,TAB));
  assertEquals(4L,seeker.extract(mark,extractors.long_()).longValue());
  assertEquals(2,mark.lineNumber());
  assertTrue(seeker.seek(mark,TAB));
  assertEquals(5L,seeker.extract(mark,extractors.long_()).longValue());
  assertEquals(2,mark.lineNumber());
  assertTrue(seeker.seek(mark,TAB));
  assertEquals(6L,seeker.extract(mark,extractors.long_()).longValue());
  assertEquals(2,mark.lineNumber());
  assertTrue(mark.isEndOfLine());
  assertFalse(seeker.seek(mark,TAB));
  assertEquals(3,mark.lineNumber());
}
