{
  Cluster cluster=mock(Cluster.class);
  ClusterMembers clusterMembers=mock(ClusterMembers.class);
  when(clusterMembers.getAliveMembers()).thenReturn(Iterables.option(new ClusterMember(INSTANCE_ID).availableAs(SLAVE,HA_URI,StoreId.DEFAULT)));
  SlaveFactory slaveFactory=mock(SlaveFactory.class);
  when(slaveFactory.newSlave(any(LifeSupport.class),any(ClusterMember.class))).thenReturn(mock(Slave.class),mock(Slave.class));
  HighAvailabilitySlaves slaves=new HighAvailabilitySlaves(clusterMembers,cluster,slaveFactory);
  slaves.init();
  ArgumentCaptor<ClusterListener> listener=ArgumentCaptor.forClass(ClusterListener.class);
  verify(cluster).addClusterListener(listener.capture());
  Slave slave1=slaves.getSlaves().iterator().next();
  listener.getValue().elected(ClusterConfiguration.COORDINATOR,INSTANCE_ID,CLUSTER_URI);
  Slave slave2=slaves.getSlaves().iterator().next();
  assertThat(slave2,not(sameInstance(slave1)));
}
