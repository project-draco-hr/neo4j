{
  Cluster cluster=mock(Cluster.class);
  ClusterMembers clusterMembers=mock(ClusterMembers.class);
  when(clusterMembers.getMembers()).thenReturn(iterable(new ClusterMember(clusterUri1).availableAs(HighAvailabilityModeSwitcher.SLAVE,haUri1)));
  SlaveFactory slaveFactory=mock(SlaveFactory.class);
  when(slaveFactory.newSlave((ClusterMember)any())).thenReturn(mock(Slave.class),mock(Slave.class));
  HighAvailabilitySlaves slaves=new HighAvailabilitySlaves(clusterMembers,cluster,slaveFactory);
  slaves.init();
  ArgumentCaptor<ClusterListener> listener=ArgumentCaptor.forClass(ClusterListener.class);
  verify(cluster).addClusterListener(listener.capture());
  Slave slave1=slaves.getSlaves().iterator().next();
  listener.getValue().elected(ClusterConfiguration.COORDINATOR,clusterUri2);
  Slave slave2=slaves.getSlaves().iterator().next();
  Assert.assertThat(slave2,not(sameInstance(slave1)));
}
