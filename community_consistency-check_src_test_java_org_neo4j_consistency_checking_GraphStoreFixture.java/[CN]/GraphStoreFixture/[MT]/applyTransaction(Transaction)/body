{
  GraphDatabaseBuilder builder=new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(directory);
  GraphDatabaseAPI database=(GraphDatabaseAPI)builder.newGraphDatabase();
  try (LockGroup locks=new LockGroup()){
    TransactionRepresentationCommitProcess commitProcess=new TransactionRepresentationCommitProcess(database.getDependencyResolver().resolveDependency(LogicalTransactionStore.class),database.getDependencyResolver().resolveDependency(KernelHealth.class),database.getDependencyResolver().resolveDependency(NeoStoreProvider.class).evaluate(),database.getDependencyResolver().resolveDependency(TransactionRepresentationStoreApplier.class),TransactionApplicationMode.EXTERNAL);
    TransactionIdStore transactionIdStore=database.getDependencyResolver().resolveDependency(TransactionIdStore.class);
    CountsTracker counts=database.getDependencyResolver().resolveDependency(NeoStore.class).getCounts();
    commitProcess.commit(transaction.representation(idGenerator(),masterId(),myId(),transactionIdStore.getLastCommittedTransactionId(),counts),locks,CommitEvent.NULL);
  }
  finally {
    database.shutdown();
  }
}
