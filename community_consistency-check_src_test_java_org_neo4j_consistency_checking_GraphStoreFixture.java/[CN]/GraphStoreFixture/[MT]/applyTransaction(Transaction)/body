{
  GraphDatabaseBuilder builder=new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(directory);
  GraphDatabaseAPI database=(GraphDatabaseAPI)builder.newGraphDatabase();
  try (LockGroup locks=new LockGroup()){
    DependencyResolver dependencyResolver=database.getDependencyResolver();
    TransactionRepresentationCommitProcess commitProcess=new TransactionRepresentationCommitProcess(dependencyResolver.resolveDependency(LogicalTransactionStore.class),dependencyResolver.resolveDependency(KernelHealth.class),dependencyResolver.resolveDependency(NeoStoreProvider.class).evaluate(),dependencyResolver.resolveDependency(TransactionRepresentationStoreApplier.class),dependencyResolver.resolveDependency(IndexUpdatesValidator.class));
    TransactionIdStore transactionIdStore=database.getDependencyResolver().resolveDependency(TransactionIdStore.class);
    NodeStore nodes=database.getDependencyResolver().resolveDependency(NeoStore.class).getNodeStore();
    commitProcess.commit(transaction.representation(idGenerator(),masterId(),myId(),transactionIdStore.getLastCommittedTransactionId(),nodes),locks,CommitEvent.NULL,TransactionApplicationMode.EXTERNAL);
  }
  finally {
    database.shutdown();
  }
}
