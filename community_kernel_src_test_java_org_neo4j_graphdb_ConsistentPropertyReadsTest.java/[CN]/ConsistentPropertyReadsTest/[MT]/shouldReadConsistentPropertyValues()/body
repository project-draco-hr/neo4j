{
  final Node[] nodes=new Node[10];
  final String[] keys=new String[]{"1","2","3"};
  final String[] values=new String[]{"dsjlfhsdljhsjlghsljfghjlsfhg jlfh jldfgh djlfghdljfgh dljfghdfljgh dlfjg hdfljg hdfljg hdflghdfjgl hdfljg hdfjlg hdfglj hdfgjl dhfglj dhfgjl dfhglsdjfk??asjkdl??adksfl??sf akljdhfwjl htlj3ht jl3rht jl3ht j3lht 3jt h3ltj h34tl j3ht j3t h3jtl h34jtl 3h4tl 3j4ht l34jt h3ljg","jdlhflahsjlw4hjltwrhtjl4hljterhglwrhyjl5hgwjlrgh rljeghlj rhyljthlj5 4yhj tlrwhtlj rhylj hrjtl h53jl6ht 35qjlhjl4 htjl rh jtl35 hyjl43 hyjl35hjylhwjelth tq3jlth qjlrwhetj lq3rht lqrjwhqlj rhyjl q3htjlhr tjlwhrg jlwrhy jlrht jlgwhjly h3rjl t h","kfgjlyh3jlghjl45h l4tg hj45l h46jl ghjlgh5glj  hgjl 5hgjl5hjl gh4j3 lgh46 ljh4 jl4h j4hg4lgj h4t jlgh 4t jlgh4tgjlthgje tlhjfldhb8ther8g0u8f0vrehi5k??ehvjlfhgutwohy ireghlwgh lrej htlweghwrufh wrutl h35ut lhrgvj rhyl5hy jlwhglwrhfu5oy h53tlj h4wlt h5eut herul"};
  try (Transaction tx=db.beginTx()){
    for (int i=0; i < nodes.length; i++) {
      nodes[i]=db.createNode();
      for (int j=0; j < keys.length; j++) {
        nodes[i].setProperty(keys[j],values[0]);
      }
    }
    tx.success();
  }
   int updaters=10;
  final AtomicLong updatersDone=new AtomicLong(updaters);
  Race race=new Race();
  for (int i=0; i < updaters; i++) {
    race.addContestant(new Runnable(){
      @Override public void run(){
        try {
          ThreadLocalRandom random=ThreadLocalRandom.current();
          for (int j=0; j < 100; j++) {
            try (Transaction tx=db.beginTx()){
              nodes[random.nextInt(nodes.length)].setProperty(keys[random.nextInt(keys.length)],values[random.nextInt(values.length)]);
              tx.success();
            }
           }
        }
  finally {
          updatersDone.decrementAndGet();
        }
      }
    }
);
  }
  for (int i=0; i < 10; i++) {
    race.addContestant(new Runnable(){
      @Override public void run(){
        ThreadLocalRandom random=ThreadLocalRandom.current();
        while (updatersDone.get() > 0) {
          try (Transaction tx=db.beginTx()){
            String value=(String)nodes[random.nextInt(nodes.length)].getProperty(keys[random.nextInt(keys.length)]);
            assertTrue(value,ArrayUtil.contains(values,value));
            tx.success();
          }
         }
      }
    }
);
  }
  race.go();
}
