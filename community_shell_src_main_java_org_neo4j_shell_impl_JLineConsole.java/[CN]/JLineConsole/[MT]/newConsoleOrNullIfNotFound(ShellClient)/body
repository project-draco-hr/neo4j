{
  try {
    Object consoleReader=Class.forName("jline.ConsoleReader").newInstance();
    consoleReader.getClass().getMethod("setBellEnabled",Boolean.TYPE).invoke(consoleReader,false);
    consoleReader.getClass().getMethod("setBellEnabled",Boolean.TYPE).invoke(consoleReader,false);
    consoleReader.getClass().getMethod("setUseHistory",Boolean.TYPE).invoke(consoleReader,true);
    Object completor=Class.forName(JLineConsole.class.getPackage().getName() + "." + "ShellTabCompletor").getConstructor(ShellClient.class).newInstance(client);
    Class<?> completorClass=Class.forName("jline.Completor");
    consoleReader.getClass().getMethod("addCompletor",completorClass).invoke(consoleReader,completor);
    Class<?> historyClass=Class.forName("jline.History");
    Object history=historyClass.newInstance();
    history.getClass().getMethod("setHistoryFile",File.class).invoke(history,new File(".shell_history"));
    consoleReader.getClass().getMethod("setHistory",historyClass).invoke(consoleReader,history);
    return new JLineConsole(consoleReader,client);
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    return null;
  }
}
