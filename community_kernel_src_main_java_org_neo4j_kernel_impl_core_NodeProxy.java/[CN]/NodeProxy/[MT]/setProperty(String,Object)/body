{
  boolean requireRollback=true;
  try (DataStatement statement=statementCtxProvider.dataStatement()){
    long propertyKeyId=statement.propertyKeyGetOrCreateForName(key);
    try {
      statement.nodeSetProperty(nodeId,Property.property(propertyKeyId,value));
    }
 catch (    ConstraintValidationKernelException e) {
      requireRollback=false;
      throw new ConstraintViolationException(e.getUserMessage(new StatementTokenNameLookup(statement)),e);
    }
    requireRollback=false;
  }
 catch (  EntityNotFoundException e) {
    throw new NotFoundException(e);
  }
catch (  IllegalTokenNameException e) {
    throw new IllegalArgumentException(format("Invalid property key '%s'.",key),e);
  }
 finally {
    if (requireRollback) {
      nodeLookup.getNodeManager().setRollbackOnly();
    }
  }
}
