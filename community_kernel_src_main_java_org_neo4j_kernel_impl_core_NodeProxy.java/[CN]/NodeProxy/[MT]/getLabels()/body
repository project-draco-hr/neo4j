{
  return new ResourceIterable<Label>(){
    @Override public ResourceIterator<Label> iterator(){
      final StatementContext ctx=statementCtxProvider.getCtxForReading();
      return nodeLookup.getCleanupService().resourceIterator(map(new Function<Long,Label>(){
        @Override public Label apply(        Long labelId){
          try {
            return label(ctx.getLabelName(labelId));
          }
 catch (          LabelNotFoundKernelException e) {
            throw new ThisShouldNotHappenError("Mattias","Listed labels for node " + nodeId + ", but the returned label "+ labelId+ " doesn't exist anymore");
          }
        }
      }
,ctx.getLabelsForNode(getId())),ctx);
    }
  }
;
}
