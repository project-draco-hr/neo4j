{
  final StatementContext ctx=statementCtxProvider.getCtxForReading();
  return new IterableWrapper<Label,Long>(ctx.getLabelsForNode(getId())){
    @Override protected Label underlyingObjectToObject(    Long labelId){
      try {
        return label(ctx.getLabelName(labelId));
      }
 catch (      LabelNotFoundKernelException e) {
        throw new ThisShouldNotHappenError("Mattias","Listed labels for node " + nodeId + ", but the returned label "+ labelId+ " doesn't exist anymore");
      }
    }
  }
;
}
