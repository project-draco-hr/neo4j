{
  return new ResourceIterable<Label>(){
    @Override public ResourceIterator<Label> iterator(){
      final StatementContext context=statementCtxProvider.getCtxForReading();
      Iterator<Long> labels;
      try {
        labels=context.nodeGetLabels(getId());
      }
 catch (      EntityNotFoundException e) {
        context.close();
        throw new NotFoundException("No node with id " + getId() + " found.",e);
      }
      return nodeLookup.getCleanupService().resourceIterator(map(new Function<Long,Label>(){
        @Override public Label apply(        Long labelId){
          try {
            return label(context.labelGetName(labelId));
          }
 catch (          LabelNotFoundKernelException e) {
            throw new ThisShouldNotHappenError("Mattias","Listed labels for node " + nodeId + ", but the returned label "+ labelId+ " doesn't exist anymore");
          }
        }
      }
,labels),context);
    }
  }
;
}
