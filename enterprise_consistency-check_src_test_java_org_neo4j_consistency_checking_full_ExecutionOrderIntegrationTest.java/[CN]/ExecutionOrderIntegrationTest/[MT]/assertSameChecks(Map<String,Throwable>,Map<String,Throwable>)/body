{
  if (!singlePassChecks.keySet().equals(multiPassChecks.keySet())) {
    Map<String,Throwable> missing=new HashMap<String,Throwable>(singlePassChecks);
    Map<String,Throwable> extras=new HashMap<String,Throwable>(multiPassChecks);
    missing.keySet().removeAll(multiPassChecks.keySet());
    extras.keySet().removeAll(singlePassChecks.keySet());
    StringWriter diff=new StringWriter();
    PrintWriter writer=new PrintWriter(diff);
    if (!missing.isEmpty()) {
      writer.append("These expected checks were missing:\n");
      for (      Throwable check : missing.values()) {
        writer.append("  ");
        check.printStackTrace(writer);
      }
    }
    if (!extras.isEmpty()) {
      writer.append("These extra checks were not expected:\n");
      for (      Throwable check : extras.values()) {
        writer.append("  ");
        check.printStackTrace(writer);
      }
    }
    fail(diff.toString());
  }
}
