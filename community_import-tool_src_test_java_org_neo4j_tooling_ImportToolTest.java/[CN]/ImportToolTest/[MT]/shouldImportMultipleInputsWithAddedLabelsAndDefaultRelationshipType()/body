{
  List<String> nodeIds=nodeIds();
  Configuration config=Configuration.COMMAS;
  final String[] firstLabels={"AddedOne","AddedTwo"};
  final String[] secondLabels={"AddedThree"};
  final String firstType="TYPE_1";
  final String secondType="TYPE_2";
  importTool("--into",dbRule.getStoreDirAbsolutePath(),"--nodes:" + join(firstLabels,":"),nodeData(true,config,nodeIds,lines(0,NODE_COUNT / 2)).getAbsolutePath(),"--nodes:" + join(secondLabels,":"),nodeData(true,config,nodeIds,lines(NODE_COUNT / 2,NODE_COUNT)).getAbsolutePath(),"--relationships:" + firstType,relationshipData(true,config,nodeIds,lines(0,RELATIONSHIP_COUNT / 2),false).getAbsolutePath(),"--relationships:" + secondType,relationshipData(true,config,nodeIds,lines(RELATIONSHIP_COUNT / 2,RELATIONSHIP_COUNT),false).getAbsolutePath());
  verifyData(new Validator<Node>(){
    @Override public void validate(    Node node){
      if (node.getId() < NODE_COUNT / 2) {
        assertNodeHasLabels(node,firstLabels);
      }
 else {
        assertNodeHasLabels(node,secondLabels);
      }
    }
  }
,new Validator<Relationship>(){
    @Override public void validate(    Relationship relationship){
      if (relationship.getId() < RELATIONSHIP_COUNT / 2) {
        assertEquals(firstType,relationship.getType().name());
      }
 else {
        assertEquals(secondType,relationship.getType().name());
      }
    }
  }
);
}
