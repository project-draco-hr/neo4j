{
  boolean authEnabled=config.get(GraphDatabaseSettings.auth_enabled);
  if (!authEnabled) {
    return AuthManager.NO_AUTH;
  }
  String key=config.get(GraphDatabaseSettings.auth_manager);
  for (  AuthManager.Factory candidate : Service.load(AuthManager.Factory.class)) {
    String candidateId=candidate.getKeys().iterator().next();
    if (candidateId.equals(key)) {
      return candidate.newInstance(config,logging.getUserLogProvider(),authManagerLog(config,fileSystem),fileSystem,jobScheduler);
    }
 else     if (key.isEmpty()) {
      logging.getInternalLog(GraphDatabaseFacadeFactory.class).info("No auth manager implementation specified, defaulting to '" + candidateId + "'");
      return candidate.newInstance(config,logging.getUserLogProvider(),authManagerLog(config,fileSystem),fileSystem,jobScheduler);
    }
  }
  if (key.isEmpty()) {
    logging.getUserLog(GraphDatabaseFacadeFactory.class).error("No auth manager implementation specified and no default could be loaded. " + "It is an illegal product configuration to have auth enabled and not provide an " + "auth manager service.");
    throw new IllegalArgumentException("Auth enabled but no auth manager found. This is an illegal product configuration.");
  }
  throw new IllegalArgumentException("No auth manager found with the name '" + key + "'.");
}
