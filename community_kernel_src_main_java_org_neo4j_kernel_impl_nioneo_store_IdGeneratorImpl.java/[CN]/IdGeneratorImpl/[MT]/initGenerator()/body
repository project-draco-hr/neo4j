{
  try {
    fileChannel=fs.open(fileName,"rw");
    ByteBuffer buffer=ByteBuffer.allocate(HEADER_SIZE);
    totalBytesRead=fileChannel.read(buffer);
    if (totalBytesRead != HEADER_SIZE) {
      fileChannel.close();
      throw new InvalidIdGeneratorException("Unable to read header, bytes read: " + totalBytesRead);
    }
    buffer.flip();
    byte storageStatus=buffer.get();
    if (storageStatus != CLEAN_GENERATOR) {
      fileChannel.close();
      throw new InvalidIdGeneratorException("Sticky generator[ " + fileName + "] delete this id generator and build a new one");
    }
    this.nextFreeId.set(buffer.getLong());
    buffer.flip();
    buffer.put(STICKY_GENERATOR).limit(1).flip();
    fileChannel.position(0);
    fileChannel.write(buffer);
    fileChannel.position(HEADER_SIZE);
    readBlocksTo=fileChannel.size();
    defraggedIdCount=(int)(readBlocksTo - HEADER_SIZE) / 8;
    readIdBatch();
  }
 catch (  IOException e) {
    throw new UnderlyingStorageException("Unable to init id generator " + fileName,e);
  }
}
