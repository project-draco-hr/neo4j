{
  super();
  this.neo=neo;
  this.relationshipType=relationshipType;
  transaction=neo.beginTx();
  for (int l=0; l < numberOfLayers; ++l) {
    System.out.println("Creating nodes on layer " + l + " / "+ numberOfLayers);
    LinkedList<Node> layer=new LinkedList<Node>();
    for (int n=0; n < numberOfNodesInEachLayer; ++n) {
      layer.add(neo.createNode());
      renewTransaction();
    }
    layers.add(layer);
  }
  for (int l=0; l < numberOfLayers - 1; ++l) {
    System.out.println("Creating edges on layer " + l + " / "+ numberOfLayers);
    List<Node> layer1=layers.get(l);
    List<Node> layer2=layers.get(l + 1);
    for (int e=0; e < numberOfEdgesBetweenEachLayer; ++e) {
      Node n1=layer1.get(random.nextInt(layer1.size()));
      Node n2=layer2.get(random.nextInt(layer2.size()));
      Relationship relationship=n1.createRelationshipTo(n2,relationshipType);
      relationship.setProperty("cost",random.nextDouble());
      renewTransaction();
    }
  }
  transaction.success();
  transaction.finish();
}
