{
  final byte markerByte=in.readByte();
  final byte markerHighNibble=(byte)(markerByte & 0xF0);
  final byte markerLowNibble=(byte)(markerByte & 0x0F);
  int size;
  if (markerHighNibble == TINY_STRING) {
    size=markerLowNibble;
  }
 else {
switch (markerByte) {
case STRING_8:
      size=unpackUINT8();
    break;
case STRING_16:
  size=unpackUINT16();
break;
case STRING_32:
{
long longSize=unpackUINT32();
if (longSize <= Integer.MAX_VALUE) {
  size=(int)longSize;
}
 else {
  throw new Overflow("STRING_32 too long for Java");
}
break;
}
default :
throw new Unexpected(PackType.STRING,markerByte);
}
}
return size;
}
