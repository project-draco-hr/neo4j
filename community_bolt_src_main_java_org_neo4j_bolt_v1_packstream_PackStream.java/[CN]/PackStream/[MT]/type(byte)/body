{
  final byte markerHighNibble=(byte)(markerByte & 0xF0);
switch (markerHighNibble) {
case TINY_STRING:
    return PackType.STRING;
case TINY_LIST:
  return PackType.LIST;
case TINY_MAP:
return PackType.MAP;
case TINY_STRUCT:
return PackType.STRUCT;
default :
break;
}
if (markerByte >= MINUS_2_TO_THE_4) {
return PackType.INTEGER;
}
switch (markerByte) {
case NULL:
return PackType.NULL;
case TRUE:
case FALSE:
return PackType.BOOLEAN;
case FLOAT_64:
return PackType.FLOAT;
case BYTES_8:
case BYTES_16:
case BYTES_32:
return PackType.BYTES;
case STRING_8:
case STRING_16:
case STRING_32:
return PackType.STRING;
case LIST_8:
case LIST_16:
case LIST_32:
case LIST_STREAM:
return PackType.LIST;
case MAP_8:
case MAP_16:
case MAP_32:
case MAP_STREAM:
return PackType.MAP;
case STRUCT_8:
case STRUCT_16:
return PackType.STRUCT;
case END_OF_STREAM:
return PackType.END_OF_STREAM;
case INT_8:
case INT_16:
case INT_32:
case INT_64:
return PackType.INTEGER;
default :
return PackType.RESERVED;
}
}
