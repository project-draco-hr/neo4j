{
  InstanceId rogue=new InstanceId(2);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.PENDING));
  memberListener.coordinatorIsElected(me);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.TO_MASTER));
  memberListener.memberIsAvailable(MASTER,me,URI.create("ha://someUri"),StoreId.DEFAULT);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.MASTER));
  memberListener.memberIsAvailable(MASTER,rogue,URI.create("ha://someUri"),StoreId.DEFAULT);
  assertPendingStateAndElectionsAsked();
}
