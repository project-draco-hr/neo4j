{
  InstanceId master=new InstanceId(2);
  InstanceId rogueMaster=new InstanceId(3);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.PENDING));
  memberListener.coordinatorIsElected(master);
  memberListener.memberIsAvailable(MASTER,master,URI.create("ha://someUri"),StoreId.DEFAULT);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.TO_SLAVE));
  memberListener.memberIsAvailable(SLAVE,me,URI.create("ha://myUri"),StoreId.DEFAULT);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.SLAVE));
  memberListener.memberIsAvailable(MASTER,rogueMaster,URI.create("ha://someOtherUri"),StoreId.DEFAULT);
  assertPendingStateAndElectionsAsked();
}
