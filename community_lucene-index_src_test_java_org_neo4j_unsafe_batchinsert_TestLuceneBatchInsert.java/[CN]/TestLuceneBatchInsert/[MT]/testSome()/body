{
  BatchInserterIndexProvider provider=new LuceneBatchInserterIndexProviderNewImpl(inserter);
  String indexName="users";
  BatchInserterIndex index=provider.nodeIndex(indexName,EXACT_CONFIG);
  Map<Integer,Long> ids=new HashMap<>();
  int count=5;
  for (int i=0; i < count; i++) {
    long id=inserter.createNode(null);
    index.add(id,map("name","Joe" + i,"other","Schmoe"));
    ids.put(i,id);
  }
  index.flush();
  for (int i=0; i < count; i++) {
    assertContains(index.get("name","Joe" + i),ids.get(i));
  }
  assertContains(index.query("name:Joe0 AND other:Schmoe"),ids.get(0));
  assertContains(index.query("name","Joe*"),ids.values().toArray(new Long[ids.size()]));
  provider.shutdown();
  switchToGraphDatabaseService();
  try (Transaction transaction=db.beginTx()){
    IndexManager indexManager=db.index();
    assertFalse(indexManager.existsForRelationships(indexName));
    assertTrue(indexManager.existsForNodes(indexName));
    assertNotNull(indexManager.forNodes(indexName));
    Index<Node> dbIndex=db.index().forNodes("users");
    for (int i=0; i < count; i++) {
      assertContains(dbIndex.get("name","Joe" + i),db.getNodeById(ids.get(i)));
    }
    Collection<Node> nodes=new ArrayList<>();
    for (    long id : ids.values()) {
      nodes.add(db.getNodeById(id));
    }
    assertContains(dbIndex.query("name","Joe*"),nodes.toArray(new Node[nodes.size()]));
    assertContains(dbIndex.query("name:Joe0 AND other:Schmoe"),db.getNodeById(ids.get(0)));
    transaction.success();
  }
 }
