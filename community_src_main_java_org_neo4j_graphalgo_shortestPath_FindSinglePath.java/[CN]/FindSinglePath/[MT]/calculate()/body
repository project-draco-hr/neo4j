{
  if (startNode == null || endNode == null) {
    throw new RuntimeException("Start or end node undefined.");
  }
  if (doneCalculation) {
    return true;
  }
  doneCalculation=true;
  if (startNode.equals(endNode)) {
    matchNode=startNode;
    return true;
  }
  PathStopEval stopEval1=new PathStopEval(maxDepth / 2);
  PathStopEval stopEval2=new PathStopEval(maxDepth / 2 + maxDepth % 2);
  PathReturnEval returnEval1=new PathReturnEval(predecessors1,predecessors2);
  PathReturnEval returnEval2=new PathReturnEval(predecessors2,predecessors1);
  Traverser trav1=startNode.traverse(Order.BREADTH_FIRST,stopEval1,returnEval1,relationshipType,Direction.BOTH);
  Traverser trav2=endNode.traverse(Order.BREADTH_FIRST,stopEval2,returnEval2,relationshipType,Direction.BOTH);
  Iterator<Node> itr1=trav1.iterator();
  Iterator<Node> itr2=trav2.iterator();
  while (itr1.hasNext() || itr2.hasNext()) {
    if (itr1.hasNext()) {
      itr1.next();
    }
    if (returnEval1.getMatchNode() != null) {
      matchNode=returnEval1.getMatchNode();
      return true;
    }
    if (itr2.hasNext()) {
      itr2.next();
    }
    if (returnEval2.getMatchNode() != null) {
      matchNode=returnEval2.getMatchNode();
      return true;
    }
  }
  return false;
}
