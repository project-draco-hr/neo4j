{
  writeInitialDataTo(file);
  RecordingPageCacheMonitor monitor=new RecordingPageCacheMonitor();
  MuninnPageCache pageCache=new MuninnPageCache(fs,2,8,monitor);
  PagedFile pagedFile=pageCache.map(file,8);
  try (PageCursor cursor=pagedFile.io(0,PF_EXCLUSIVE_LOCK | PF_NO_GROW)){
    assertTrue(cursor.next());
    cursor.putLong(0L);
    assertTrue(cursor.next());
    cursor.putLong(0L);
    assertFalse(cursor.next());
  }
   assertNotNull(monitor.observe(Fault.class));
  assertNotNull(monitor.observe(Fault.class));
  int clockArm=pageCache.evictPages(2,0);
  assertThat(clockArm,is(2));
  assertNotNull(monitor.observe(Evict.class));
  assertNotNull(monitor.observe(Evict.class));
  ByteBuffer buf=ByteBuffer.allocate(16);
  StoreChannel channel=fs.open(file,"r");
  channel.read(buf);
  buf.flip();
  assertThat(buf.getLong(),is(0L));
  assertThat(buf.getLong(),is(0L));
}
