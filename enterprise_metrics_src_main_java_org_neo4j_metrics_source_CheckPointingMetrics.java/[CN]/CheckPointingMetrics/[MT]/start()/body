{
  if (config.get(MetricsSettings.neoCheckPointingEnabled)) {
    registry.register(CHECK_POINT_EVENTS,new Gauge<Long>(){
      @Override public Long getValue(){
        return checkPointerMonitor.numberOfCheckPointEvents();
      }
    }
);
    registry.register(CHECK_POINT_TOTAL_TIME,new Gauge<Long>(){
      @Override public Long getValue(){
        return checkPointerMonitor.checkPointAccumulatedTotalTimeMillis();
      }
    }
);
  }
  if (config.get(MetricsSettings.neoLogRotationEnabled)) {
    registry.register(LOG_ROTATION_EVENTS,new Gauge<Long>(){
      @Override public Long getValue(){
        return logRotationMonitor.numberOfLogRotationEvents();
      }
    }
);
    registry.register(LOG_ROTATION_TOTAL_TIME,new Gauge<Long>(){
      @Override public Long getValue(){
        return logRotationMonitor.logRotationAccumulatedTotalTimeMillis();
      }
    }
);
  }
}
