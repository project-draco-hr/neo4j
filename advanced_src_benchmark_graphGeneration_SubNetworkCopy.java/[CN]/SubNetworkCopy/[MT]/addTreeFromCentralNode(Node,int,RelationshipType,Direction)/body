{
  Traverser traverser=node.traverse(Order.BREADTH_FIRST,new StopEvaluator(){
    public boolean isStopNode(    TraversalPosition currentPos){
      return currentPos.depth() >= searchDepth;
    }
  }
,ReturnableEvaluator.ALL,relationshipType,direction);
  for (  Node node2 : traverser) {
    nodeMap.put(node2,new SubNetworkNode(node2));
    Relationship relationship=traverser.currentPosition().lastRelationshipTraversed();
    if (relationship != null) {
      addRelationship(relationship);
    }
  }
}
