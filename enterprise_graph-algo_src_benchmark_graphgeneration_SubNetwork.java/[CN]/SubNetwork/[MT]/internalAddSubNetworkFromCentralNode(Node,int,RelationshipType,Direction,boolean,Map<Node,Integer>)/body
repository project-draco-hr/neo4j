{
  Integer previousDepth=nodeScanDepths.get(node);
  if (previousDepth != null && previousDepth >= searchDepth) {
    return;
  }
  subNetworkNodes.add(node);
  nodeScanDepths.put(node,searchDepth);
  if (searchDepth == 0 && includeBoundaryRelationships) {
    for (    Relationship relationship : node.getRelationships(relationshipType,direction)) {
      if (subNetworkNodes.contains(relationship.getOtherNode(node))) {
        subNetworkRelationships.add(relationship);
      }
    }
  }
  if (searchDepth <= 0) {
    return;
  }
  for (  Relationship relationship : node.getRelationships(relationshipType,direction)) {
    subNetworkRelationships.add(relationship);
    internalAddSubNetworkFromCentralNode(relationship.getOtherNode(node),searchDepth - 1,relationshipType,direction,includeBoundaryRelationships,nodeScanDepths);
  }
}
