{
  assertNotNull("actualRecord",actualRecord);
  assertNotNull("expectedRecord",expectedRecord);
  assertThat("getFirstNextRel",actualRecord.getFirstNextRel(),is(expectedRecord.getFirstNextRel()));
  assertThat("getFirstNode",actualRecord.getFirstNode(),is(expectedRecord.getFirstNode()));
  assertThat("getFirstPrevRel",actualRecord.getFirstPrevRel(),is(expectedRecord.getFirstPrevRel()));
  assertThat("getSecondNextRel",actualRecord.getSecondNextRel(),is(expectedRecord.getSecondNextRel()));
  assertThat("getSecondNode",actualRecord.getSecondNode(),is(expectedRecord.getSecondNode()));
  assertThat("getSecondPrevRel",actualRecord.getSecondPrevRel(),is(expectedRecord.getSecondPrevRel()));
  assertThat("getType",actualRecord.getType(),is(expectedRecord.getType()));
  assertThat("isFirstInFirstChain",actualRecord.isFirstInFirstChain(),is(expectedRecord.isFirstInFirstChain()));
  assertThat("isFirstInSecondChain",actualRecord.isFirstInSecondChain(),is(expectedRecord.isFirstInSecondChain()));
  assertThat("getId",actualRecord.getId(),is(expectedRecord.getId()));
  assertThat("getLongId",actualRecord.getLongId(),is(expectedRecord.getLongId()));
  assertThat("getNextProp",actualRecord.getNextProp(),is(expectedRecord.getNextProp()));
  assertThat("inUse",actualRecord.inUse(),is(expectedRecord.inUse()));
}
