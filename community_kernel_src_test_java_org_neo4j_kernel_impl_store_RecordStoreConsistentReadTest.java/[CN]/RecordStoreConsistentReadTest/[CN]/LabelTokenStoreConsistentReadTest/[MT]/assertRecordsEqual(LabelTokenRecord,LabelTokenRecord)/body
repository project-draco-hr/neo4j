{
  assertNotNull("actualRecord",actualRecord);
  assertNotNull("expectedRecord",expectedRecord);
  assertThat("getNameId",actualRecord.getNameId(),is(expectedRecord.getNameId()));
  assertThat("getId",actualRecord.getId(),is(expectedRecord.getId()));
  assertThat("getLongId",actualRecord.getId(),is(expectedRecord.getId()));
  assertThat("isLight",actualRecord.isLight(),is(expectedRecord.isLight()));
  Collection<DynamicRecord> actualNameRecords=actualRecord.getNameRecords();
  Collection<DynamicRecord> expectedNameRecords=expectedRecord.getNameRecords();
  assertThat("getNameRecords.size",actualNameRecords.size(),is(expectedNameRecords.size()));
  Iterator<DynamicRecord> actualNRs=actualNameRecords.iterator();
  Iterator<DynamicRecord> expectedNRs=expectedNameRecords.iterator();
  int i=0;
  while (actualNRs.hasNext() && expectedNRs.hasNext()) {
    DynamicRecord actualNameRecord=actualNRs.next();
    DynamicRecord expectedNameRecord=expectedNRs.next();
    assertThat("[" + i + "]getData",actualNameRecord.getData(),is(expectedNameRecord.getData()));
    assertThat("[" + i + "]getLength",actualNameRecord.getLength(),is(expectedNameRecord.getLength()));
    assertThat("[" + i + "]getNextBlock",actualNameRecord.getNextBlock(),is(expectedNameRecord.getNextBlock()));
    assertThat("[" + i + "]getType",actualNameRecord.getType(),is(expectedNameRecord.getType()));
    assertThat("[" + i + "]getId",actualNameRecord.getId(),is(expectedNameRecord.getId()));
    assertThat("[" + i + "]getLongId",actualNameRecord.getId(),is(expectedNameRecord.getId()));
    assertThat("[" + i + "]isStartRecord",actualNameRecord.isStartRecord(),is(expectedNameRecord.isStartRecord()));
    assertThat("[" + i + "]inUse",actualNameRecord.inUse(),is(expectedNameRecord.inUse()));
    i++;
  }
}
