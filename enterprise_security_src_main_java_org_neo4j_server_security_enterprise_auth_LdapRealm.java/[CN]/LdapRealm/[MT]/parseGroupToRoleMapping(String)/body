{
  Map<String,Collection<String>> map=new HashMap<>();
  if (groupToRoleMappingString != null) {
    for (    String groupAndRoles : groupToRoleMappingString.split(GROUP_DELIMITER)) {
      if (!groupAndRoles.isEmpty()) {
        Matcher matcher=keyValuePattern.matcher(groupAndRoles);
        if (!(matcher.find() && matcher.groupCount() == 6)) {
          String errorMessage=format("Failed to parse setting %s: wrong number of fields",SecuritySettings.ldap_authorization_group_to_role_mapping.name());
          throw new IllegalArgumentException(errorMessage);
        }
        String group=matcher.group(2) != null ? matcher.group(2) : matcher.group(3) != null ? matcher.group(3) : matcher.group(4) != null ? matcher.group(4) : matcher.group(5) != null ? matcher.group(5) : "";
        if (group.isEmpty()) {
          String errorMessage=format("Failed to parse setting %s: empty group name",SecuritySettings.ldap_authorization_group_to_role_mapping.name());
          throw new IllegalArgumentException(errorMessage);
        }
        Collection<String> roleList=new ArrayList<>();
        for (        String role : matcher.group(6).trim().split(ROLE_DELIMITER)) {
          if (!role.isEmpty()) {
            roleList.add(role);
          }
        }
        map.put(group.toLowerCase(),roleList);
      }
    }
  }
  return map;
}
