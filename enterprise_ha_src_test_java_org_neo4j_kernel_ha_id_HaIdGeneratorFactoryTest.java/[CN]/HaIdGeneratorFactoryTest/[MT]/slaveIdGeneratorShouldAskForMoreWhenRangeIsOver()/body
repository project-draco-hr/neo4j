{
  IdAllocation firstResult=new IdAllocation(new IdRange(new long[]{},42,123),42 + 123,0);
  IdAllocation secondResult=new IdAllocation(new IdRange(new long[]{},1042,223),1042 + 223,0);
  Response<IdAllocation> toReturn=mock(Response.class);
  when(toReturn.response()).thenReturn(firstResult,secondResult);
  when(master.allocateIds(Matchers.<IdType>any())).thenReturn(toReturn);
  IdGenerator gen=switchToSlave();
  long startAt=firstResult.getIdRange().getRangeStart();
  long forThatMany=firstResult.getIdRange().getRangeLength();
  for (long i=startAt; i < startAt + forThatMany; i++) {
    assertEquals(i,gen.nextId());
  }
  verify(master,times(1)).allocateIds(IdType.NODE);
  startAt=secondResult.getIdRange().getRangeStart();
  forThatMany=secondResult.getIdRange().getRangeLength();
  for (long i=startAt; i < startAt + forThatMany; i++) {
    assertEquals(i,gen.nextId());
  }
  verify(master,times(2)).allocateIds(IdType.NODE);
}
