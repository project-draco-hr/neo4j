{
  waitForSyncConnected();
  try {
    Map<Integer,Machine> result=new HashMap<Integer,Machine>();
    String root=getRoot();
    List<String> children=getZooKeeper().getChildren(root,false);
    for (    String child : children) {
      Pair<Integer,Integer> parsedChild=parseChild(child);
      if (parsedChild == null) {
        continue;
      }
      try {
        int id=parsedChild.first();
        int seq=parsedChild.other();
        long tx=readDataAsLong(root + "/" + child);
        if (!result.containsKey(id) || seq > result.get(id).getSequenceId()) {
          result.put(id,new Machine(id,seq,tx,getHaServer(id)));
        }
      }
 catch (      KeeperException inner) {
        if (inner.code() != KeeperException.Code.NONODE) {
          throw new ZooKeeperException("Unabe to get master.",inner);
        }
      }
    }
    return result;
  }
 catch (  KeeperException e) {
    throw new ZooKeeperException("Unable to get master",e);
  }
catch (  InterruptedException e) {
    Thread.interrupted();
    throw new ZooKeeperException("Interrupted.",e);
  }
}
