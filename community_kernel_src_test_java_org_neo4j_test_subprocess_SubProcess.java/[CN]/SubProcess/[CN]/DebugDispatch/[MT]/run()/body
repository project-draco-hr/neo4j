{
  for (; ; ) {
    final com.sun.jdi.event.EventSet events;
    try {
      events=queue.remove();
    }
 catch (    InterruptedException e) {
      return;
    }
    Integer exitCode=null;
    try {
      for (      com.sun.jdi.event.Event event : events) {
        if (event instanceof com.sun.jdi.event.MonitorContendedEnterEvent) {
          com.sun.jdi.event.MonitorContendedEnterEvent monitor=(com.sun.jdi.event.MonitorContendedEnterEvent)event;
          final com.sun.jdi.ThreadReference thread;
          try {
            thread=monitor.monitor().owningThread();
          }
 catch (          com.sun.jdi.IncompatibleThreadStateException e) {
            e.printStackTrace();
            continue;
          }
          if (thread != null && thread.isSuspended()) {
            DebuggerDeadlockCallback callback=suspended.get(thread);
            try {
              if (callback != null)               callback.deadlock(new DebuggedThread(this,thread));
            }
 catch (            DeadlockDetectedError deadlock) {
              @SuppressWarnings("hiding") Handler handler=this.handler;
              if (handler != null)               handler.kill(false);
            }
          }
        }
 else         if (event instanceof com.sun.jdi.event.LocatableEvent) {
          callback((com.sun.jdi.event.LocatableEvent)event);
        }
 else         if (event instanceof com.sun.jdi.event.ClassPrepareEvent) {
          setup(((com.sun.jdi.event.ClassPrepareEvent)event).referenceType());
        }
 else         if (event instanceof com.sun.jdi.event.VMDisconnectEvent || event instanceof com.sun.jdi.event.VMDeathEvent) {
          return;
        }
      }
    }
 catch (    KillSubProcess kill) {
      exitCode=kill.exitCode;
    }
 finally {
      if (exitCode != null) {
        events.virtualMachine().exit(exitCode);
      }
 else {
        events.resume();
      }
    }
  }
}
