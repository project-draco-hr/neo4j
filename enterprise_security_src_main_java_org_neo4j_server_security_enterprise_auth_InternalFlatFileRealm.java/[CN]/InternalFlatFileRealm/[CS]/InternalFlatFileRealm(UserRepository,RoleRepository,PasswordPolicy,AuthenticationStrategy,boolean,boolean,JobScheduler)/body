{
  super();
  this.userRepository=userRepository;
  this.roleRepository=roleRepository;
  this.passwordPolicy=passwordPolicy;
  this.authenticationStrategy=authenticationStrategy;
  this.authenticationEnabled=authenticationEnabled;
  this.authorizationEnabled=authorizationEnabled;
  this.jobScheduler=jobScheduler;
  setAuthenticationCachingEnabled(false);
  setAuthorizationCachingEnabled(false);
  setCredentialsMatcher(new AllowAllCredentialsMatcher());
  setRolePermissionResolver(new RolePermissionResolver(){
    @Override public Collection<Permission> resolvePermissionsInRole(    String roleString){
      SimpleRole role=roles.get(roleString);
      if (role != null) {
        return role.getPermissions();
      }
 else {
        return Collections.emptyList();
      }
    }
  }
);
  roles=new PredefinedRolesBuilder().buildRoles();
}
