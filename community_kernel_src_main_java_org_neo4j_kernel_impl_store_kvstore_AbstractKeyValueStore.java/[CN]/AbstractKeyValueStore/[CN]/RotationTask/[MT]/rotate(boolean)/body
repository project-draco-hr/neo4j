{
  final long version=rotation.rotationVersion();
  ProgressiveState<Key> next=rotation.rotate(force,rotationStrategy,new Consumer<Headers.Builder>(){
    @Override public void accept(    Headers.Builder value){
      updateHeaders(value,version);
    }
  }
);
  try (LockWrapper ignored=writeLock(updateLock)){
    state=next;
  }
  finally {
    rotation.close();
  }
  return version;
}
