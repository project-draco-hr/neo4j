{
  HashMap<PatternNode,PatternElement> filteredElements=new HashMap<PatternNode,PatternElement>();
  HashMap<PatternRelationship,Relationship> relElements=new HashMap<PatternRelationship,Relationship>();
  boolean patternValid=true;
  for (  PatternElement element : foundElements) {
    PatternElement other=filteredElements.get(element.getPatternNode());
    if (other != null && !other.getNode().equals(element.getNode())) {
      patternValid=false;
      break;
    }
    filteredElements.put(element.getPatternNode(),element);
    relElements.put(element.getFromPatternRelationship(),element.getFromRelationship());
  }
  PatternMatch patternMatch=new PatternMatch(filteredElements,relElements);
  foundElements.pop();
  if (patternValid) {
    return patternMatch;
  }
  return traverseFromCallStack();
}
