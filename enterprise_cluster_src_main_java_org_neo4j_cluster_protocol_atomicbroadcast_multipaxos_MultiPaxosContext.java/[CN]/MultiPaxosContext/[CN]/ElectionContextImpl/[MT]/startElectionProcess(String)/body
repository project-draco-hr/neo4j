{
  clusterContext.getLogger(getClass()).info("Doing elections for role " + role);
  elections.put(role,new Election(new WinnerStrategy(){
    @Override public org.neo4j.cluster.InstanceId pickWinner(    Collection<Vote> voteList){
      List<Vote> filteredVoteList=removeBlankVotes(voteList);
      Collections.sort(filteredVoteList);
      Collections.reverse(filteredVoteList);
      clusterContext.getLogger(getClass()).debug("Election started with " + voteList + ", ended up with "+ filteredVoteList);
      for (      Vote vote : filteredVoteList) {
        return vote.getSuggestedNode();
      }
      return null;
    }
  }
));
}
