{
  List<Vote> filteredVoteList=removeBlankVotes(voteList);
  Collections.sort(filteredVoteList);
  Collections.reverse(filteredVoteList);
  clusterContext.getLogger(getClass()).debug("Election started with " + voteList + ", ended up with "+ filteredVoteList+ " where "+ biasedNode+ " is biased for "+ (positiveSuggestion ? "promotion" : "demotion"));
  for (  Vote vote : filteredVoteList) {
    if (vote.getSuggestedNode().equals(biasedNode) == positiveSuggestion) {
      return vote.getSuggestedNode();
    }
  }
  return null;
}
