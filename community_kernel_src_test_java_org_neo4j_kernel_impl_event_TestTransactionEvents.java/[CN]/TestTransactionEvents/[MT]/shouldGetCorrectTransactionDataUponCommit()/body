{
  ExpectedTransactionData expectedData=new ExpectedTransactionData();
  VerifyingTransactionEventHandler handler=new VerifyingTransactionEventHandler(expectedData);
  GraphDatabaseService db=dbRule.getGraphDatabaseService();
  db.registerTransactionEventHandler(handler);
  Node node1=null, node2, node3=null;
  Relationship rel1=null, rel2=null;
  try {
    try (Transaction tx=db.beginTx()){
      node1=db.createNode();
      expectedData.expectedCreatedNodes.add(node1);
      node2=db.createNode();
      expectedData.expectedCreatedNodes.add(node2);
      rel1=node1.createRelationshipTo(node2,RelTypes.TXEVENT);
      expectedData.expectedCreatedRelationships.add(rel1);
      node1.setProperty("name","Mattias");
      expectedData.assignedProperty(node1,"name","Mattias",null);
      node1.setProperty("last name","Persson");
      expectedData.assignedProperty(node1,"last name","Persson",null);
      node1.setProperty("counter",10);
      expectedData.assignedProperty(node1,"counter",10,null);
      rel1.setProperty("description","A description");
      expectedData.assignedProperty(rel1,"description","A description",null);
      rel1.setProperty("number",4.5D);
      expectedData.assignedProperty(rel1,"number",4.5D,null);
      node3=db.createNode();
      expectedData.expectedCreatedNodes.add(node3);
      rel2=node3.createRelationshipTo(node2,RelTypes.TXEVENT);
      expectedData.expectedCreatedRelationships.add(rel2);
      node3.setProperty("name","Node 3");
      expectedData.assignedProperty(node3,"name","Node 3",null);
      tx.success();
    }
     assertTrue("Should have been invoked",handler.hasBeenCalled());
    Throwable failure=handler.failure();
    if (failure != null) {
      throw new RuntimeException(failure);
    }
  }
  finally {
    db.unregisterTransactionEventHandler(handler);
  }
  expectedData=new ExpectedTransactionData();
  handler=new VerifyingTransactionEventHandler(expectedData);
  db.registerTransactionEventHandler(handler);
  try {
    try (Transaction tx=db.beginTx()){
      Node newNode=db.createNode();
      expectedData.expectedCreatedNodes.add(newNode);
      Node tempNode=db.createNode();
      Relationship tempRel=tempNode.createRelationshipTo(node1,RelTypes.TXEVENT);
      tempNode.setProperty("something","Some value");
      tempRel.setProperty("someproperty",101010);
      tempNode.removeProperty("nothing");
      node3.setProperty("test","hello");
      node3.setProperty("name","No name");
      node3.delete();
      expectedData.expectedDeletedNodes.add(node3);
      expectedData.removedProperty(node3,"name",null,"Node 3");
      node1.setProperty("new name","A name");
      node1.setProperty("new name","A better name");
      expectedData.assignedProperty(node1,"new name","A better name",null);
      node1.setProperty("name","Nothing");
      node1.setProperty("name","Mattias Persson");
      expectedData.assignedProperty(node1,"name","Mattias Persson","Mattias");
      node1.removeProperty("counter");
      expectedData.removedProperty(node1,"counter",null,10);
      node1.removeProperty("last name");
      node1.setProperty("last name","Hi");
      expectedData.assignedProperty(node1,"last name","Hi","Persson");
      rel2.delete();
      expectedData.expectedDeletedRelationships.add(rel2);
      rel1.removeProperty("number");
      expectedData.removedProperty(rel1,"number",null,4.5D);
      rel1.setProperty("description","Ignored");
      rel1.setProperty("description","New");
      expectedData.assignedProperty(rel1,"description","New","A description");
      tempRel.delete();
      tempNode.delete();
      tx.success();
    }
     assertTrue("Should have been invoked",handler.hasBeenCalled());
    Throwable failure=handler.failure();
    if (failure != null) {
      throw new RuntimeException(failure);
    }
  }
  finally {
    db.unregisterTransactionEventHandler(handler);
  }
}
