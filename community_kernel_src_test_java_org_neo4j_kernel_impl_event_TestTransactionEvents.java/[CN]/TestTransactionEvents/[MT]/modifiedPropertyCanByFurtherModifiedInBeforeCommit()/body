{
  GraphDatabaseService db=dbRule.getGraphDatabaseService();
  final String key="key";
  final Object value1="the old value";
  final Object value2="the new value";
  final Node node;
  try (Transaction tx=db.beginTx()){
    node=db.createNode();
    node.setProperty(key,"initial value");
    tx.success();
  }
   TransactionEventHandler<Void> handler=new TransactionEventHandler.Adapter<Void>(){
    @Override public Void beforeCommit(    TransactionData data) throws Exception {
      Node modifiedNode=data.assignedNodeProperties().iterator().next().entity();
      assertEquals(node,modifiedNode);
      modifiedNode.setProperty(key,value2);
      return null;
    }
  }
;
  db.registerTransactionEventHandler(handler);
  try (Transaction tx=db.beginTx()){
    node.setProperty(key,value1);
    tx.success();
  }
   assertThat(node,inTx(db,hasProperty(key).withValue(value2)));
  db.unregisterTransactionEventHandler(handler);
}
