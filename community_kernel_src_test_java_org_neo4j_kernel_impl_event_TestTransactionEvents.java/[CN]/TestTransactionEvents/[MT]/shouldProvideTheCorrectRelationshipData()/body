{
  GraphDatabaseService db=dbRule.getGraphDatabaseAPI();
  try (Transaction tx=db.beginTx()){
    db.createNode().createRelationshipTo(db.createNode(),withName("TYPE"));
  }
   RelationshipType livesIn=withName("LIVES_IN");
  long relId;
  try (Transaction tx=db.beginTx()){
    Node person=db.createNode(label("Person"));
    Node city=db.createNode(label("City"));
    Relationship rel=person.createRelationshipTo(city,livesIn);
    rel.setProperty("since",2009);
    relId=rel.getId();
    tx.success();
  }
   final Set<String> changedRelationships=new HashSet<>();
  db.registerTransactionEventHandler(new TransactionEventHandler.Adapter<Void>(){
    @Override public Void beforeCommit(    TransactionData data) throws Exception {
      for (      PropertyEntry<Relationship> entry : data.assignedRelationshipProperties()) {
        changedRelationships.add(entry.entity().getType().name());
      }
      return null;
    }
  }
);
  try (Transaction tx=db.beginTx()){
    Relationship rel=db.getRelationshipById(relId);
    rel.setProperty("since",2010);
    tx.success();
  }
   assertEquals(1,changedRelationships.size());
  assertTrue(livesIn + " not in " + changedRelationships.toString(),changedRelationships.contains(livesIn.name()));
}
