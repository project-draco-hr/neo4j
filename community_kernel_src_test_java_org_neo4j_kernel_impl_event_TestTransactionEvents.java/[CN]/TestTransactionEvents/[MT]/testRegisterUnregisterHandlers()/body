{
  commit();
  Object value1=10;
  Object value2=3.5D;
  DummyTransactionEventHandler<Integer> handler1=new DummyTransactionEventHandler<Integer>((Integer)value1);
  DummyTransactionEventHandler<Double> handler2=new DummyTransactionEventHandler<Double>((Double)value2);
  try {
    getGraphDb().unregisterTransactionEventHandler(handler1);
    fail("Shouldn't be able to do unregister on a " + "unregistered handler");
  }
 catch (  IllegalStateException e) {
  }
  assertTrue(handler1 == getGraphDb().registerTransactionEventHandler(handler1));
  assertTrue(handler1 == getGraphDb().registerTransactionEventHandler(handler1));
  assertTrue(handler1 == getGraphDb().unregisterTransactionEventHandler(handler1));
  try {
    getGraphDb().unregisterTransactionEventHandler(handler1);
    fail("Shouldn't be able to do unregister on a " + "unregistered handler");
  }
 catch (  IllegalStateException e) {
  }
  assertTrue(handler1 == getGraphDb().registerTransactionEventHandler(handler1));
  assertTrue(handler2 == getGraphDb().registerTransactionEventHandler(handler2));
  assertTrue(handler1 == getGraphDb().unregisterTransactionEventHandler(handler1));
  assertTrue(handler2 == getGraphDb().unregisterTransactionEventHandler(handler2));
  getGraphDb().registerTransactionEventHandler(handler1);
  newTransaction();
  getGraphDb().createNode().delete();
  commit();
  assertNotNull(handler1.beforeCommit);
  assertNotNull(handler1.afterCommit);
  assertNull(handler1.afterRollback);
  assertEquals(value1,handler1.receivedState);
  assertNotNull(handler1.receivedTransactionData);
  getGraphDb().unregisterTransactionEventHandler(handler1);
}
