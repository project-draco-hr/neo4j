{
  GraphDatabaseService db=dbRule.getGraphDatabaseService();
  Label label=label("Label");
  IndexDefinition index;
  try (Transaction tx=db.beginTx()){
    index=db.schema().indexFor(label).on("indexed").create();
    tx.success();
  }
   db.registerTransactionEventHandler(new TransactionEventHandler.Adapter<Object>(){
    @Override public Object beforeCommit(    TransactionData data) throws Exception {
      Iterator<Node> nodes=data.createdNodes().iterator();
      if (nodes.hasNext()) {
        Node node=nodes.next();
        node.setProperty("indexed","value");
      }
      return null;
    }
  }
);
  try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(10,TimeUnit.SECONDS);
    Node node=db.createNode(label);
    node.setProperty("random",42);
    tx.success();
  }
   try (Transaction ignore=db.beginTx()){
    Node node=db.findNode(label,"indexed","value");
    assertThat(node.getProperty("random"),is((Object)42));
  }
 }
