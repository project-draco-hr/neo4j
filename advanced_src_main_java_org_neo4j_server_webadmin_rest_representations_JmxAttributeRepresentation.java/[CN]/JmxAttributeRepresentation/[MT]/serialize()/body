{
  Map<String,Object> data=new HashMap<String,Object>();
  data.put("name",attrInfo.getName());
  data.put("description",attrInfo.getDescription());
  data.put("type",attrInfo.getType());
  data.put("isReadable",attrInfo.isReadable() ? "true" : "false");
  data.put("isWriteable",attrInfo.isWritable() ? "true" : "false");
  data.put("isIs",attrInfo.isIs() ? "true" : "false");
  try {
    Object value=jmxServer.getAttribute(objectName,attrInfo.getName());
    if (value == null) {
      data.put("value",null);
    }
 else     if (value.getClass().isArray()) {
      ArrayList<Object> values=new ArrayList<Object>();
      for (      Object subValue : values) {
        if (subValue instanceof CompositeData) {
          values.add((new JmxCompositeDataRepresentation((CompositeData)subValue)).serialize());
        }
 else {
          values.add(subValue.toString());
        }
      }
      data.put("value",values);
    }
 else {
      data.put("value",value.toString());
    }
  }
 catch (  AttributeNotFoundException e) {
    e.printStackTrace();
    data.put("value","N/A");
  }
catch (  InstanceNotFoundException e) {
    e.printStackTrace();
    data.put("value","N/A");
  }
catch (  MBeanException e) {
    e.printStackTrace();
    data.put("value","N/A");
  }
catch (  ReflectionException e) {
    e.printStackTrace();
    data.put("value","N/A");
  }
catch (  RuntimeMBeanException e) {
    data.put("value","N/A");
  }
catch (  ClassCastException e) {
    e.printStackTrace();
    data.put("value","N/A");
  }
  return data;
}
