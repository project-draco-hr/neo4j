{
  IdGeneratorFactory idGeneratorFactory=mock(IdGeneratorFactory.class);
  IdGenerator idGenerator=mock(IdGenerator.class);
  when(idGenerator.nextId()).thenReturn(1L);
  StorageEngine storageEngine=mockedStorageEngine();
  when(dependencies.resolveDependency(StorageEngine.class)).thenReturn(storageEngine);
  when(idGeneratorFactory.get(any(IdType.class))).thenReturn(idGenerator);
  Replicator replicator=new DropAllTheThingsReplicator();
  when(dependencies.resolveDependency(TransactionRepresentationCommitProcess.class)).thenReturn(mock(TransactionRepresentationCommitProcess.class));
  TokenRegistry<Token> registry=new TokenRegistry<>("Label");
  ReplicatedTokenHolder<Token> tokenHolder=new ReplicatedLabelTokenHolder(registry,replicator,idGeneratorFactory,dependencies,TIMEOUT_MILLIS);
  try {
    tokenHolder.getOrCreateId("Person");
    fail("Token creation attempt should have timed out");
  }
 catch (  TransactionFailureException ex) {
  }
}
