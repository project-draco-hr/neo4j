{
  File workingDirectory=new File("target/" + StoreUpgraderInterruptionTestIT.class.getSimpleName());
  MigrationTestUtils.prepareSampleLegacyDatabase(fileSystem,workingDirectory);
  StoreMigrator failingStoreMigrator=new StoreMigrator(new SilentMigrationProgressMonitor()){
    @Override public void migrate(    LegacyStore legacyStore,    NeoStore neoStore) throws IOException {
      super.migrate(legacyStore,neoStore);
      throw new RuntimeException("This upgrade is failing");
    }
  }
;
  assertTrue(allStoreFilesHaveVersion(fileSystem,workingDirectory,LEGACY_VERSION));
  try {
    newUpgrader(failingStoreMigrator,new DatabaseFiles(fileSystem)).attemptUpgrade(new File(workingDirectory,NeoStore.DEFAULT_NAME));
    fail("Should throw exception");
  }
 catch (  RuntimeException e) {
    assertEquals("This upgrade is failing",e.getMessage());
  }
  assertTrue(allStoreFilesHaveVersion(fileSystem,workingDirectory,LEGACY_VERSION));
  newUpgrader(new StoreMigrator(new SilentMigrationProgressMonitor()),new DatabaseFiles(fileSystem)).attemptUpgrade(new File(workingDirectory,NeoStore.DEFAULT_NAME));
  assertTrue(allStoreFilesHaveVersion(fileSystem,workingDirectory,ALL_STORES_VERSION));
}
