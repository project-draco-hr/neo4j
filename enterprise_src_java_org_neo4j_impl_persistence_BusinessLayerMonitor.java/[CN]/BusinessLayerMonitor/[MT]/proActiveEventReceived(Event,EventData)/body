{
  boolean success=false;
  if (event == Event.DATA_SOURCE_ADDED) {
    PersistenceSourceDispatcher.getDispatcher().persistenceSourceAdded((PersistenceSource)data.getData());
    return true;
  }
  try {
    this.performPersistenceOperationForEvent(event,data);
    success=true;
  }
 catch (  IllegalArgumentException iae) {
    log.log(Level.SEVERE,"Unable to persist the operation " + "represented by " + event + " with data '"+ data+ "' due to bad arguments.",iae);
  }
catch (  UnsupportedPersistenceTypeException upte) {
    log.log(Level.SEVERE,"Unable to persist the operation " + "represented by " + event + " with data '"+ data+ "' because a component reported that the persistence type was"+ " unsupported",upte);
  }
catch (  ResourceAcquisitionFailedException rafe) {
    log.log(Level.SEVERE,"Unable to persist the operation " + "represented by " + event + " with data '"+ data+ "' because we were unable to acquire a resource connection "+ "for the operation",rafe);
  }
catch (  NotInTransactionException nite) {
    log.log(Level.WARNING,"Unable to persist the operation " + "represented by " + event + " with data '"+ data+ "' because the current thread is not participating in a "+ "transaction.",nite);
  }
catch (  PersistenceUpdateFailedException pufe) {
    log.log(Level.SEVERE,"Unable to persist the operation " + "represented by " + event + " with data '"+ data+ "' because something went wrong when attempting to update "+ "the persistence source.",pufe);
  }
catch (  Throwable t) {
    log.log(Level.SEVERE,"Caught an exception while attempting to " + "persist " + event + " with data '"+ data+ ".' "+ "Operation not persisted.",t);
  }
  return success;
}
