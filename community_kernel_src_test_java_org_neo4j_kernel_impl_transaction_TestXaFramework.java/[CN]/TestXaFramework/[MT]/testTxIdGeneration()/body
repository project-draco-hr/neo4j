{
  DummyXaConnection xaC1=null;
  try {
    Map<String,String> config=new HashMap<String,String>();
    config.put("store_dir","target/var");
    FileSystemAbstraction fileSystem=new DefaultFileSystemAbstraction();
    KernelHealth kernelHealth=mock(KernelHealth.class);
    xaDsMgr.registerDataSource(new DummyXaDataSource(UTF8.encode("DDDDDD"),"dummy_datasource1",new XaFactory(new Config(config,GraphDatabaseSettings.class),TxIdGenerator.DEFAULT,(AbstractTransactionManager)tm,fileSystem,new Monitors(),new DevNullLoggingService(),RecoveryVerifier.ALWAYS_VALID,LogPruneStrategies.NO_PRUNING,kernelHealth),stateFactory,resourceFile()));
    DummyXaDataSource xaDs1=(DummyXaDataSource)xaDsMgr.getXaDataSource("dummy_datasource1");
    xaC1=(DummyXaConnection)xaDs1.getXaConnection();
    tm.begin();
    xaC1.enlistWithTx(tm);
    int currentTxId=xaC1.getTransactionId();
    xaC1.doStuff1();
    xaC1.delistFromTx(tm);
    tm.commit();
    tm.begin();
    Node node=getGraphDb().createNode();
    xaC1.enlistWithTx(tm);
    assertEquals(++currentTxId,xaC1.getTransactionId());
    xaC1.doStuff1();
    xaC1.delistFromTx(tm);
    tm.commit();
    tm.begin();
    node=getGraphDb().getNodeById(node.getId());
    xaC1.enlistWithTx(tm);
    assertEquals(++currentTxId,xaC1.getTransactionId());
    xaC1.doStuff2();
    xaC1.delistFromTx(tm);
    node.delete();
    tm.commit();
  }
  finally {
    xaDsMgr.unregisterDataSource("dummy_datasource1");
    if (xaC1 != null) {
      xaC1.destroy();
    }
  }
  deleteAllResourceFiles();
}
