{
  Node joe=data.get().get("Joe");
  gen.get().addSnippet("graph",createGraphViz("Traversal Example Graph",graphdb(),gen.get().getTitle()));
  String output="";
  for (  Path position : Traversal.description().depthFirst().relationships(Rels.KNOWS).relationships(Rels.LIKES,Direction.INCOMING).evaluator(Evaluators.toDepth(5)).traverse(joe)) {
    output+=position + "\n";
  }
  System.out.println(output);
  gen.get().addSnippet("knowslikesoutput",createOutputSnippet(output));
  final TraversalDescription FRIENDS_TRAVERSAL=Traversal.description().depthFirst().relationships(Rels.KNOWS).uniqueness(Uniqueness.RELATIONSHIP_GLOBAL);
  output="";
  for (  Path path : FRIENDS_TRAVERSAL.traverse(joe)) {
    output+=path + "\n";
  }
  System.out.println(output);
  gen.get().addSnippet("baseoutput",createOutputSnippet(output));
  output="";
  for (  Path path : FRIENDS_TRAVERSAL.evaluator(Evaluators.toDepth(3)).traverse(joe)) {
    output+=path + "\n";
  }
  System.out.println(output);
  gen.get().addSnippet("output3",createOutputSnippet(output));
  output="";
  for (  Path path : FRIENDS_TRAVERSAL.evaluator(Evaluators.fromDepth(2)).evaluator(Evaluators.toDepth(4)).traverse(joe)) {
    output+=path + "\n";
  }
  System.out.println(output);
  gen.get().addSnippet("output4",createOutputSnippet(output));
  output="";
  for (  Node node : FRIENDS_TRAVERSAL.traverse(joe).nodes()) {
    output+=node.getProperty("name") + "\n";
  }
  System.out.println(output);
  gen.get().addSnippet("nodeoutput",createOutputSnippet(output));
  output="";
  for (  Relationship relationship : FRIENDS_TRAVERSAL.traverse(joe).relationships()) {
    output+=relationship.getType() + "\n";
  }
  System.out.println(output);
  gen.get().addSnippet("relationshipoutput",createOutputSnippet(output));
  gen.get().addSourceSnippets(this.getClass(),"knowslikestraverser","sourceRels","basetraverser","depth3","depth4","nodes","relationships");
  gen.get().addGithubLink("github",this.getClass(),"neo4j/community","embedded-examples");
}
