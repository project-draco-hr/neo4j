{
  String longString="AlalalalalongAlalalalalongAlalalalalongAlalalalalongAlalalalalongAlalalalalongAlalalalalongAlalalalalong";
  Object[] properties={longString,createNew(String.class),createNew(long.class),createNew(int.class),createNew(byte.class),createNew(short.class),createNew(boolean.class),createNew(char.class),createNew(float.class),createNew(double.class),array(0,String.class),array(0,long.class),array(0,int.class),array(0,byte.class),array(0,short.class),array(0,boolean.class),array(0,char.class),array(0,float.class),array(0,double.class),array(1,String.class),array(1,long.class),array(1,int.class),array(1,byte.class),array(1,short.class),array(1,boolean.class),array(1,char.class),array(1,float.class),array(1,double.class),array(256,String.class),array(256,long.class),array(256,int.class),array(256,byte.class),array(256,short.class),array(256,boolean.class),array(256,char.class),array(256,float.class),array(256,double.class)};
  int propKey=disk.propertyKeyGetOrCreateForName("prop");
  StorageStatement statement=state.getStoreStatement();
  for (  Object value : properties) {
    long nodeId=createLabeledNode(db,singletonMap("prop",value),label1).getId();
    try (Cursor<NodeItem> node=statement.acquireSingleNodeCursor(nodeId)){
      node.next();
      try (Cursor<PropertyItem> props=node.get().property(propKey)){
        if (props.next()) {
          Object propVal=props.get().value();
          assertTrue(propVal + ".valueEquals(" + value+ ")",Property.property(propKey,propVal).valueEquals(value));
        }
 else {
          fail();
        }
      }
     }
   }
}
