{
  clientA.acquireShared(NODE,1L);
  clientB.acquireShared(NODE,1L);
  LockIdentityExplorer sharedLockExplorer=new LockIdentityExplorer(NODE,1L);
  locks.accept(sharedLockExplorer);
  Future<Object> exclusiveLockFuture=acquireExclusive(clientB,NODE,1L).callAndAssertWaiting();
  clientA.releaseShared(NODE,1L);
  assertNotWaiting(clientB,exclusiveLockFuture);
  clientB.releaseExclusive(NODE,1L);
  LockIdentityExplorer releasedLockExplorer=new LockIdentityExplorer(NODE,1L);
  locks.accept(releasedLockExplorer);
  assertEquals(sharedLockExplorer.getLockIdentityHashCode(),releasedLockExplorer.getLockIdentityHashCode());
}
