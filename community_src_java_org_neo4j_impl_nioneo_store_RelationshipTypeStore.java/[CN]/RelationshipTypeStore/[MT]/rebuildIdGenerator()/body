{
  logger.info("Rebuilding id generator for[" + getStorageFileName() + "] ...");
  closeIdGenerator();
  File file=new File(getStorageFileName() + ".id");
  if (file.exists()) {
    file.delete();
  }
  IdGenerator.createGenerator(getStorageFileName() + ".id");
  openIdGenerator();
  FileChannel fileChannel=getFileChannel();
  long fileSize=fileChannel.size();
  int recordSize=getRecordSize();
  ByteBuffer byteBuffer=ByteBuffer.wrap(new byte[recordSize]);
  int highId=-1;
  for (int i=0; i * recordSize < fileSize; i++) {
    fileChannel.read(byteBuffer,i * recordSize);
    byteBuffer.flip();
    byte inUse=byteBuffer.get();
    byteBuffer.flip();
    if (inUse != Record.IN_USE.byteValue()) {
      byteBuffer.clear();
      byteBuffer.put(Record.IN_USE.byteValue()).putInt(Record.RESERVED.intValue());
      byteBuffer.flip();
      fileChannel.write(byteBuffer,i * recordSize);
      byteBuffer.clear();
    }
 else {
      highId=i;
    }
    nextId();
  }
  highId++;
  setHighId(highId);
  fileChannel.truncate(highId * recordSize);
  logger.info("[" + getStorageFileName() + "] high id="+ getHighId());
  closeIdGenerator();
  openIdGenerator();
}
