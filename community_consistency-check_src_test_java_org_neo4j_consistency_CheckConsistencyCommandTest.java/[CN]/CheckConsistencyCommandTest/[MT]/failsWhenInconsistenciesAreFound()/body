{
  ConsistencyCheckService consistencyCheckService=mock(ConsistencyCheckService.class);
  Path homeDir=testDir.directory("home").toPath();
  OutsideWorld outsideWorld=mock(OutsideWorld.class);
  CheckConsistencyCommand checkConsistencyCommand=new CheckConsistencyCommand(homeDir,testDir.directory("conf").toPath(),outsideWorld,consistencyCheckService);
  File databasePath=new File(homeDir.toFile(),"data/databases/mydb");
  when(consistencyCheckService.runFullConsistencyCheck(eq(databasePath),any(Config.class),any(ProgressMonitorFactory.class),any(LogProvider.class),any(FileSystemAbstraction.class),eq(true))).thenReturn(ConsistencyCheckService.Result.FAILURE);
  when(consistencyCheckService.chooseReportPath(any(),any())).thenReturn(testDir.directory("report file"));
  try {
    checkConsistencyCommand.execute(new String[]{"--database=mydb","--verbose"});
  }
 catch (  Exception e) {
    assertEquals(CommandFailed.class,e.getClass());
  }
}
