{
  AggregatedReservation aggregatedReservation=new AggregatedReservation(3);
  Reservation aggregate1=mock(Reservation.class);
  Reservation aggregate2=mock(Reservation.class);
  IllegalStateException exception=new IllegalStateException();
  doThrow(exception).when(aggregate2).release();
  Reservation aggregate3=mock(Reservation.class);
  aggregatedReservation.add(aggregate1);
  aggregatedReservation.add(aggregate2);
  aggregatedReservation.add(aggregate3);
  try {
    aggregatedReservation.release();
    fail("Should have thrown " + IllegalStateException.class.getSimpleName());
  }
 catch (  IllegalStateException e) {
    assertSame(exception,e);
  }
  verify(aggregate1).release();
  verify(aggregate2).release();
  verify(aggregate3).release();
}
