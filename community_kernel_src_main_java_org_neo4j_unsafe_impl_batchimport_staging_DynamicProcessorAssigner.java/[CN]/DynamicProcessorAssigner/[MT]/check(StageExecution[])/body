{
  if (!firstCheck) {
    firstCheck=true;
    return;
  }
  int permits=maxWorkers - countActiveProcessors(executions);
  if (permits <= 0) {
    return;
  }
  for (  StageExecution execution : executions) {
    if (execution.stillExecuting()) {
      if (permits > 0) {
        permits-=assignProcessorsToPotentialBottleNeck(execution,permits);
      }
      if (removeProcessorFromPotentialIdleStep(execution)) {
        permits++;
      }
    }
  }
}
