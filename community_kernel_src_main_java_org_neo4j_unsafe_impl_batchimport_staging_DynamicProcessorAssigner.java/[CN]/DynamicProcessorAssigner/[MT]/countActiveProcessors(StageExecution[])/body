{
  float processors=0;
  for (  StageExecution execution : executions) {
    if (execution.stillExecuting()) {
      long highestAverage=avg(execution.stepsOrderedBy(Keys.avg_processing_time,false).iterator().next().first());
      for (      Step<?> step : execution.steps()) {
        long avg=avg(step);
        float factor=(float)avg / (float)highestAverage;
        processors+=factor * step.processors(0);
      }
    }
  }
  return Math.round(processors);
}
