{
  Pair<Step<?>,Float> fastest=execution.stepsOrderedBy(Keys.avg_processing_time,true).iterator().next();
  if (fastest.other().floatValue() <= 0.5f) {
    Step<?> fastestStep=fastest.first();
    long doneBatches=batches(fastestStep);
    if (batchesPassedSinceLastChange(fastestStep,doneBatches) >= config.movingAverageSize()) {
      if (fastestStep.decrementNumberOfProcessors()) {
        lastChangedProcessors.put(fastestStep,doneBatches);
        return true;
      }
    }
  }
  return false;
}
