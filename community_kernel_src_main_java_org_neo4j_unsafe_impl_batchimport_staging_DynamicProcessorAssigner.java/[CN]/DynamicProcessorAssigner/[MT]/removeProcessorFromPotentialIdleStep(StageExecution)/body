{
  for (  Pair<Step<?>,Float> fast : execution.stepsOrderedBy(Keys.avg_processing_time,true)) {
    float threshold=1f - (1f / fast.first().numberOfProcessors());
    if (fast.other() < threshold) {
      Step<?> fastestStep=fast.first();
      long doneBatches=batches(fastestStep);
      if (batchesPassedSinceLastChange(fastestStep,doneBatches) >= config.movingAverageSize()) {
        if (fastestStep.decrementNumberOfProcessors()) {
          lastChangedProcessors.put(fastestStep,doneBatches);
          return true;
        }
      }
    }
  }
  return false;
}
