{
  PlatformModule platform=createPlatform(storeDir,params,dependencies,graphDatabaseFacade,operationalMode);
  EditionModule edition=createEdition(platform);
  final DataSourceModule dataSource=createDataSource(dependencies,platform,edition);
  graphDatabaseFacade.init(platform,edition,dataSource);
  Throwable error=null;
  Logger msgLog=platform.logging.getInternalLog(getClass()).infoLogger();
  try {
    enableAvailabilityLogging(platform.availabilityGuard,msgLog);
    platform.life.start();
  }
 catch (  final Throwable throwable) {
    error=new RuntimeException("Error starting " + getClass().getName() + ", "+ platform.storeDir,throwable);
  }
 finally {
    if (error != null) {
      try {
        graphDatabaseFacade.shutdown();
      }
 catch (      Throwable shutdownError) {
        error=Exceptions.withSuppressed(shutdownError,error);
      }
    }
  }
  if (error != null) {
    msgLog.log("Failed to start database",error);
    throw Exceptions.launderedException(error);
  }
  return graphDatabaseFacade;
}
