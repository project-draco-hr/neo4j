{
  graphDb=new TestGraphDatabaseFactory().newImpermanentDatabaseBuilder().setConfig(GraphDatabaseSettings.cache_type,WeakCacheProvider.NAME).newGraphDatabase();
  try (Transaction tx=graphDb.beginTx()){
    IndexManager index=graphDb.index();
    Index<Node> actors=index.forNodes("actors");
    Index<Node> movies=index.forNodes("movies");
    RelationshipIndex roles=index.forRelationships("roles");
    Node reeves=graphDb.createNode();
    reeves.setProperty("name","Keanu Reeves");
    actors.add(reeves,"name",reeves.getProperty("name"));
    Node bellucci=graphDb.createNode();
    bellucci.setProperty("name","Monica Bellucci");
    actors.add(bellucci,"name",bellucci.getProperty("name"));
    actors.add(bellucci,"name","La Bellucci");
    Node theMatrix=graphDb.createNode();
    theMatrix.setProperty("title","The Matrix");
    theMatrix.setProperty("year",1999);
    movies.add(theMatrix,"title",theMatrix.getProperty("title"));
    movies.add(theMatrix,"year",theMatrix.getProperty("year"));
    Node theMatrixReloaded=graphDb.createNode();
    theMatrixReloaded.setProperty("title","The Matrix Reloaded");
    theMatrixReloaded.setProperty("year",2003);
    movies.add(theMatrixReloaded,"title",theMatrixReloaded.getProperty("title"));
    movies.add(theMatrixReloaded,"year",2003);
    Node malena=graphDb.createNode();
    malena.setProperty("title","Mal??na");
    malena.setProperty("year",2000);
    movies.add(malena,"title",malena.getProperty("title"));
    movies.add(malena,"year",malena.getProperty("year"));
    DynamicRelationshipType ACTS_IN=DynamicRelationshipType.withName("ACTS_IN");
    Relationship role1=reeves.createRelationshipTo(theMatrix,ACTS_IN);
    role1.setProperty("name","Neo");
    roles.add(role1,"name",role1.getProperty("name"));
    Relationship role2=reeves.createRelationshipTo(theMatrixReloaded,ACTS_IN);
    role2.setProperty("name","Neo");
    roles.add(role2,"name",role2.getProperty("name"));
    Relationship role3=bellucci.createRelationshipTo(theMatrixReloaded,ACTS_IN);
    role3.setProperty("name","Persephone");
    roles.add(role3,"name",role3.getProperty("name"));
    Relationship role4=bellucci.createRelationshipTo(malena,ACTS_IN);
    role4.setProperty("name","Mal??na Scordia");
    roles.add(role4,"name",role4.getProperty("name"));
    tx.success();
  }
   try (Transaction tx=graphDb.beginTx()){
    String title="Movie and Actor Graph";
    try (PrintWriter pw=AsciiDocGenerator.getPrintWriter("target/docs/dev",title)){
      pw.println(AsciidocHelper.createGraphVizDeletingReferenceNode(title,graphDb,"initial"));
      pw.flush();
    }
   }
 }
