{
  if (remove == null) {
    if (src == null) {
      return add;
    }
    if (add != null) {
      IntArray newArray=new IntArray(add.length() + src.length());
      newArray.addAll(src);
      newArray.addAll(add);
      return newArray;
    }
    return src;
  }
 else {
    if (src == null && add == null) {
      return null;
    }
    int newLength=0;
    if (add != null) {
      newLength+=add.length();
    }
    if (src != null) {
      newLength+=src.length();
    }
    IntArray newArray=new IntArray(newLength);
    Set<Integer> set=new HashSet<Integer>(remove.length() + 1,1.0f);
    for (int i=0; i < remove.length(); i++) {
      set.add(remove.get(i));
    }
    newArray.addAll(src);
    for (int i=0; i < newArray.length(); i++) {
      int value=newArray.get(i);
      if (set.contains(value)) {
        for (int j=newArray.length() - 1; j > i + 1; j--) {
          int backValue=newArray.get(j);
          newArray.arrayCount--;
          if (!set.contains(backValue)) {
            newArray.getArray()[i]=backValue;
          }
        }
      }
    }
    if (add != null) {
      for (int i=0; i < add.length(); i++) {
        int value=add.get(i);
        if (!set.contains(value)) {
          newArray.add(value);
        }
      }
    }
    return newArray;
  }
}
