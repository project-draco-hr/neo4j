{
  final File confDir=TargetDirectory.forTest(this.getClass()).directory("confdir");
  FileUtils.forceMkdir(confDir);
  final File unwritableLogDir=createUnwritableDirectory();
  final File configFile=HTTPLoggingPreparednessRuleTest.createConfigFile(HTTPLoggingPreparednessRuleTest.createLogbackConfigXml(unwritableLogDir),confDir);
  Configuration config=new MapBasedConfiguration();
  config.setProperty(Configurator.HTTP_LOGGING,"true");
  config.setProperty(Configurator.HTTP_LOG_CONFIG_LOCATION,configFile.getPath());
  server=ServerBuilder.server().withDefaultDatabaseTuning().withPreflightTasks(new EnsurePreparedForHttpLogging(config)).withProperty(Configurator.HTTP_LOGGING,"true").withProperty(Configurator.HTTP_LOG_CONFIG_LOCATION,configFile.getPath()).usingDatabaseDir(folder.getRoot().getAbsolutePath()).build();
  try {
    server.start();
    fail("should have thrown exception");
  }
 catch (  PreflightFailedException e) {
    assertThat(e.getMessage(),containsString(String.format("HTTP log directory [%s]",unwritableLogDir.getAbsolutePath())));
  }
}
