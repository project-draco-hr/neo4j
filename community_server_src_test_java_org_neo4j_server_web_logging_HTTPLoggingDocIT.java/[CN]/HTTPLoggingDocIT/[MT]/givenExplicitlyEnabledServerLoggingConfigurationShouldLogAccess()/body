{
  final File logDirectory=TargetDirectory.forTest(this.getClass()).cleanDirectory("givenExplicitlyEnabledServerLoggingConfigurationShouldLogAccess-logdir");
  FileUtils.forceMkdir(logDirectory);
  final File confDir=TargetDirectory.forTest(this.getClass()).cleanDirectory("givenExplicitlyEnabledServerLoggingConfigurationShouldLogAccess-confdir");
  FileUtils.forceMkdir(confDir);
  final File configFile=HTTPLoggingPreparednessRuleTest.createConfigFile(HTTPLoggingPreparednessRuleTest.createLogbackConfigXml(logDirectory),confDir);
  final String query="?explicitlyEnabled=" + UUID.randomUUID().toString();
  NeoServer server=CommunityServerBuilder.server().withDefaultDatabaseTuning().withProperty(Configurator.HTTP_LOGGING,"true").withProperty(Configurator.HTTP_LOG_CONFIG_LOCATION,configFile.getPath()).usingDatabaseDir(TargetDirectory.forTest(this.getClass()).cleanDirectory("givenExplicitlyEnabledServerLoggingConfigurationShouldLogAccess-dbdir").getAbsolutePath()).build();
  try {
    server.start();
    FunctionalTestHelper functionalTestHelper=new FunctionalTestHelper(server);
    JaxRsResponse response=new RestRequest().get(functionalTestHelper.webAdminUri() + query);
    assertThat(response.getStatus(),is(200));
    response.close();
    File httpLog=new File(logDirectory,"http.log");
    assertEventually("request appears in log",fileContentSupplier(httpLog),containsString(query),5,TimeUnit.SECONDS);
  }
  finally {
    server.stop();
  }
}
