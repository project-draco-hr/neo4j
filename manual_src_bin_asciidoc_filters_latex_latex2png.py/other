"\nNAME\n    latex2png - Converts LaTeX source to PNG file\n\nSYNOPSIS\n    latex2png [options] INFILE\n\nDESCRIPTION\n    This filter reads LaTeX source text from the input file\n    INFILE (or stdin if INFILE is -) and renders it to PNG image file.\n    Typically used to render math equations.\n\n    Requires latex(1), dvipng(1) commands and LaTeX math packages.\n\nOPTIONS\n    -D DPI\n        Set the output resolution to DPI dots per inch. Use this option to\n        scale the output image size.\n\n    -o OUTFILE\n        The file name of the output file. If not specified the output file is\n        named like INFILE but with a .png file name extension.\n\n    -m\n        Skip if the PNG output file is newer that than the INFILE.\n        Compares timestamps on INFILE and OUTFILE. If\n        INFILE is - (stdin) then compares MD5 checksum stored in file\n        named like OUTFILE but with a .md5 file name extension.\n        The .md5 file is created if the -m option is used and the\n        INFILE is - (stdin).\n\n    -v\n        Verbosely print processing information to stderr.\n\n    --help, -h\n        Print this documentation.\n\n    --version\n        Print program version number.\n\nSEE ALSO\n    latex(1), dvipng(1)\n\nAUTHOR\n    Written by Stuart Rackham, <srackham@gmail.com>\n    The code was inspired by Kjell Magne Fauske's code:\n    http://fauskes.net/nb/htmleqII/\n\n    See also:\n    http://www.amk.ca/python/code/mt-math\n    http://code.google.com/p/latexmath2png/\n\nCOPYING\n    Copyright (C) 2010 Stuart Rackham. Free use of this software is\n    granted under the terms of the MIT License.\n"
import warnings
warnings.simplefilter('ignore', DeprecationWarning)
import os, sys, tempfile, md5
VERSION = '0.1.0'
TEX_HEADER = '\\documentclass{article}\n\\usepackage{amsmath}\n\\usepackage{amsthm}\n\\usepackage{amssymb}\n\\usepackage{bm}\n\\newcommand{\\mx}[1]{\\mathbf{\\bm{#1}}} % Matrix command\n\\newcommand{\\vc}[1]{\\mathbf{\\bm{#1}}} % Vector command\n\\newcommand{\\T}{\\text{T}}             % Transpose\n\\pagestyle{empty}\n\\begin{document}'
TEX_FOOTER = '\\end{document}'
verbose = False
if (__name__ == '__main__'):
    try:
        main()
    except SystemExit:
        raise
    except KeyboardInterrupt:
        sys.exit(1)
    except Exception as e:
        print_stderr(('%s: %s' % (os.path.basename(sys.argv[0]), str(e))))
        sys.exit(1)
