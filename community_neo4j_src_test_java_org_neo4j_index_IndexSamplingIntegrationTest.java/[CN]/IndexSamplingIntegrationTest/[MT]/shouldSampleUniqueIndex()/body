{
  GraphDatabaseService db=null;
  long deletedNodes=0;
  try {
    db=new TestGraphDatabaseFactory().newEmbeddedDatabase(testDirectory.graphDbDir());
    try (Transaction tx=db.beginTx()){
      db.schema().constraintFor(label).assertPropertyIsUnique(property).create();
      tx.success();
    }
     try (Transaction tx=db.beginTx()){
      for (int i=0; i < nodes; i++) {
        db.createNode(label).setProperty(property,"" + i);
        tx.success();
      }
    }
     try (Transaction tx=db.beginTx()){
      for (int i=0; i < nodes; i++) {
        if (i % 10 == 0) {
          deletedNodes++;
          db.findNode(label,property,"" + i).delete();
          tx.success();
        }
      }
    }
   }
  finally {
    if (db != null) {
      db.shutdown();
    }
  }
  triggerIndexResamplingOnNextStartup();
  DoubleLongRegister indexSampleRegister=fetchIndexSamplingValues(db);
  assertEquals(nodes - deletedNodes,indexSampleRegister.readFirst());
  assertEquals(nodes - deletedNodes,indexSampleRegister.readSecond());
  DoubleLongRegister indexSizeRegister=fetchIndexSizeValues(db);
  assertEquals(0,indexSizeRegister.readFirst());
  assertEquals(nodes - deletedNodes,indexSizeRegister.readSecond());
}
