{
  com.hazelcast.core.Cluster cluster=mock(Cluster.class);
  Set<Member> members=asSet(makeMember(1));
  when(cluster.getMembers()).thenReturn(members);
  Endpoint endpoint=mock(Endpoint.class);
  when(endpoint.getUuid()).thenReturn("12345");
  Client client=mock(Client.class);
  final String clientId="12345";
  when(client.getUuid()).thenReturn(clientId);
  ClientService clientService=mock(ClientService.class);
  when(clientService.getConnectedClients()).thenReturn(asSet(client));
  HazelcastMap hazelcastMap=new HazelcastMap();
  HazelcastInstance hazelcastInstance=mock(HazelcastInstance.class);
  when(hazelcastInstance.getMap(anyString())).thenReturn(hazelcastMap);
  when(hazelcastInstance.getLocalEndpoint()).thenReturn(endpoint);
  when(hazelcastInstance.getExecutorService(anyString())).thenReturn(new StubExecutorService());
  when(hazelcastInstance.getCluster()).thenReturn(cluster);
  when(hazelcastInstance.getClientService()).thenReturn(clientService);
  HazelcastConnector connector=mock(HazelcastConnector.class);
  when(connector.connectToHazelcast()).thenReturn(hazelcastInstance);
  HazelcastClient hazelcastClient=new HazelcastClient(connector,NullLogProvider.getInstance(),ADDRESS);
  hazelcastClient.start();
  int numberOfStartedEdgeServers=hazelcastClient.currentTopology().edgeMemberAddresses().size();
  hazelcastClient.stop();
  assertEquals(0,numberOfStartedEdgeServers - 1);
}
