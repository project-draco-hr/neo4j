{
  TickingClock clock=new TickingClock(0,100);
  Log log=mock(Log.class);
  final AvailabilityGuard availabilityGuard=new AvailabilityGuard(clock,log);
  availabilityGuard.require(REQUIREMENT_1);
  final AtomicBoolean notified=new AtomicBoolean();
  AvailabilityGuard.AvailabilityListener availabilityListener=new AvailabilityGuard.AvailabilityListener(){
    @Override public void available(){
    }
    @Override public void unavailable(){
      notified.set(true);
    }
  }
;
  availabilityGuard.addListener(availabilityListener);
  availabilityGuard.fulfill(REQUIREMENT_1);
  availabilityGuard.require(REQUIREMENT_1);
  assertThat(notified.get(),equalTo(true));
}
