{
  directory=canonicalFile(directory);
  if (files.containsKey(directory)) {
    return null;
  }
  List<String> directoryPathItems=splitPath(directory);
  Set<File> found=new HashSet<>();
  Iterator<File> files=new CombiningIterator<>(asList(this.files.keySet().iterator(),directories.iterator()));
  while (files.hasNext()) {
    File file=files.next();
    List<String> fileNamePathItems=splitPath(file);
    if (directoryMatches(directoryPathItems,fileNamePathItems)) {
      File path=constructPath(fileNamePathItems,directoryPathItems.size() + 1);
      if (filter.accept(path.getParentFile(),path.getName())) {
        found.add(path);
      }
    }
  }
  return found.toArray(new File[found.size()]);
}
