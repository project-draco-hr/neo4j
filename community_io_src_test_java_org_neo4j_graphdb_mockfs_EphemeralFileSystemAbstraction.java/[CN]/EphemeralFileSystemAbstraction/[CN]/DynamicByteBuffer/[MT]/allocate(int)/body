{
  for (int enlargement=0; enlargement < 2; enlargement++) {
    AtomicReferenceArray<Queue<Reference<ByteBuffer>>> pools=POOLS;
    if (sizeIndex + enlargement < pools.length()) {
      Queue<Reference<ByteBuffer>> queue=pools.get(sizeIndex + enlargement);
      if (queue != null) {
        for (; ; ) {
          Reference<ByteBuffer> ref=queue.poll();
          if (ref == null) {
            break;
          }
          ByteBuffer buffer=ref.get();
          if (buffer != null) {
            return buffer;
          }
        }
      }
    }
  }
  return ByteBuffer.allocate((sizeIndex < SIZES.length) ? SIZES[sizeIndex] : ((sizeIndex - SIZES.length + 1) * SIZES[SIZES.length - 1]));
}
