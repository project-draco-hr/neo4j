{
  System.out.println("Starting database ...");
  GraphDatabaseService graphDb=new GraphDatabaseFactory().newEmbeddedDatabase(DB_PATH);
{
    Schema schema=graphDb.schema();
    IndexDefinition indexDefinition;
    Transaction tx=graphDb.beginTx();
    try {
      indexDefinition=schema.indexFor(DynamicLabel.label("User")).on("username").create();
      tx.success();
    }
  finally {
      tx.finish();
    }
    Transaction transaction=graphDb.beginTx();
    try {
      schema.awaitIndexOnline(indexDefinition,10,TimeUnit.SECONDS);
    }
  finally {
      transaction.finish();
    }
  }
{
    Transaction tx=graphDb.beginTx();
    try {
      Label label=DynamicLabel.label("User");
      for (int id=0; id < 100; id++) {
        Node userNode=graphDb.createNode(label);
        userNode.setProperty("username","user" + id + "@neo4j.org");
      }
      System.out.println("Users created");
      tx.success();
    }
  finally {
      tx.finish();
    }
  }
{
    Label label=DynamicLabel.label("User");
    int idToFind=45;
    String nameToFind="user" + idToFind + "@neo4j.org";
    Transaction transaction=graphDb.beginTx();
    try {
      ResourceIterator<Node> users=graphDb.findNodesByLabelAndProperty(label,"username",nameToFind).iterator();
      while (users.hasNext()) {
        Node node=users.next();
        System.out.println("The username of user " + idToFind + " is "+ node.getProperty("username"));
      }
    }
  finally {
      transaction.finish();
    }
  }
{
    Transaction tx=graphDb.beginTx();
    try {
      Label label=DynamicLabel.label("User");
      int idToFind=45;
      String nameToFind="user" + idToFind + "@neo4j.org";
      for (      Node node : graphDb.findNodesByLabelAndProperty(label,"username",nameToFind)) {
        node.setProperty("username","user" + (idToFind + 1) + "@neo4j.org");
      }
      tx.success();
    }
  finally {
      tx.finish();
    }
  }
{
    Transaction tx=graphDb.beginTx();
    try {
      Label label=DynamicLabel.label("User");
      int idToFind=46;
      String nameToFind="user" + idToFind + "@neo4j.org";
      for (      Node node : graphDb.findNodesByLabelAndProperty(label,"username",nameToFind)) {
        node.delete();
      }
      tx.success();
    }
  finally {
      tx.finish();
    }
  }
{
    Transaction tx=graphDb.beginTx();
    try {
      Label label=DynamicLabel.label("User");
      for (      IndexDefinition indexDefinition : graphDb.schema().getIndexes(label)) {
        indexDefinition.drop();
      }
      tx.success();
    }
  finally {
      tx.finish();
    }
  }
  System.out.println("Shutting down database ...");
  graphDb.shutdown();
}
