{
  int filePageSize=28;
  long fileSize=2048L;
  long pageId=12;
  swapper=new SingleFilePageSwapper(null,channel,filePageSize,null);
  when(table.load(swapper,pageId,PagedFile.PF_NO_GROW | PagedFile.PF_SHARED_LOCK)).thenReturn(page);
  when(page.pin(swapper,pageId,PagedFile.PF_SHARED_LOCK)).thenReturn(true);
  when(page.pageId()).thenReturn(pageId);
  when(channel.size()).thenReturn(fileSize);
  StandardPagedFile file=new StandardPagedFile(table,null,swapperFactory,filePageSize,PageCacheMonitor.NULL);
  try (PageCursor cursor=file.io(pageId,PF_SHARED_LOCK)){
    assertTrue(cursor.next());
    assertThat(cursor.getCurrentPageId(),is(pageId));
  }
   verify(table).load(swapper,pageId,PagedFile.PF_NO_GROW | PagedFile.PF_SHARED_LOCK);
}
