{
  long recordToFind=propRecord.getPropBlock();
  Map<Long,LegacyDynamicRecord> recordsMap=new HashMap<Long,LegacyDynamicRecord>();
  for (  LegacyDynamicRecord record : readDynamicRecords(propRecord)) {
    recordsMap.put(record.getId(),record);
  }
  List<char[]> charList=new LinkedList<char[]>();
  int totalSize=0;
  while (recordToFind != Record.NO_NEXT_BLOCK.intValue()) {
    LegacyDynamicRecord record=recordsMap.get(recordToFind);
    if (!record.isCharData()) {
      ByteBuffer buf=ByteBuffer.wrap(record.getData());
      char[] chars=new char[record.getData().length / 2];
      totalSize+=chars.length;
      buf.asCharBuffer().get(chars);
      charList.add(chars);
    }
 else {
      charList.add(record.getDataAsChar());
    }
    recordToFind=record.getNextBlock();
  }
  StringBuffer buf=new StringBuffer();
  for (  char[] str : charList) {
    buf.append(str);
  }
  return buf.toString();
}
