{
  TransactionFailureException expectedCommitException=null;
  TransactionFailureException expectedStartException=null;
  String storeDir=testDirectory.absolutePath();
  LimitedFileSystemGraphDatabase db=cleanup.add(new LimitedFileSystemGraphDatabase(storeDir));
  try (Transaction tx=db.beginTx()){
    db.createNode();
    tx.success();
  }
   long logVersion=db.getDependencyResolver().resolveDependency(NeoStore.class).getCurrentLogVersion();
  db.runOutOfDiskSpaceNao();
  try (Transaction tx=db.beginTx()){
    db.createNode();
    tx.success();
  }
 catch (  TransactionFailureException e) {
    expectedCommitException=e;
  }
 finally {
    Assert.assertNotNull("Expected tx finish to throw TransactionFailureException when filesystem is full.",expectedCommitException);
  }
  try (Transaction transaction=db.beginTx()){
    fail("Expected tx begin to throw TransactionFailureException when tx manager breaks.");
  }
 catch (  TransactionFailureException e) {
    expectedStartException=e;
  }
 finally {
    Assert.assertNotNull("Expected tx begin to throw TransactionFailureException when tx manager breaks.",expectedStartException);
  }
  db.somehowGainMoreDiskSpace();
  db.shutdown();
  assertEquals(logVersion,new NeoStoreUtil(new File(storeDir),db.getFileSystem()).getLogVersion());
}
