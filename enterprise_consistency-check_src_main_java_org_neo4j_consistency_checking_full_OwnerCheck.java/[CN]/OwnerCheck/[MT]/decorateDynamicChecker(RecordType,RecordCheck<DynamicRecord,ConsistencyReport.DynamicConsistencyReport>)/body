{
  final ConcurrentMap<Long,DynamicOwner> dynamicOwners=dynamicOwners(type);
  if (dynamicOwners == null) {
    return checker;
  }
  return new RecordCheck<DynamicRecord,ConsistencyReport.DynamicConsistencyReport>(){
    @Override public void check(    DynamicRecord record,    ConsistencyReport.DynamicConsistencyReport report,    RecordAccess records){
      if (record.inUse()) {
        DynamicOwner.Unknown owner=new DynamicOwner.Unknown();
        report.forReference(owner,DynamicOwner.ORPHAN_CHECK);
        if (null == dynamicOwners.putIfAbsent(record.getId(),owner)) {
          owner.markInCustody();
        }
        if (!Record.NO_NEXT_BLOCK.is(record.getNextBlock())) {
          DynamicOwner.Dynamic nextOwner=new DynamicOwner.Dynamic(type,record);
          DynamicOwner prevOwner=dynamicOwners.put(record.getNextBlock(),nextOwner);
          if (prevOwner != null) {
            report.forReference(prevOwner.record(records),nextOwner);
          }
        }
      }
      checker.check(record,report,records);
    }
    @Override public void checkChange(    DynamicRecord oldRecord,    DynamicRecord newRecord,    ConsistencyReport.DynamicConsistencyReport report,    DiffRecordAccess records){
      checker.checkChange(oldRecord,newRecord,report,records);
    }
  }
;
}
