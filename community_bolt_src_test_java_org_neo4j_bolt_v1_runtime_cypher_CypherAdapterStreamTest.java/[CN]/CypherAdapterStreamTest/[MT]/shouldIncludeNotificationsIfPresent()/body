{
  Result result=mock(Result.class);
  QueryStatistics queryStatistics=mock(QueryStatistics.class);
  when(queryStatistics.containsUpdates()).thenReturn(false);
  when(result.getQueryStatistics()).thenReturn(queryStatistics);
  when(result.getQueryExecutionType()).thenReturn(query(READ_WRITE));
  when(result.getNotifications()).thenReturn(Arrays.<Notification>asList(NotificationCode.INDEX_HINT_UNFULFILLABLE.notification(InputPosition.empty),NotificationCode.PLANNER_UNSUPPORTED.notification(new InputPosition(4,5,6))));
  CypherAdapterStream stream=new CypherAdapterStream(result,Clock.systemUTC());
  Map<String,Object> meta=metadataOf(stream);
  assertThat(meta.get("notifications").toString(),equalTo("[{severity=WARNING, description=The hinted index does not exist, please check the schema, code=Neo.ClientError.Schema.IndexNotFound, title=The request (directly or indirectly) referred to an index that does not exist.}, {severity=WARNING, description=Using COST planner is unsupported for this query, please use RULE planner instead, code=Neo.ClientNotification.Statement.PlannerUnsupportedWarning, position={offset=4, column=6, line=5}, title=This query is not supported by the COST planner.}]"));
}
