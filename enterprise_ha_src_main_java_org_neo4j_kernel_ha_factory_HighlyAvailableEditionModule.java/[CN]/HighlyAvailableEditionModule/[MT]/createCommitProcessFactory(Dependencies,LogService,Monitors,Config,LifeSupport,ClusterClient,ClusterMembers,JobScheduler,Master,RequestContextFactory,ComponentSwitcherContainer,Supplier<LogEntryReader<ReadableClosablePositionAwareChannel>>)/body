{
  DefaultSlaveFactory slaveFactory=dependencies.satisfyDependency(new DefaultSlaveFactory(logging.getInternalLogProvider(),monitors,config.get(HaSettings.com_chunk_size).intValue(),logEntryReader));
  HostnamePort me=config.get(ClusterSettings.cluster_server);
  Slaves slaves=dependencies.satisfyDependency(paxosLife.add(new HighAvailabilitySlaves(members,clusterClient,slaveFactory,me)));
  TransactionPropagator transactionPropagator=new TransactionPropagator(TransactionPropagator.from(config),logging.getInternalLog(TransactionPropagator.class),slaves,new CommitPusher(jobScheduler));
  paxosLife.add(transactionPropagator);
  DelegateInvocationHandler<TransactionCommitProcess> commitProcessDelegate=new DelegateInvocationHandler<>(TransactionCommitProcess.class);
  CommitProcessSwitcher commitProcessSwitcher=new CommitProcessSwitcher(transactionPropagator,master,commitProcessDelegate,requestContextFactory,monitors,dependencies);
  componentSwitcherContainer.add(commitProcessSwitcher);
  return new HighlyAvailableCommitProcessFactory(commitProcessDelegate);
}
