{
  Relationship shortCTOXRelationship=createGraph(true);
  PathFinder<WeightedPath> finder=GraphAlgoFactory.dijkstra(Traversal.expanderForTypes(MyRelTypes.R1,Direction.OUTGOING),"cost");
  PathFinder<WeightedPath> finder2=GraphAlgoFactory.dijkstra(Traversal.expanderForTypes(MyRelTypes.R1,Direction.OUTGOING),CommonEvaluators.doubleCostEvaluator("cost"));
  Node startNode=graph.getNode("start");
  Node endNode=graph.getNode("x");
  assertPaths(finder.findAllPaths(startNode,endNode),"start,a,b,c,x","start,a,b,c,d,e,x");
  assertPaths(finder2.findAllPaths(startNode,endNode),"start,a,b,c,x","start,a,b,c,d,e,x");
  for (  WeightedPath path : finder.findAllPaths(startNode,endNode)) {
    if (getPathDef(path).equals("start,a,b,c,x")) {
      assertContainsRelationship(path,shortCTOXRelationship);
    }
  }
}
