{
  client.connect(address).send(TransportTestUtil.acceptedVersions(1,0,0,0)).send(TransportTestUtil.chunk(InitMessage.init("TestClient/1.1",map("principal","neo4j","credentials","neo4j","scheme","basic"))));
  assertThat(client,eventuallyReceives(new byte[]{0,0,0,1}));
  assertThat(client,eventuallyReceives(msgSuccess(map("credentials_expired",true,"neo4j_version",version))));
  client.send(TransportTestUtil.chunk(RunMessage.run("CALL dbms.changePassword",Collections.singletonMap("password","secret")),PullAllMessage.pullAll()));
  assertThat(client,eventuallyReceives(msgSuccess()));
  reconnect();
  client.connect(address).send(TransportTestUtil.acceptedVersions(1,0,0,0)).send(TransportTestUtil.chunk(InitMessage.init("TestClient/1.1",map("principal","neo4j","credentials","neo4j","scheme","basic"))));
  assertThat(client,eventuallyReceives(new byte[]{0,0,0,1}));
  assertThat(client,eventuallyReceives(msgFailure(Status.Security.Unauthorized,"The client is unauthorized due to authentication failure.")));
  reconnect();
  client.connect(address).send(TransportTestUtil.acceptedVersions(1,0,0,0)).send(TransportTestUtil.chunk(InitMessage.init("TestClient/1.1",map("principal","neo4j","credentials","secret","scheme","basic"))));
  assertThat(client,eventuallyReceives(new byte[]{0,0,0,1}));
  assertThat(client,eventuallyReceives(msgSuccess()));
}
