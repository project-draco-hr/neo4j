{
  Collection<Object[]> result=new ArrayList<>();
  result.add(new Object[]{new TableFactory(){
    @Override public Table newTable(    int capacity){
      return new IntKeyTable(capacity,VALUE_MARKER);
    }
    @Override public boolean supportsLongs(){
      return false;
    }
    @Override public Object sampleValue(){
      return null;
    }
  }
});
  result.add(new Object[]{new TableFactory(){
    @Override public Table newTable(    int capacity){
      return new LongKeyTable(capacity,VALUE_MARKER);
    }
    @Override public boolean supportsLongs(){
      return true;
    }
    @Override public Object sampleValue(){
      return null;
    }
  }
});
  result.add(new Object[]{new TableFactory(){
    @Override public Table newTable(    int capacity){
      return new IntKeyUnsafeTable(capacity,VALUE_MARKER);
    }
    @Override public boolean supportsLongs(){
      return false;
    }
    @Override public Object sampleValue(){
      return null;
    }
  }
});
  result.add(new Object[]{new TableFactory(){
    @Override public Table newTable(    int capacity){
      return new LongKeyUnsafeTable(capacity,VALUE_MARKER);
    }
    @Override public boolean supportsLongs(){
      return true;
    }
    @Override public Object sampleValue(){
      return null;
    }
  }
});
  result.add(new Object[]{new TableFactory(){
    @Override public Table newTable(    int capacity){
      return new LongKeyIntValueTable(capacity);
    }
    @Override public boolean supportsLongs(){
      return true;
    }
    @Override public Object sampleValue(){
      return new int[]{4};
    }
  }
});
  result.add(new Object[]{new TableFactory(){
    @Override public Table newTable(    int capacity){
      return new LongKeyObjectValueTable(capacity);
    }
    @Override public boolean supportsLongs(){
      return true;
    }
    @Override public Object sampleValue(){
      return new long[]{1458489572354L};
    }
  }
});
  result.add(new Object[]{new TableFactory(){
    @Override public Table newTable(    int capacity){
      return new LongKeyLongValueUnsafeTable(capacity);
    }
    @Override public boolean supportsLongs(){
      return true;
    }
    @Override public Object sampleValue(){
      return new long[]{1458489572354L};
    }
  }
});
  return result;
}
