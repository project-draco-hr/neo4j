{
  buffer.clear();
  buffer.limit(21);
  if (channel.read(buffer) != buffer.limit()) {
    return null;
  }
  buffer.flip();
  byte cls=buffer.get();
  Class<?> itemsClass=null;
  if (cls == NODE) {
    itemsClass=Node.class;
  }
 else   if (cls == RELATIONSHIP) {
    itemsClass=Relationship.class;
  }
 else {
    return null;
  }
  int indexNameLength=buffer.getInt();
  long entityId=buffer.getLong();
  int keyCharLength=buffer.getInt();
  int valueCharLength=buffer.getInt();
  String indexName=NioUtils.readString(channel,buffer,indexNameLength);
  if (indexName == null) {
    return null;
  }
  String key=NioUtils.readString(channel,buffer,keyCharLength);
  if (key == null) {
    return null;
  }
  String value=NioUtils.readString(channel,buffer,valueCharLength);
  if (value == null) {
    return null;
  }
  IndexIdentifier identifier=new IndexIdentifier(itemsClass,indexName,dataSource.indexStore.get(indexName));
  return new CommandData(identifier,entityId,key,value);
}
