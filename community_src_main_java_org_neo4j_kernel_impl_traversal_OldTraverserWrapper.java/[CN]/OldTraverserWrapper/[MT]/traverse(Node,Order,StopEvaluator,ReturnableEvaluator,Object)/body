{
  assertNotNull(traversalOrder,"order");
  assertNotNull(stopEvaluator,"stop evaluator");
  assertNotNull(returnableEvaluator,"returnable evaluator");
  if (relationshipTypesAndDirections.length % 2 != 0 || relationshipTypesAndDirections.length == 0) {
    throw new IllegalArgumentException();
  }
  TraverserImpl result=new TraverserImpl();
  TraversalDescription description=traversal(result,traversalOrder,stopEvaluator,returnableEvaluator);
  for (int i=0; i < relationshipTypesAndDirections.length; i+=2) {
    Object relType=relationshipTypesAndDirections[i];
    if (relType == null) {
      throw new IllegalArgumentException("Null relationship type at " + i);
    }
    if (!(relType instanceof RelationshipType)) {
      throw new IllegalArgumentException("Expected RelationshipType at var args pos " + i + ", found "+ relType);
    }
    Object direction=relationshipTypesAndDirections[i + 1];
    if (direction == null) {
      throw new IllegalArgumentException("Null direction at " + (i + 1));
    }
    if (!(direction instanceof Direction)) {
      throw new IllegalArgumentException("Expected Direction at var args pos " + (i + 1) + ", found "+ direction);
    }
    description=description.relationships((RelationshipType)relType,(Direction)direction);
  }
  result.iter=description.traverse(node).iterator();
  return result;
}
