{
  if (args.length != 1) {
    System.err.println("Usage: ApplyNewLogs <db path>");
    System.exit(-1);
  }
  String destDir=args[0];
  if (!new File(destDir).exists()) {
    throw new RuntimeException("Unable to locate store in[" + destDir + "]");
  }
  Map<String,String> params=new HashMap<String,String>();
  params.put("backup_slave","true");
  EmbeddedGraphDatabase graphDb=new EmbeddedGraphDatabase(destDir);
  setupLuceneIfOnClasspath(destDir,graphDb);
  XaDataSourceManager xaDsMgr=graphDb.getConfig().getTxModule().getXaDataSourceManager();
  System.out.println("Starting apply of new logs...");
  for (  XaDataSource xaDs : xaDsMgr.getAllRegisteredDataSources()) {
    xaDs.makeBackupSlave();
    System.out.println("Checking " + xaDs.getName() + " ...");
    long nextVersion=xaDs.getCurrentLogVersion();
    boolean logApplied=false;
    while (xaDs.hasLogicalLog(nextVersion)) {
      try {
        xaDs.applyLog(xaDs.getLogicalLog(nextVersion));
        logApplied=true;
      }
 catch (      IOException e) {
        throw new UnderlyingStorageException("Unable to recover slave to consistent state",e);
      }
      nextVersion++;
    }
    if (!logApplied) {
      System.out.println("No new logs for " + xaDs.getName());
    }
  }
  graphDb.shutdown();
  System.out.println("Apply of new logs completed.");
}
