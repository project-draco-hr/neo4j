{
  checkValidityOfUsernameAndRoleName(username,roleName);
synchronized (this) {
    User user=userRepository.getUserByName(username);
    if (user == null) {
      throw new IllegalArgumentException("User " + username + " does not exist.");
    }
    RoleRecord role=roleRepository.getRoleByName(roleName);
    if (role == null) {
      throw new IllegalArgumentException("Role " + roleName + " does not exist.");
    }
 else {
      RoleRecord newRole=role.augment().withoutUser(username).build();
      try {
        roleRepository.update(role,newRole);
      }
 catch (      ConcurrentModificationException e) {
        removeUserFromRole(username,roleName);
      }
    }
  }
  clearCachedAuthorizationInfoForUser(username);
}
