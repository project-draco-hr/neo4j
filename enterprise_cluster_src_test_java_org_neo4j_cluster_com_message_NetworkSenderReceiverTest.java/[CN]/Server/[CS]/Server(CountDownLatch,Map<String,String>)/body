{
  final Config conf=new Config(config,ClusterSettings.class);
  networkReceiver=life.add(new NetworkReceiver(mock(NetworkReceiver.Monitor.class),new NetworkReceiver.Configuration(){
    @Override public HostnamePort clusterServer(){
      return conf.get(ClusterSettings.cluster_server);
    }
    @Override public int defaultPort(){
      return 5001;
    }
    @Override public String name(){
      return null;
    }
  }
,NullLogProvider.getInstance()));
  networkSender=life.add(new NetworkSender(mock(NetworkSender.Monitor.class),new NetworkSender.Configuration(){
    @Override public int defaultPort(){
      return 5001;
    }
    @Override public int port(){
      return conf.get(ClusterSettings.cluster_server).getPort();
    }
  }
,networkReceiver,NullLogProvider.getInstance()));
  life.add(new LifecycleAdapter(){
    @Override public void start() throws Throwable {
      networkReceiver.addMessageProcessor(new MessageProcessor(){
        @Override public boolean process(        Message<? extends MessageType> message){
          processedMessage.set(true);
          latch.countDown();
          return true;
        }
      }
);
    }
  }
);
}
