{
  testEntryLog.append(new RaftLogEntry(1,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(1,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(1,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(2,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(2,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(2,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  ReplicatedInteger newData=valueOf(99);
  raft.handle(appendEntriesRequest().leaderTerm(8).prevLogIndex(6).prevLogTerm(5).logEntry(new RaftLogEntry(5,newData)).logEntry(new RaftLogEntry(5,newData)).logEntry(new RaftLogEntry(6,newData)).logEntry(new RaftLogEntry(6,newData)).logEntry(new RaftLogEntry(6,newData)).build());
  assertEquals(11,testEntryLog.appendIndex());
  assertEquals(3,testEntryLog.readEntryTerm(11));
}
