{
  testEntryLog.append(new RaftLogEntry(1,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(1,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(1,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(2,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(2,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(2,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  testEntryLog.append(new RaftLogEntry(3,ReplicatedInteger.valueOf(99)));
  ReplicatedInteger newData=valueOf(99);
  raft.handle(appendEntriesRequest().leaderTerm(8).prevLogIndex(0).prevLogTerm(0).logEntry(new RaftLogEntry(1,newData)).logEntry(new RaftLogEntry(1,newData)).logEntry(new RaftLogEntry(1,newData)).logEntry(new RaftLogEntry(4,newData)).logEntry(new RaftLogEntry(4,newData)).logEntry(new RaftLogEntry(5,newData)).logEntry(new RaftLogEntry(5,newData)).logEntry(new RaftLogEntry(6,newData)).logEntry(new RaftLogEntry(6,newData)).logEntry(new RaftLogEntry(6,newData)).build());
  assertEquals(10,testEntryLog.appendIndex());
  assertEquals(1,testEntryLog.readEntryTerm(1));
  assertEquals(1,testEntryLog.readEntryTerm(2));
  assertEquals(1,testEntryLog.readEntryTerm(3));
  assertEquals(4,testEntryLog.readEntryTerm(4));
  assertEquals(4,testEntryLog.readEntryTerm(5));
  assertEquals(5,testEntryLog.readEntryTerm(6));
  assertEquals(5,testEntryLog.readEntryTerm(7));
  assertEquals(6,testEntryLog.readEntryTerm(8));
  assertEquals(6,testEntryLog.readEntryTerm(9));
  assertEquals(6,testEntryLog.readEntryTerm(10));
}
