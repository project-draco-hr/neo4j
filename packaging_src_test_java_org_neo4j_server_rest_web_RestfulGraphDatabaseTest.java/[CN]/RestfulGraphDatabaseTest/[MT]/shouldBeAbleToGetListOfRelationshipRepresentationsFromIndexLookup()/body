{
  String key="key_get";
  String value="value";
  long startNodeId=helper.createNode();
  long endNodeId=helper.createNode();
  String relationshipType1="KNOWS";
  long relationshipId1=helper.createRelationship(relationshipType1,startNodeId,endNodeId);
  String relationshipType2="PLAYS-NICE-WITH";
  long relationshipId2=helper.createRelationship(relationshipType2,startNodeId,endNodeId);
  String indexName="matrixal-relationships";
  helper.createRelationshipIndex(indexName);
  helper.addRelationshipToIndex(indexName,key,value,relationshipId1);
  helper.addRelationshipToIndex(indexName,key,value,relationshipId2);
  Response response=service.getIndexedRelationships(indexName,key,value);
  assertEquals(Status.OK.getStatusCode(),response.getStatus());
  Collection<?> items=(Collection<?>)JsonHelper.jsonToSingleValue(entityAsString(response));
  int counter=0;
  for (  Object item : items) {
    Map<?,?> map=(Map<?,?>)item;
    Map<?,?> properties=(Map<?,?>)map.get("data");
    assertNotNull(map.get("self"));
    String indexedUri=(String)map.get("indexed");
    assertThat(indexedUri,containsString(key));
    assertThat(indexedUri,containsString(value));
    assertTrue(indexedUri.endsWith(Long.toString(relationshipId1)) || indexedUri.endsWith(Long.toString(relationshipId2)));
    counter++;
  }
  assertEquals(2,counter);
}
