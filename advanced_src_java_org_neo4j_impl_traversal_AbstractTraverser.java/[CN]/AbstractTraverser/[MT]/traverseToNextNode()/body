{
  Node nodeToReturn=null;
  while (!this.listIsEmpty() && nodeToReturn == null) {
    TraversalPositionImpl currentPos=this.getNextPositionFromList();
    traversalPosition=currentPos;
    Node currentNode=currentPos.currentNode();
    if (visitedNodes.add(currentNode)) {
      currentPos.setReturnedNodesCount(this.returnedNodesCount);
      try {
        if (!this.stopEvaluator.isStopNode(currentPos)) {
          this.addEndNodesToList(currentPos,this.traversableRels,this.traversableDirs);
          this.addEndNodesToList(currentPos,this.preservingRels,this.preservingDirs);
        }
        if (this.returnableEvaluator.isReturnableNode(currentPos)) {
          this.returnedNodesCount++;
          nodeToReturn=currentPos.currentNode();
        }
      }
 catch (      NotFoundException e) {
      }
    }
  }
  return nodeToReturn;
}
