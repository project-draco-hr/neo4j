{
  final Node node=path.endNode();
  if (directions.length == 1) {
    DirectionAndTypes direction=directions[0];
    return node.getRelationships(direction.direction,direction.types).iterator();
  }
 else {
    return new NestingIterator<Relationship,DirectionAndTypes>(new ArrayIterator<DirectionAndTypes>(directions)){
      @Override protected Iterator<Relationship> createNestedIterator(      DirectionAndTypes item){
        return node.getRelationships(item.direction,item.types).iterator();
      }
    }
;
  }
}
