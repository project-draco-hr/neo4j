{
  long inUseByte=cursor.getByte(offset + IN_USE);
  long highByte=cursor.getByte(offset + HIGH_BYTE);
  int type=cursor.getShort(offset + TYPE);
  long nextLowBits=cursor.getUnsignedInt(offset + NEXT_LOW_BITS);
  long nextOutLowBits=cursor.getUnsignedInt(offset + NEXT_OUT_LOW_BITS);
  long nextInLowBits=cursor.getUnsignedInt(offset + NEXT_IN_LOW_BITS);
  long nextLoopLowBits=cursor.getUnsignedInt(offset + NEXT_LOOP_LOW_BITS);
  long ownerLowBits=cursor.getUnsignedInt(offset + OWNER_LOW_BITS);
  byte ownerHighBits=cursor.getByte(offset + OWNER_HIGH_BITS);
  RelationshipGroupRecord record=new RelationshipGroupRecord(id,type);
  record.setInUse((inUseByte & 0x1) > 0);
  record.setNext(longFromIntAndMod(nextLowBits,(inUseByte & 0xE) << 31));
  record.setFirstOut(longFromIntAndMod(nextOutLowBits,(inUseByte & 0x70) << 28));
  record.setFirstIn(longFromIntAndMod(nextInLowBits,(highByte & 0xE) << 31));
  record.setFirstLoop(longFromIntAndMod(nextLoopLowBits,(highByte & 0x70) << 28));
  record.setOwningNode(ownerLowBits | (((long)ownerHighBits) << 32));
  return record;
}
