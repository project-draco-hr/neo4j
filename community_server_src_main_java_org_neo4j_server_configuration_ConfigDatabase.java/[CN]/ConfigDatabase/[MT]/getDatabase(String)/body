{
  final AtomicReference<DatabaseDefinition> definitionContainer=new AtomicReference<>();
  databases.visit(CONFIG_DB,new DatabaseRegistry.Visitor(){
    @Override public void visit(    Database db){
      try (Transaction ignore=db.getGraph().beginTx()){
        Map<String,Object> row=single(db.executionEngine().execute("MATCH (db:Database {key:{key}})-[:CONFIGURED_BY]->(cfg) " + "RETURN db.mode, db.provider, cfg",map("key",dbKey)));
        String provider=(String)row.get("db.provider");
        String mode=(String)row.get("db.mode");
        Config config=new Config(toStringMap((Node)row.get("cfg")));
        definitionContainer.set(new DatabaseDefinition(dbKey,provider,Mode.fromString(mode),config));
      }
     }
  }
);
  return definitionContainer.get();
}
