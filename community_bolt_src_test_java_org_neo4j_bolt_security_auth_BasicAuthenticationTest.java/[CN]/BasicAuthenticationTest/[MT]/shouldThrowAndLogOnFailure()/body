{
  BasicAuthManager manager=mock(BasicAuthManager.class);
  BasicAuthSubject authSubject=mock(BasicAuthSubject.class);
  Log log=mock(Log.class);
  LogProvider logProvider=mock(LogProvider.class);
  when(logProvider.getLog(BasicAuthentication.class)).thenReturn(log);
  BasicAuthentication authentication=new BasicAuthentication(manager,logProvider,identifier);
  when(manager.login(anyMap())).thenReturn(authSubject);
  when(authSubject.getAuthenticationResult()).thenReturn(AuthenticationResult.FAILURE);
  exception.expect(AuthenticationException.class);
  exception.expect(hasStatus(Status.Security.Unauthorized));
  exception.expectMessage("The client is unauthorized due to authentication failure.");
  authentication.authenticate(map("scheme","basic","principal","bob","credentials","secret"));
  verify(log).warn("Failed authentication attempt for 'bob')");
}
