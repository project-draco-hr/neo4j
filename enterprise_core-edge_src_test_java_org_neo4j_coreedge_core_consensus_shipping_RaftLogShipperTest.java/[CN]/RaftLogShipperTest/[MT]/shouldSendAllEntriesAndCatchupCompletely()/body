{
  final int ENTRY_COUNT=catchupBatchSize * 10;
  Collection<RaftLogEntry> entries=new ArrayList<>();
  for (int i=0; i < ENTRY_COUNT; i++) {
    entries.add(new RaftLogEntry(0,ReplicatedInteger.valueOf(i)));
  }
  for (  RaftLogEntry entry : entries) {
    raftLog.append(entry);
  }
  startLogShipper();
  RaftMessages.AppendEntries.Request expected=new RaftMessages.AppendEntries.Request(CURRENT_VERSION,leader,leaderTerm,-1,-1,RaftLogEntry.empty,leaderCommit);
  while (!outbound.sentTo(follower).contains(expected)) {
    logShipper.onMismatch(-1,new LeaderContext(0,0));
  }
  long matchIndex;
  do {
    AppendEntries.Request last=(AppendEntries.Request)Iterables.last(outbound.sentTo(follower));
    matchIndex=last.prevLogIndex() + last.entries().length;
    outbound.clear();
    logShipper.onMatch(matchIndex,new LeaderContext(0,0));
  }
 while (outbound.sentTo(follower).size() > 0);
  assertEquals(ENTRY_COUNT - 1,matchIndex);
}
