{
  for (int i=0; i < values.length; i++) {
    for (int j=0; j < values.length; j++) {
      Object left=values[i];
      Object right=values[j];
      int cmpPos=sign(i - j);
      int cmpVal=sign(compare(COMPARE_VALUES,left,right));
      if (cmpPos != cmpVal) {
        throw new AssertionError(format("Comparing %s against %s does not agree with their positions in the sorted list (%d and " + "%d)",left,right,i,j));
      }
      if (NUMBER.isSuperTypeOf(left) && NUMBER.isSuperTypeOf(right)) {
        int cmpNum=sign(compare(COMPARE_NUMBERS,(Number)left,(Number)right));
        if (cmpPos != cmpNum) {
          throw new AssertionError(format("Comparing %s against %s numerically does not agree with their positions in the " + "sorted list (%d and %d)",left,right,i,j));
        }
      }
      if (STRING.isSuperTypeOf(left) && STRING.isSuperTypeOf(right)) {
        int cmpNum=sign(compare(COMPARE_STRINGS,left,right));
        if (cmpPos != cmpNum) {
          throw new AssertionError(format("Comparing %s against %s textually does not agree with their positions in the " + "sorted list (%d and %d)",left,right,i,j));
        }
      }
    }
  }
}
