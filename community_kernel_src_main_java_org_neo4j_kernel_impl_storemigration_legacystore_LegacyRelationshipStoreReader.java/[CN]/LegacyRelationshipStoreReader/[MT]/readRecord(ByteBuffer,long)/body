{
  RelationshipRecord record;
  long inUseByte=buffer.get();
  boolean inUse=(inUseByte & 0x1) == Record.IN_USE.intValue();
  if (inUse) {
    long firstNode=LegacyStore.getUnsignedInt(buffer);
    long firstNodeMod=(inUseByte & 0xEL) << 31;
    long secondNode=LegacyStore.getUnsignedInt(buffer);
    long typeInt=buffer.getInt();
    long secondNodeMod=(typeInt & 0x70000000L) << 4;
    int type=(int)(typeInt & 0xFFFF);
    record=new RelationshipRecord(id,LegacyStore.longFromIntAndMod(firstNode,firstNodeMod),LegacyStore.longFromIntAndMod(secondNode,secondNodeMod),type);
    record.setInUse(inUse);
    long firstPrevRel=LegacyStore.getUnsignedInt(buffer);
    long firstPrevRelMod=(typeInt & 0xE000000L) << 7;
    record.setFirstPrevRel(LegacyStore.longFromIntAndMod(firstPrevRel,firstPrevRelMod));
    long firstNextRel=LegacyStore.getUnsignedInt(buffer);
    long firstNextRelMod=(typeInt & 0x1C00000L) << 10;
    record.setFirstNextRel(LegacyStore.longFromIntAndMod(firstNextRel,firstNextRelMod));
    long secondPrevRel=LegacyStore.getUnsignedInt(buffer);
    long secondPrevRelMod=(typeInt & 0x380000L) << 13;
    record.setSecondPrevRel(LegacyStore.longFromIntAndMod(secondPrevRel,secondPrevRelMod));
    long secondNextRel=LegacyStore.getUnsignedInt(buffer);
    long secondNextRelMod=(typeInt & 0x70000L) << 16;
    record.setSecondNextRel(LegacyStore.longFromIntAndMod(secondNextRel,secondNextRelMod));
    long nextProp=LegacyStore.getUnsignedInt(buffer);
    long nextPropMod=(inUseByte & 0xF0L) << 28;
    record.setNextProp(LegacyStore.longFromIntAndMod(nextProp,nextPropMod));
  }
 else {
    record=new RelationshipRecord(id,-1,-1,-1);
    record.setInUse(false);
  }
  return record;
}
