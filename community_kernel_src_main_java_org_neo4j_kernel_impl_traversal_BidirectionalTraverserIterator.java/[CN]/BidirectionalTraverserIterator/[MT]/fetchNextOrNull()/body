{
  if (foundPaths != null) {
    if (foundPaths.hasNext()) {
      numberOfPathsReturned++;
      Path next=foundPaths.next();
      return next;
    }
    foundPaths=null;
  }
  TraversalBranch result=null;
  while (true) {
    result=selector.next(this);
    if (result == null) {
      return null;
    }
    Iterable<Path> pathCollisions=collisionDetector.evaluate(result,selector.currentSide());
    if (pathCollisions != null) {
      foundPaths=uniquenessFiltered(pathCollisions.iterator());
      if (foundPaths.hasNext()) {
        numberOfPathsReturned++;
        Path next=foundPaths.next();
        return next;
      }
    }
  }
}
