{
  LifeSupport life=new LifeSupport();
  life.start();
  Locks locks=mock(Locks.class);
  when(locks.newClient()).thenReturn(mock(Locks.Client.class));
  StoreReadLayer readLayer=mock(StoreReadLayer.class);
  when(readLayer.acquireStatement()).thenReturn(mock(StoreStatement.class));
  NeoStores neoStores=mock(NeoStores.class);
  MetaDataStore metaDataStore=mock(MetaDataStore.class);
  when(metaDataStore.getLastCommittedTransaction()).thenReturn(new TransactionId(2,3,4));
  when(neoStores.getMetaDataStore()).thenReturn(metaDataStore);
  return new KernelTransactions(contextSupplier,neoStores,locks,new SimpleStatementLocksFactory(),mock(IntegrityValidator.class),null,null,null,null,null,null,null,TransactionHeaderInformationFactory.DEFAULT,readLayer,commitProcess,null,null,new TransactionHooks(),mock(ConstraintSemantics.class),mock(TransactionMonitor.class),life,new ProcedureCache(),new Config(),new Tracers("null",NullLog.getInstance()),Clock.SYSTEM_CLOCK);
}
