{
  LifeSupport life=new LifeSupport();
  life.start();
  Locks locks=mock(Locks.class);
  when(locks.newClient()).thenReturn(mock(Locks.Client.class));
  StoreReadLayer readLayer=mock(StoreReadLayer.class);
  MetaDataStore metaDataStore=mock(MetaDataStore.class);
  IntegrityValidator integrityValidator=mock(IntegrityValidator.class);
  NeoStores neoStores=mock(NeoStores.class);
  StorageEngine storageEngine=mock(StorageEngine.class);
  when(storageEngine.storeReadLayer()).thenReturn(readLayer);
  when(storageEngine.neoStores()).thenReturn(neoStores);
  when(storageEngine.metaDataStore()).thenReturn(metaDataStore);
  when(storageEngine.integrityValidator()).thenReturn(integrityValidator);
  when(storageEngine.createCommands(any(TransactionState.class),any(LegacyIndexTransactionState.class),any(Locks.Client.class),anyLong())).thenReturn(sillyCommandList());
  return new KernelTransactions(contextSupplier,locks,null,null,null,TransactionHeaderInformationFactory.DEFAULT,commitProcess,null,null,new TransactionHooks(),mock(TransactionMonitor.class),life,new Tracers("null",NullLog.getInstance()),storageEngine);
}
