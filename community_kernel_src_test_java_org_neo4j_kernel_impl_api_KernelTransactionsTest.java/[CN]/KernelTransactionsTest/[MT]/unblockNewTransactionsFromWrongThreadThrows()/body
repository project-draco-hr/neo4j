{
  KernelTransactions kernelTransactions=newKernelTransactions();
  kernelTransactions.blockNewTransactions();
  CountDownLatch aboutToStartTx=new CountDownLatch(1);
  Future<KernelTransaction> txOpener=startTxInSeparateThread(kernelTransactions,aboutToStartTx);
  await(aboutToStartTx);
  assertNotDone(txOpener);
  Future<?> wrongUnblocker=unblockTxsInSeparateThread(kernelTransactions);
  try {
    wrongUnblocker.get(2,TimeUnit.SECONDS);
  }
 catch (  Exception e) {
    assertThat(e,instanceOf(ExecutionException.class));
    assertThat(e.getCause(),instanceOf(IllegalStateException.class));
  }
  assertNotDone(txOpener);
  kernelTransactions.unblockNewTransactions();
  assertNotNull(txOpener.get(2,TimeUnit.SECONDS));
}
