{
  Map<String,Object> def=new HashMap<String,Object>();
  Map<String,Object> services=new HashMap<String,Object>();
  GraphDatabaseService currentDb;
  try {
    currentDb=NeoServer.server().database().db;
    if (currentDb instanceof EmbeddedGraphDatabase) {
      services.put("importing",baseUri + ImportService.ROOT_PATH);
      services.put("exporting",baseUri + ExportService.ROOT_PATH);
      services.put("console",baseUri + ConsoleService.ROOT_PATH);
      services.put("jmx",baseUri + JmxService.ROOT_PATH);
      services.put("monitor",baseUri + MonitorService.ROOT_PATH);
    }
 else     if (currentDb instanceof RemoteGraphDatabase) {
      services.put("importing",baseUri + ImportService.ROOT_PATH);
      services.put("config",baseUri + ConfigService.ROOT_PATH);
      services.put("exporting",baseUri + ExportService.ROOT_PATH);
      services.put("console",baseUri + ConsoleService.ROOT_PATH);
    }
  }
 catch (  DatabaseBlockedException e) {
    services.put("lifecycle",baseUri + LifecycleService.ROOT_PATH);
  }
  def.put("services",services);
  return def;
}
