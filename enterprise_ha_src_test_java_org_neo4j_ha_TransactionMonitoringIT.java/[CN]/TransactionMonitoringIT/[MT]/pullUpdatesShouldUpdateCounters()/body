{
  ClusterManager clusterManager=new ClusterManager(fromXml(getClass().getResource("/threeinstances.xml").toURI()),TargetDirectory.forTest(getClass()).directory("testCluster",true),MapUtil.stringMap(HaSettings.ha_server.name(),":6001-6005",HaSettings.tx_push_factor.name(),"0"));
  EideticTransactionMonitor masterMonitor=new EideticTransactionMonitor();
  EideticTransactionMonitor firstSlaveMonitor=new EideticTransactionMonitor();
  try {
    clusterManager.start();
    clusterManager.getDefaultCluster().await(allSeesAllAsAvailable());
    GraphDatabaseAPI master=clusterManager.getDefaultCluster().getMaster();
    master.getDependencyResolver().resolveDependency(Monitors.class).addMonitorListener(masterMonitor,XaResourceManager.class.getName(),NeoStoreXaDataSource.DEFAULT_DATA_SOURCE_NAME);
    HighlyAvailableGraphDatabase firstSlave=clusterManager.getDefaultCluster().getAnySlave();
    firstSlave.getDependencyResolver().resolveDependency(Monitors.class).addMonitorListener(firstSlaveMonitor,XaResourceManager.class.getName(),NeoStoreXaDataSource.DEFAULT_DATA_SOURCE_NAME);
    for (int i=0; i < 10; i++) {
      Transaction tx=master.beginTx();
      master.createNode();
      tx.success();
      tx.finish();
    }
    firstSlave.getDependencyResolver().resolveDependency(UpdatePuller.class).pullUpdates();
  }
  finally {
    clusterManager.stop();
  }
  assertEquals(0,firstSlaveMonitor.getCommitCount());
  assertEquals(10,firstSlaveMonitor.getInjectOnePhaseCommitCount());
  assertEquals(0,firstSlaveMonitor.getInjectTwoPhaseCommitCount());
}
