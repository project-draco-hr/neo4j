{
  ClusterManager clusterManager=new ClusterManager(fromXml(getClass().getResource("/threeinstances.xml").toURI()),TargetDirectory.forTest(getClass()).cleanDirectory("testCluster"),MapUtil.stringMap(HaSettings.ha_server.name(),":6001-6005",HaSettings.tx_push_factor.name(),"2"));
  EideticTransactionMonitor masterMonitor=new EideticTransactionMonitor();
  EideticTransactionMonitor firstSlaveMonitor=new EideticTransactionMonitor();
  EideticTransactionMonitor secondSlaveMonitor=new EideticTransactionMonitor();
  try {
    clusterManager.start();
    clusterManager.getDefaultCluster().await(allSeesAllAsAvailable());
    GraphDatabaseAPI master=clusterManager.getDefaultCluster().getMaster();
    master.getDependencyResolver().resolveDependency(Monitors.class).addMonitorListener(masterMonitor,XaResourceManager.class.getName(),NeoStoreXaDataSource.DEFAULT_DATA_SOURCE_NAME);
    HighlyAvailableGraphDatabase firstSlave=clusterManager.getDefaultCluster().getAnySlave();
    firstSlave.getDependencyResolver().resolveDependency(Monitors.class).addMonitorListener(firstSlaveMonitor,XaResourceManager.class.getName(),NeoStoreXaDataSource.DEFAULT_DATA_SOURCE_NAME);
    HighlyAvailableGraphDatabase secondSlave=clusterManager.getDefaultCluster().getAnySlave(firstSlave);
    secondSlave.getDependencyResolver().resolveDependency(Monitors.class).addMonitorListener(secondSlaveMonitor,XaResourceManager.class.getName(),NeoStoreXaDataSource.DEFAULT_DATA_SOURCE_NAME);
    Transaction tx=master.beginTx();
    master.createNode();
    tx.success();
    tx.finish();
    tx=firstSlave.beginTx();
    firstSlave.createNode();
    tx.success();
    tx.finish();
    tx=secondSlave.beginTx();
    secondSlave.createNode();
    tx.success();
    tx.finish();
  }
  finally {
    clusterManager.stop();
  }
  assertEquals(3,masterMonitor.getCommitCount());
  assertEquals(0,masterMonitor.getInjectOnePhaseCommitCount());
  assertEquals(0,masterMonitor.getInjectTwoPhaseCommitCount());
  assertEquals(1,firstSlaveMonitor.getCommitCount());
  assertEquals(2,firstSlaveMonitor.getInjectOnePhaseCommitCount());
  assertEquals(0,firstSlaveMonitor.getInjectTwoPhaseCommitCount());
  assertEquals(1,secondSlaveMonitor.getCommitCount());
  assertEquals(2,secondSlaveMonitor.getInjectOnePhaseCommitCount());
  assertEquals(0,secondSlaveMonitor.getInjectTwoPhaseCommitCount());
}
