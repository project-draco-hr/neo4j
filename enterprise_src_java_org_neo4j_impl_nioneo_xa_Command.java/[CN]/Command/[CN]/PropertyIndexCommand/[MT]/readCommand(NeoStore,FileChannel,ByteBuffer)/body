{
  buffer.clear();
  buffer.limit(17);
  if (fileChannel.read(buffer) != buffer.limit()) {
    return null;
  }
  buffer.flip();
  int id=buffer.getInt();
  byte inUseFlag=buffer.get();
  boolean inUse=false;
  if ((inUseFlag & Record.IN_USE.byteValue()) == Record.IN_USE.byteValue()) {
    inUse=true;
  }
 else   if (inUseFlag != Record.NOT_IN_USE.byteValue()) {
    throw new IOException("Illegal in use flag: " + inUseFlag);
  }
  PropertyIndexRecord record=new PropertyIndexRecord(id);
  record.setInUse(inUse);
  record.setPropertyCount(buffer.getInt());
  record.setKeyBlockId(buffer.getInt());
  int nrKeyRecords=buffer.getInt();
  for (int i=0; i < nrKeyRecords; i++) {
    DynamicRecord dr=readDynamicRecord(fileChannel,buffer);
    if (dr == null) {
      return null;
    }
    record.addKeyRecord(dr);
  }
  return new PropertyIndexCommand(neoStore.getPropertyStore().getIndexStore(),record);
}
