{
  int concurrentNodeIdsRange=concurrentBatches * idBatchSize;
  batch.parallelizableWithPrevious=concurrentBatches < MAX_PARALLELIZABLE_BATCHES && !anyIdCollides(concurrentNodeIds,concurrentNodeIdsRange,batch.sortedIds,batch.ids.length);
  batch.firstRecordId=firstRecordId;
  sender.send(batch);
  firstRecordId+=batch.input.length;
  if (firstRecordId <= IdGeneratorImpl.INTEGER_MINUS_ONE && firstRecordId + batchSize >= IdGeneratorImpl.INTEGER_MINUS_ONE) {
    firstRecordId=IdGeneratorImpl.INTEGER_MINUS_ONE + 1;
  }
  if (batch.parallelizableWithPrevious) {
    mergeSortedInto(batch.sortedIds,concurrentNodeIds,concurrentNodeIdsRange);
    concurrentBatches++;
  }
 else {
    System.arraycopy(batch.sortedIds,0,concurrentNodeIds,0,batch.sortedIds.length);
    concurrentBatches=1;
  }
}
