{
  try {
    int numberOfDeclaredArguments=signature.inputSignature().size();
    if (numberOfDeclaredArguments != input.length) {
      throw new ProcedureException(Status.Procedure.ProcedureCallFailed,"Procedure `%s` takes %d arguments but %d was provided.",signature.name(),numberOfDeclaredArguments,input.length);
    }
    Object cls=constructor.invoke();
    for (    FieldInjections.FieldSetter setter : fieldSetters) {
      setter.apply(ctx,cls);
    }
    Object[] args=new Object[numberOfDeclaredArguments + 1];
    args[0]=cls;
    System.arraycopy(input,0,args,1,numberOfDeclaredArguments);
    Object rs=procedureMethod.invokeWithArguments(args);
    if (rs == null) {
      return asRawIterator(emptyIterator());
    }
 else {
      return new MappingIterator(((Stream<?>)rs).iterator());
    }
  }
 catch (  Throwable throwable) {
    if (throwable instanceof Status.HasStatus) {
      throw new ProcedureException(((Status.HasStatus)throwable).status(),throwable,throwable.getMessage());
    }
 else {
      throw new ProcedureException(Status.Procedure.ProcedureCallFailed,throwable,"Failed to invoke procedure `%s`: %s",signature.name(),"Caused by: " + throwable);
    }
  }
}
