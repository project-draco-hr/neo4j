{
  if (nextElement != null) {
    return true;
  }
  do {
    if (currentTypeIterator.hasNext()) {
      int nextId=currentTypeIterator.next();
      try {
        Relationship possibleElement=nodeManager.getRelationshipById(nextId);
        if (direction == Direction.INCOMING && possibleElement.getEndNode().equals(fromNode)) {
          nextElement=possibleElement;
          return true;
        }
 else         if (direction == Direction.OUTGOING && possibleElement.getStartNode().equals(fromNode)) {
          nextElement=possibleElement;
          return true;
        }
 else         if (direction == Direction.BOTH) {
          nextElement=possibleElement;
          return true;
        }
      }
 catch (      NotFoundException e) {
        log.log(Level.FINE,"Unable to get relationship " + nextId,e);
      }
    }
    while (!currentTypeIterator.hasNext()) {
      if (typeIterator.hasNext()) {
        currentTypeIterator=typeIterator.next();
        visitedTypes.add(currentTypeIterator.getType());
      }
 else {
        boolean gotMore=fromNode.getMoreRelationships();
        List<RelTypeElementIterator> list=Collections.EMPTY_LIST;
        if (types.length == 0) {
          list=fromNode.getAllRelationships();
        }
 else {
          list=fromNode.getAllRelationshipsOfType(types);
        }
        Iterator<RelTypeElementIterator> itr=list.iterator();
        while (itr.hasNext()) {
          RelTypeElementIterator element=itr.next();
          if (visitedTypes.contains(element.getType())) {
            itr.remove();
          }
        }
        typeIterator=list.iterator();
        if (typeIterator.hasNext()) {
          currentTypeIterator=typeIterator.next();
          visitedTypes.add(currentTypeIterator.getType());
        }
        if (!gotMore) {
          break;
        }
      }
    }
  }
 while (currentTypeIterator.hasNext());
  return false;
}
