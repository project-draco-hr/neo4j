{
  GraphDatabaseService beansAPI=dbRule.getGraphDatabaseService();
  Node myNode=createNode(beansAPI,map("name","Hawking"),LABEL1,LABEL2);
  Neo4jMatchers.createIndex(beansAPI,LABEL1,"name");
  Neo4jMatchers.createIndex(beansAPI,LABEL2,"name");
  Neo4jMatchers.createIndex(beansAPI,LABEL3,"name");
  try (Transaction tx=beansAPI.beginTx()){
    myNode.removeLabel(LABEL1);
    myNode.addLabel(LABEL3);
    myNode.setProperty("name","Einstein");
    tx.success();
  }
   assertThat(myNode,inTx(beansAPI,hasProperty("name").withValue("Einstein")));
  assertThat(labels(myNode),containsOnly(LABEL2,LABEL3));
  assertThat(findNodesByLabelAndProperty(LABEL1,"name","Hawking",beansAPI),isEmpty());
  assertThat(findNodesByLabelAndProperty(LABEL1,"name","Einstein",beansAPI),isEmpty());
  assertThat(findNodesByLabelAndProperty(LABEL2,"name","Hawking",beansAPI),isEmpty());
  assertThat(findNodesByLabelAndProperty(LABEL2,"name","Einstein",beansAPI),containsOnly(myNode));
  assertThat(findNodesByLabelAndProperty(LABEL3,"name","Hawking",beansAPI),isEmpty());
  assertThat(findNodesByLabelAndProperty(LABEL3,"name","Einstein",beansAPI),containsOnly(myNode));
}
