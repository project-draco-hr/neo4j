{
  GraphDatabaseService beansAPI=dbRule.getGraphDatabaseAPI();
  long smallValue=10L, bigValue=1L << 62;
  Node myNode;
{
    try (Transaction tx=beansAPI.beginTx()){
      myNode=beansAPI.createNode(LABEL1);
      myNode.setProperty("pad0",true);
      myNode.setProperty("pad1",true);
      myNode.setProperty("pad2",true);
      myNode.setProperty("key",smallValue);
      tx.success();
    }
   }
  Neo4jMatchers.createIndex(beansAPI,LABEL1,"key");
  try (Transaction tx=beansAPI.beginTx()){
    myNode.setProperty("key",bigValue);
    tx.success();
  }
   assertThat(findNodesByLabelAndProperty(LABEL1,"key",bigValue,beansAPI),containsOnly(myNode));
  assertThat(findNodesByLabelAndProperty(LABEL1,"key",smallValue,beansAPI),isEmpty());
}
