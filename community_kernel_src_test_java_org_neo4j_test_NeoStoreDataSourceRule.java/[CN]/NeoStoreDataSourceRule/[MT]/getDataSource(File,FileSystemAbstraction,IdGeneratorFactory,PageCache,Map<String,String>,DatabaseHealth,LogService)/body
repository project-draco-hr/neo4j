{
  if (dataSource != null) {
    dataSource.stop();
    dataSource.shutdown();
  }
  final Config config=new Config(stringMap(additionalConfig),GraphDatabaseSettings.class);
  Locks locks=mock(Locks.class);
  when(locks.newClient()).thenReturn(mock(Locks.Client.class));
  JobScheduler jobScheduler=mock(JobScheduler.class,RETURNS_MOCKS);
  Monitors monitors=new Monitors();
  dataSource=new NeoStoreDataSource(storeDir,config,idGeneratorFactory,logService,mock(JobScheduler.class,RETURNS_MOCKS),mock(TokenNameLookup.class),dependencyResolverForNoIndexProvider(),mock(PropertyKeyTokenHolder.class),mock(LabelTokenHolder.class),mock(RelationshipTypeTokenHolder.class),locks,mock(SchemaWriteGuard.class),mock(TransactionEventHandlers.class),IndexingService.NO_MONITOR,fs,mock(TransactionMonitor.class),databaseHealth,mock(PhysicalLogFile.Monitor.class),TransactionHeaderInformationFactory.DEFAULT,new StartupStatisticsProvider(),null,new CommunityCommitProcessFactory(),mock(InternalAutoIndexing.class),pageCache,new StandardConstraintSemantics(),monitors,new Tracers("null",NullLog.getInstance(),monitors,jobScheduler),mock(Procedures.class),IOLimiter.unlimited());
  return dataSource;
}
