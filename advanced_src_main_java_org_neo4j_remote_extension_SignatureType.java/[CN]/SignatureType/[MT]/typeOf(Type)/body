{
  if (type instanceof ParameterizedType) {
    ParameterizedType param=(ParameterizedType)type;
    if (param.getRawType() == Iterable.class) {
      Type[] args=param.getActualTypeArguments();
      if (args != null && args.length == 1) {
        if (args[0] instanceof Class) {
          Class<?> cls=(Class<?>)args[0];
          return new SequenceType(TypeBase.ITERABLE,typeOf(cls));
        }
 else {
          throw illegal(args[0]);
        }
      }
      return new SequenceType(TypeBase.ITERABLE,PROPERTY_VALUE);
    }
 else {
      throw illegal(type);
    }
  }
 else   if (type instanceof Class) {
    Class<?> cls=(Class<?>)type;
    if (cls.isArray()) {
      return new SequenceType(TypeBase.ARRAY,typeOf(cls.getComponentType()));
    }
 else {
      TypeBase base=primitives.get(cls);
      if (base == null) {
        return null;
      }
 else {
        SignatureType result=basics.get(base);
        if (result == null) {
          throw illegal(cls);
        }
        return result;
      }
    }
  }
 else {
    throw new IllegalArgumentException("Cannot parse type: " + type);
  }
}
