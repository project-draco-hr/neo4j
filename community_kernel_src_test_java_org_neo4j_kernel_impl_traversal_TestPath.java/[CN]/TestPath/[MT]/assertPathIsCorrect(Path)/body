{
  Node a=node("A");
  Relationship to1=a.getRelationships(Direction.OUTGOING).iterator().next();
  Node b=to1.getEndNode();
  Relationship to2=b.getRelationships(Direction.OUTGOING).iterator().next();
  Node c=to2.getEndNode();
  Relationship to3=c.getRelationships(Direction.OUTGOING).iterator().next();
  Node d=to3.getEndNode();
  Relationship to4=d.getRelationships(Direction.OUTGOING).iterator().next();
  Node e=to4.getEndNode();
  assertEquals((Integer)4,(Integer)path.length());
  assertEquals(a,path.startNode());
  assertEquals(e,path.endNode());
  assertEquals(to4,path.lastRelationship());
  assertContainsInOrder(path,a,to1,b,to2,c,to3,d,to4,e);
  assertContainsInOrder(path.nodes(),a,b,c,d,e);
  assertContainsInOrder(path.relationships(),to1,to2,to3,to4);
  assertContainsInOrder(path.reverseNodes(),e,d,c,b,a);
  assertContainsInOrder(path.reverseRelationships(),to4,to3,to2,to1);
}
