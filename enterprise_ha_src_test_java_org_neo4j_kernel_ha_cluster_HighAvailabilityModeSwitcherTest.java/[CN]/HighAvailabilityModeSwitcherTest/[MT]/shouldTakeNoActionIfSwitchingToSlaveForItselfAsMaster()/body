{
  SwitchToSlave switchToSlave=mock(SwitchToSlave.class);
  AssertableLogProvider logProvider=new AssertableLogProvider();
  SimpleLogService logService=new SimpleLogService(NullLogProvider.getInstance(),logProvider);
  HighAvailabilityModeSwitcher toTest=new HighAvailabilityModeSwitcher(switchToSlave,mock(SwitchToMaster.class),mock(Election.class),mock(ClusterMemberAvailability.class),mock(ClusterClient.class),storeSupplierMock(),new InstanceId(2),logService);
  toTest.init();
  toTest.start();
  URI serverHaUri=URI.create("ha://server2?serverId=2");
  toTest.listeningAt(serverHaUri);
  toTest.masterIsAvailable(new HighAvailabilityMemberChangeEvent(PENDING,TO_SLAVE,new InstanceId(2),serverHaUri));
  verifyZeroInteractions(switchToSlave);
  logProvider.assertAtLeastOnce(inLog(HighAvailabilityModeSwitcher.class).error("I (ha://server2?serverId=2) tried to switch to " + "slave for myself as master (ha://server2?serverId=2)"));
}
