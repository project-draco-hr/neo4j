{
  SwitchToSlave switchToSlave=mock(SwitchToSlave.class);
  Logging logging=mock(Logging.class);
  TestLogger msgLog=new TestLogger();
  when(logging.getMessagesLog(HighAvailabilityModeSwitcher.class)).thenReturn(msgLog);
  HighAvailabilityModeSwitcher toTest=new HighAvailabilityModeSwitcher(switchToSlave,mock(SwitchToMaster.class),mock(Election.class),mock(ClusterMemberAvailability.class),dependencyResolverMock(),new InstanceId(2),logging,neoStoreDataSourceSupplierMock());
  toTest.init();
  toTest.start();
  URI serverHaUri=URI.create("ha://server2?serverId=2");
  toTest.masterIsAvailable(new HighAvailabilityMemberChangeEvent(PENDING,TO_SLAVE,new InstanceId(2),serverHaUri));
  verifyZeroInteractions(switchToSlave);
  msgLog.assertLogCallAtLevel("ERROR",1);
}
