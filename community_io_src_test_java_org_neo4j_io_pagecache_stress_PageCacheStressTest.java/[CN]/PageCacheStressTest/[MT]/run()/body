{
  DefaultFileSystemAbstraction fs=new DefaultFileSystemAbstraction();
  PageSwapperFactory swapperFactory=new SingleFilePageSwapperFactory(fs);
  RunnablePageCache pageCacheUnderTest=new MuninnPageCache(swapperFactory,numberOfCachePages,cachePageSize,tracer);
  RunnablePageCache pageCacheKeepingCount=new MuninnPageCache(swapperFactory,numberOfCachePages,cachePageSize,tracer);
  Thread thread1=new Thread(pageCacheUnderTest);
  Thread thread2=new Thread(pageCacheKeepingCount);
  thread1.start();
  thread2.start();
  try {
    File file=Files.createTempFile(get(workingDirectory),"pagecachekeepingcounts",".bin").toFile();
    file.deleteOnExit();
    PagedFile pagedFile=pageCacheKeepingCount.map(file,recordsPerPage * numberOfThreads * SizeOfCounter);
    CountKeeperFactory countKeeperFactory=new CountKeeperFactory(pagedFile,recordsPerPage,numberOfThreads);
    PageCacheStresser pageCacheStresser=new PageCacheStresser(numberOfPages,recordsPerPage,numberOfThreads,workingDirectory);
    pageCacheStresser.stress(pageCacheUnderTest,condition,countKeeperFactory);
    pagedFile.close();
  }
  finally {
    thread1.interrupt();
    thread2.interrupt();
    thread1.join();
    thread2.join();
    pageCacheUnderTest.close();
  }
}
