{
  NodeRecord nodeRecord=getNodeRecord(nodeId);
  if (nodeRecord == null) {
    nodeRecord=getNodeStore().getRecord(nodeId);
    addNodeRecord(nodeRecord);
  }
  if (!nodeRecord.inUse()) {
    throw new IllegalStateException("Unable to delete Node[" + nodeId + "] since it has already been deleted.");
  }
  nodeRecord.setInUse(false);
  ArrayMap<Integer,PropertyData> propertyMap=new ArrayMap<Integer,PropertyData>(9,false,true);
  int nextProp=nodeRecord.getNextProp();
  while (nextProp != Record.NO_NEXT_PROPERTY.intValue()) {
    PropertyRecord propRecord=getPropertyRecord(nextProp);
    if (propRecord == null) {
      propRecord=getPropertyStore().getRecord(nextProp);
      addPropertyRecord(propRecord);
    }
    if (propRecord.isLight()) {
      getPropertyStore().makeHeavy(propRecord);
    }
    if (!propRecord.isCreated()) {
      if (!propRecord.isChanged()) {
        propertyMap.put(propRecord.getKeyIndexId(),new PropertyData(propRecord.getId(),propertyGetValueOrNull(propRecord)));
      }
 else {
        PropertyRecord diskValue=getPropertyStore().getRecord(propRecord.getId());
        getPropertyStore().makeHeavy(diskValue);
        propertyMap.put(diskValue.getKeyIndexId(),new PropertyData(diskValue.getId(),propertyGetValueOrNull(diskValue)));
      }
    }
    nextProp=propRecord.getNextProp();
    propRecord.setInUse(false);
    for (    DynamicRecord valueRecord : propRecord.getValueRecords()) {
      valueRecord.setInUse(false);
    }
  }
  return propertyMap;
}
