{
  Cursor<LogEntry,IOException> cursor=deserializer.cursor(source);
  LogEntryCollectingConsumer consumer=new LogEntryCollectingConsumer();
  long lastCommitEntryTxId=-1;
  LogEntry entry=null;
  while (true) {
    if (!collector.hasInFutureQueue()) {
      cursor.next(consumer);
      entry=consumer.getLastEntry();
    }
    if (entry == null) {
      break;
    }
    LogEntry foundEntry=collector.collect(entry,target);
    if (foundEntry != null) {
      previousCommitEntry=lastCommitEntry;
      logEntryWriter.writeLogEntry(new LogEntry.Done(collector.getIdentifier()),target);
      lastCommitEntry=(LogEntry.Commit)foundEntry;
      lastCommitEntryTxId=lastCommitEntry.getTxId();
      break;
    }
  }
  return lastCommitEntryTxId;
}
