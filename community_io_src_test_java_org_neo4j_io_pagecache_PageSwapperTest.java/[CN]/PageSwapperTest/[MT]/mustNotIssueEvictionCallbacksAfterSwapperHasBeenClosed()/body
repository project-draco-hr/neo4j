{
  final AtomicBoolean gotCallback=new AtomicBoolean();
  PageEvictionCallback callback=new PageEvictionCallback(){
    @Override public void onEvict(    long filePageId,    Page page){
      gotCallback.set(true);
    }
  }
;
  File file=new File("file");
  ensureFileExists(file);
  PageSwapperFactory factory=swapperFactory();
  PageSwapper swapper=factory.createPageSwapper(file,cachePageSize(),callback,false);
  Page page=createPage();
  swapper.close();
  swapper.evicted(42,page);
  assertFalse(gotCallback.get());
}
