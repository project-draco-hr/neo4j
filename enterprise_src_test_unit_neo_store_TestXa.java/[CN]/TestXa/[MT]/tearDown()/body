{
  log.setLevel(level);
  log=Logger.getLogger("org.neo4j.impl.transaction.xaframework.XaLogicalLog/" + "nioneo_logical.log");
  log.setLevel(level);
  log=Logger.getLogger("org.neo4j.impl.nioneo.xa.NeoStoreXaDataSource");
  log.setLevel(level);
  File file=new File("neo");
  file.delete();
  file=new File("neo.id");
  file.delete();
  file=new File("neo.nodestore.db");
  file.delete();
  file=new File("neo.nodestore.db.id");
  file.delete();
  file=new File("neo.propertystore.db");
  file.delete();
  file=new File("neo.propertystore.db.id");
  file.delete();
  file=new File("neo.propertystore.db.keys");
  file.delete();
  file=new File("neo.propertystore.db.keys.id");
  file.delete();
  file=new File("neo.propertystore.db.strings");
  file.delete();
  file=new File("neo.propertystore.db.strings.id");
  file.delete();
  file=new File("neo.relationshipstore.db");
  file.delete();
  file=new File("neo.relationshipstore.db.id");
  file.delete();
  file=new File("neo.relationshiptypestore.db");
  file.delete();
  file=new File("neo.relationshiptypestore.db.id");
  file.delete();
  file=new File("neo.relationshiptypestore.db.names");
  file.delete();
  file=new File("neo.relationshiptypestore.db.names.id");
  file.delete();
  file=new File(".");
  for (  File nioFile : file.listFiles()) {
    if (nioFile.getName().startsWith("nioneo_logical.log")) {
      nioFile.delete();
    }
  }
}
