{
  ManagedCluster cluster=clusterRule.startCluster();
  final HighlyAvailableGraphDatabase master=cluster.getMaster();
{
    try (Transaction tx=master.beginTx()){
      for (int i=0; i < 1000; i++) {
        master.createNode().setProperty("foo","bar");
      }
      tx.success();
    }
   }
  HighlyAvailableGraphDatabase slave=cluster.getAnySlave();
  ClusterManager.RepairKit repairKit=cluster.fail(slave);
  for (int i=0; i < 1000; i++) {
{
      try (Transaction tx=master.beginTx()){
        for (int j=0; j < 1000; j++) {
          master.createNode().setProperty("foo","bar");
          master.createNode().setProperty("foo","bar");
        }
        tx.success();
      }
     }
  }
  repairKit.repair();
  cluster.await(ClusterManager.masterSeesSlavesAsAvailable(1));
  ExecutorService executor=Executors.newFixedThreadPool(20);
  for (int i=0; i < 20; i++) {
    executor.submit(new Runnable(){
      @Override public void run(){
        try (Transaction tx=master.beginTx()){
          master.createNode().setProperty("foo","bar");
          tx.success();
        }
       }
    }
);
  }
  executor.shutdown();
  executor.awaitTermination(1,TimeUnit.MINUTES);
  long masterLastCommittedTxId=lastCommittedTxId(master);
  for (  HighlyAvailableGraphDatabase member : cluster.getAllMembers()) {
    assertEquals(masterLastCommittedTxId,lastCommittedTxId(member));
  }
}
