{
  List<Pair<Client,Future<Object>>> calls=new ArrayList<>();
  for (  LockCommand command : commands) {
    calls.add(Pair.of(command.client(),command.call()));
  }
  long timeout=System.currentTimeMillis() + (1000 * 10);
  while (System.currentTimeMillis() < timeout) {
    for (    Pair<Client,Future<Object>> call : calls) {
      try {
        call.other().get(1,TimeUnit.MILLISECONDS);
      }
 catch (      ExecutionException e) {
        if (e.getCause() instanceof DeadlockDetectedException) {
          return;
        }
 else {
          throw new RuntimeException(e);
        }
      }
catch (      InterruptedException|TimeoutException e) {
      }
    }
  }
  throw new AssertionError("Failed to detect deadlock. Expected lock manager to detect deadlock, " + "but none of the clients reported any deadlocks.");
}
