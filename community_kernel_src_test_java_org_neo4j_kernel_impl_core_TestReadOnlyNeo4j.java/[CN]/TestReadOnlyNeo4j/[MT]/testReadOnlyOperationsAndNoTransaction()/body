{
  GraphDatabaseService db=new TestGraphDatabaseFactory().setFileSystem(fs.get()).newImpermanentDatabase(PATH);
  Transaction tx=db.beginTx();
  Node node1=db.createNode();
  Node node2=db.createNode();
  Relationship rel=node1.createRelationshipTo(node2,withName("TEST"));
  node1.setProperty("key1","value1");
  rel.setProperty("key1","value1");
  tx.success();
  tx.finish();
  try {
    db.createNode();
    fail("Write operation and no transaction should throw exception");
  }
 catch (  NotInTransactionException e) {
  }
  try {
    node1.createRelationshipTo(node2,withName("TEST2"));
    fail("Write operation and no transaction should throw exception");
  }
 catch (  NotInTransactionException e) {
  }
  try {
    node1.setProperty("key1","value2");
    fail("Write operation and no transaction should throw exception");
  }
 catch (  NotInTransactionException e) {
  }
  try {
    rel.removeProperty("key1");
    fail("Write operation and no transaction should throw exception");
  }
 catch (  NotInTransactionException e) {
  }
  ((GraphDatabaseAPI)db).getNodeManager().clearCache();
  Transaction transaction=db.beginTx();
  assertEquals(node1,db.getNodeById(node1.getId()));
  assertEquals(node2,db.getNodeById(node2.getId()));
  assertEquals(rel,db.getRelationshipById(rel.getId()));
  ((GraphDatabaseAPI)db).getNodeManager().clearCache();
  assertThat(node1,inTx(db,hasProperty("key1").withValue("value1")));
  Relationship loadedRel=node1.getSingleRelationship(DynamicRelationshipType.withName("TEST"),Direction.OUTGOING);
  assertEquals(rel,loadedRel);
  assertThat(loadedRel,inTx(db,hasProperty("key1").withValue("value1")));
  transaction.finish();
  db.shutdown();
}
