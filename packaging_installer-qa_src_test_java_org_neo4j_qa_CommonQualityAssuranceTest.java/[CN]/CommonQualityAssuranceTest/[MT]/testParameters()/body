{
  Map<String,Neo4jDriver[]> platforms=new HashMap<String,Neo4jDriver[]>();
  List<Object[]> testParameters=new ArrayList<Object[]>();
  VirtualMachine windows=vm(Neo4jVM.WIN_1);
  VirtualMachine ubuntu=vm(Neo4jVM.UBUNTU_1);
  platforms.put(Platforms.WINDOWS,new Neo4jDriver[]{new WindowsBaseDriver(windows,SharedConstants.WINDOWS_COMMUNITY_INSTALLER),new WindowsBaseDriver(windows,SharedConstants.WINDOWS_ADVANCED_INSTALLER),new WindowsEnterpriseDriver(windows,SharedConstants.WINDOWS_ENTERPRISE_INSTALLER,SharedConstants.WINDOWS_COORDINATOR_INSTALLER)});
  platforms.put(Platforms.UBUNTU_DEB,new Neo4jDriver[]{new UbuntuDebBaseDriver(ubuntu,SharedConstants.DEBIAN_COMMUNITY_INSTALLER),new UbuntuDebAdvancedDriver(ubuntu,SharedConstants.DEBIAN_ADVANCED_INSTALLER),new UbuntuDebEnterpriseDriver(ubuntu,SharedConstants.DEBIAN_ENTERPRISE_INSTALLER,SharedConstants.DEBIAN_COORDINATOR_INSTALLER)});
  platforms.put(Platforms.UBUNTU_TAR_GZ,new Neo4jDriver[]{new UbuntuTarGzBaseDriver(ubuntu,SharedConstants.UNIX_COMMUNITY_TARBALL),new UbuntuTarGzBaseDriver(ubuntu,SharedConstants.UNIX_ADVANCED_TARBALL),new UbuntuTarGzEnterpriseDriver(ubuntu,SharedConstants.UNIX_ENTERPRISE_TARBALL,SharedConstants.UNIX_COORDINATOR_TARBALL)});
  for (  String platformKey : Platforms.selectedPlatforms()) {
    if (platforms.containsKey(platformKey)) {
      for (      Neo4jDriver d : platforms.get(platformKey)) {
        String name=CommonQualityAssuranceTest.class.getName() + "_" + d.getClass().getName();
        testParameters.add(new Object[]{name,d});
      }
    }
  }
  return testParameters;
}
