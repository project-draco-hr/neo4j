{
  Thread thread=Thread.currentThread();
  ReadOnlyTransactionImpl tx=txThreadMap.get(thread);
  if (tx == null) {
    throw new IllegalStateException("Not in transaction");
  }
  if (tx.getStatus() == Status.STATUS_ACTIVE || tx.getStatus() == Status.STATUS_MARKED_ROLLBACK || tx.getStatus() == Status.STATUS_PREPARING) {
    tx.doBeforeCompletion();
    try {
      tx.doRollback();
    }
 catch (    XAException e) {
      logger.error("Unable to rollback marked or active transaction. " + "Some resources may be commited others not. " + "Neo4j kernel should be SHUTDOWN for "+ "resource maintance and transaction recovery ---->",e);
      throw Exceptions.withCause(new SystemException("Unable to rollback " + " ---> error code for rollback: " + e.errorCode),e);
    }
    tx.doAfterCompletion();
    txThreadMap.remove(thread);
    tx.setStatus(Status.STATUS_NO_TRANSACTION);
  }
 else {
    throw new IllegalStateException("Tx status is: " + getTxStatusAsString(tx.getStatus()));
  }
}
