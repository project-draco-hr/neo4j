{
  final Collection<Pair<? extends CountsKey,Long>> records=new ArrayList<>();
  store.accept(new CountsVisitor(){
    @Override public void visitNodeCount(    int labelId,    long count){
      records.add(Pair.of(CountsKeyFactory.nodeKey(labelId),count));
    }
    @Override public void visitRelationshipCount(    int startLabelId,    int typeId,    int endLabelId,    long count){
      records.add(Pair.of(CountsKeyFactory.relationshipKey(startLabelId,typeId,endLabelId),count));
    }
    @Override public void visitIndexStatistics(    int labelId,    int propertyKeyId,    long updates,    long size){
      records.add(Pair.of(CountsKeyFactory.indexStatisticsKey(labelId,propertyKeyId),size));
    }
    @Override public void visitIndexSample(    int labelId,    int propertyKeyId,    long unique,    long size){
      records.add(Pair.of(CountsKeyFactory.indexSampleKey(labelId,propertyKeyId),size));
    }
  }
);
  return records;
}
