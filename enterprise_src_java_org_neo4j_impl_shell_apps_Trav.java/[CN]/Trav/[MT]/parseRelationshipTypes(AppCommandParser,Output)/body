{
  String option=parser.options().get("r");
  List<Object> result=new ArrayList<Object>();
  if (option == null) {
    for (    RelationshipType type : getNeoServer().getNeo().getRelationshipTypes()) {
      result.add(type);
      result.add(Direction.BOTH);
    }
  }
 else {
    Map<String,Object> map=parseFilter(option,out);
    List<RelationshipType> allRelationshipTypes=new ArrayList<RelationshipType>();
    for (    RelationshipType type : getNeoServer().getNeo().getRelationshipTypes()) {
      allRelationshipTypes.add(type);
    }
    for (    Map.Entry<String,Object> entry : map.entrySet()) {
      String type=entry.getKey();
      Direction direction=getDirection((String)entry.getValue(),Direction.BOTH);
      Pattern typePattern=Pattern.compile(type);
      for (      RelationshipType relationshipType : allRelationshipTypes) {
        if (relationshipType.name().equals(type) || matches(typePattern,relationshipType.name(),true,false)) {
          result.add(relationshipType);
          result.add(direction);
        }
      }
    }
  }
  return result.toArray();
}
