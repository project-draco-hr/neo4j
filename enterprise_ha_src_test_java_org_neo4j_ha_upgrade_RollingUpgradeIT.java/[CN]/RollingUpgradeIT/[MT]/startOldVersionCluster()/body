{
  debug("Downloading " + oldVersion + " package");
  File oldVersionPackage=downloadAndUnpack("http://neo4j.com/customer/download/neo4j-enterprise-" + oldVersion + "-windows.zip",testDirectory.directory("download"),oldVersion + "-enterprise");
  String classpath=assembleClassPathFromPackage(oldVersionPackage);
  debug("Starting " + oldVersion + " cluster in separate jvms");
  List<Future<LegacyDatabase>> legacyDbFutures=new ArrayList<>(CLUSTER_SIZE);
  for (int i=0; i < CLUSTER_SIZE; i++) {
    Future<LegacyDatabase> dbStart=LegacyDatabaseImpl.start(classpath,storeDir(i),config(i));
    legacyDbFutures.add(dbStart);
    debug("  Started " + i);
  }
  legacyDbs=new LegacyDatabase[CLUSTER_SIZE];
  for (int i=0; i < CLUSTER_SIZE; i++) {
    legacyDbs[i]=legacyDbFutures.get(i).get();
  }
  for (  LegacyDatabase db : legacyDbs) {
    debug("  Awaiting " + db.getStoreDir() + " to start");
    db.awaitStarted(10,TimeUnit.SECONDS);
    debug("  " + db.getStoreDir() + " fully started");
  }
  for (  LegacyDatabase legacyDb : legacyDbs) {
    long node=legacyDb.createNode();
    for (    LegacyDatabase db : legacyDbs) {
      db.verifyNodeExists(node);
    }
  }
  debug(oldVersion + " cluster fully operational");
  centralNode=legacyDbs[0].initialize();
}
