{
  InstanceId me=new InstanceId(1);
  InstanceId master=new InstanceId(2);
  HighAvailabilityMemberContext context=new SimpleHighAvailabilityMemberContext(me,false);
  ClusterMemberEvents events=mock(ClusterMemberEvents.class);
  ClusterMemberListenerContainer memberListenerContainer=mockAddClusterMemberListener(events);
  Election election=mock(Election.class);
  HighAvailabilityMemberStateMachine stateMachine=new StateMachineBuilder().withContext(context).withElection(election).withEvents(events).build();
  stateMachine.init();
  ClusterMemberListener memberListener=memberListenerContainer.get();
  memberListener.memberIsAvailable(HighAvailabilityModeSwitcher.MASTER,master,URI.create("2"),StoreId.DEFAULT);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.TO_SLAVE));
  memberListener.memberIsUnavailable(HighAvailabilityModeSwitcher.SLAVE,me);
  assertThat(stateMachine.getCurrentState(),equalTo(HighAvailabilityMemberState.PENDING));
  verify(election).performRoleElections();
}
