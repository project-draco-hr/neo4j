{
  Parameter[] params=method.getParameters();
  Type[] types=method.getGenericParameterTypes();
  List<FieldSignature> signature=new ArrayList<>(params.length);
  for (int i=0; i < params.length; i++) {
    Parameter param=params[i];
    Type type=types[i];
    if (!param.isAnnotationPresent(Name.class)) {
      throw new ProcedureException(Status.Procedure.FailedRegistration,Messages.get(proc_argument_missing_name,i,method.getName(),Name.class.getSimpleName()));
    }
    String name=param.getAnnotation(Name.class).value();
    if (name.trim().length() == 0) {
      throw new ProcedureException(Status.Procedure.FailedRegistration,Messages.get(proc_argument_name_empty,i,method.getName()));
    }
    try {
      signature.add(new FieldSignature(name,typeMappers.neoTypeFor(type)));
    }
 catch (    ProcedureException e) {
      throw new ProcedureException(e.status(),Messages.get(proc_unmappable_argument_type,name,i,method.getName(),param.getType().getSimpleName(),e.getMessage()));
    }
  }
  return signature;
}
