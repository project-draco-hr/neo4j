{
  createGraph("a TO b","a TO c","a TO d","a TO e","a TO e","b TO e","d TO e","c TO b");
  RelationshipType to=withName("TO");
  Transaction tx=beginTx();
  try {
    Node a=getNodeWithName("a");
    Node e=getNodeWithName("e");
    Path[] paths=splitPathsOnePerLevel(traversal().relationships(to,OUTGOING).uniqueness(NODE_LEVEL).evaluator(includeWhereEndNodeIs(e)).traverse(a));
    NodePathRepresentation pathRepresentation=new NodePathRepresentation(NAME_PROPERTY_REPRESENTATION);
    assertEquals("a,e",pathRepresentation.represent(paths[1]));
    String levelTwoPathRepresentation=pathRepresentation.represent(paths[2]);
    assertTrue(levelTwoPathRepresentation.equals("a,b,e") || levelTwoPathRepresentation.equals("a,d,e"));
    assertEquals("a,c,b,e",pathRepresentation.represent(paths[3]));
    tx.success();
  }
  finally {
    tx.finish();
  }
}
