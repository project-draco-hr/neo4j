{
  return new TypeSafeMatcher<byte[]>(){
    @Override protected boolean matchesSafely(    byte[] recordWithValue){
      PackStream.Unpacker unpacker=new PackStream.Unpacker(new BufferedChannelInput(11).reset(new ArrayByteChannel(recordWithValue)));
      try {
        unpacker.unpackStructHeader();
        unpacker.unpackStructSignature();
        unpacker.unpackListHeader();
        PackType type=unpacker.peekNextType();
        if (type.name().equalsIgnoreCase("struct")) {
          String structName=null;
          unpacker.unpackStructHeader();
          char sig=unpacker.unpackStructSignature();
switch (sig) {
case Neo4jPack.NODE:
            structName="node";
          break;
case Neo4jPack.RELATIONSHIP:
        structName="relationship";
      break;
case Neo4jPack.PATH:
    structName="path";
  break;
default :
fail("Unknown struct type: " + sig);
}
assertThat(structName,equalTo(packStreamType.toLowerCase()));
}
 else {
assertThat(type.name().toLowerCase(),equalTo(packStreamType.toLowerCase()));
}
}
 catch (IOException e) {
throw new RuntimeException(e);
}
return true;
}
@Override public void describeTo(Description description){
description.appendText("PackStream type " + packStreamType);
}
}
;
}
