{
  final int numberOfEntiesBeforeSwitchingFiles=10;
  EphemeralFileSystemAbstraction fsa=new EphemeralFileSystemAbstraction();
  fsa.mkdir(testDir.directory());
  OnDiskIdAllocationState store=new OnDiskIdAllocationState(fsa,testDir.directory(),numberOfEntiesBeforeSwitchingFiles);
  for (int i=1; i <= numberOfEntiesBeforeSwitchingFiles * 2 + 1; i++) {
    store.firstUnallocated(someType,1024 * i);
    store.logIndex(i);
  }
  assertEquals(testDir.absolutePath() + separator + "id.allocation.A",store.currentStoreFile().getAbsolutePath());
  assertEquals(NUMBER_OF_BYTES_PER_WRITE,fsa.getFileSize(store.currentStoreFile()));
  assertEquals(NUMBER_OF_BYTES_PER_WRITE,fsa.getFileSize(new File(testDir.directory(),"id.allocation.A")));
  assertEquals(numberOfEntiesBeforeSwitchingFiles * NUMBER_OF_BYTES_PER_WRITE,fsa.getFileSize(new File(testDir.directory(),"id.allocation.B")));
}
