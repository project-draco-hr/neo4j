{
  final long timestamp=3;
  try (Transaction tx=beginTx()){
    getNodeWithName("2").setProperty("timestamp",1L);
    getNodeWithName("3").setProperty("timestamp",2L);
    tx.success();
  }
   try (Transaction tx2=beginTx()){
    final RelationshipType type=RelationshipType.withName("TO");
    Iterator<Node> nodes=getGraphDb().traversalDescription().depthFirst().relationships(type,Direction.OUTGOING).evaluator(new Evaluator(){
      @Override public Evaluation evaluate(      Path path){
        Relationship rel=path.lastRelationship();
        boolean relIsOfType=rel != null && rel.isType(type);
        boolean prune=relIsOfType && ((Long)path.endNode().getProperty("timestamp")).longValue() >= timestamp;
        return Evaluation.of(relIsOfType,!prune);
      }
    }
).traverse(node("1")).nodes().iterator();
    assertEquals("2",nodes.next().getProperty("name"));
    assertEquals("3",nodes.next().getProperty("name"));
    assertFalse(nodes.hasNext());
  }
 }
