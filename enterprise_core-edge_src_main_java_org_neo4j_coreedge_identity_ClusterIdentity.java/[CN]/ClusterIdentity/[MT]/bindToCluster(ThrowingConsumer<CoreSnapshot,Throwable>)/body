{
  if (clusterIdStorage.exists()) {
    ClusterId localClusterId=clusterIdStorage.readState();
    publishClusterId(localClusterId);
    clusterId=localClusterId;
  }
 else {
    ClusterId commonClusterId;
    CoreTopology topology=topologyService.coreServers();
    if (topology.canBeBootstrapped()) {
      commonClusterId=new ClusterId(UUID.randomUUID());
      CoreSnapshot snapshot=coreBootstrapper.bootstrap(topology.members());
      snapshotInstaller.accept(snapshot);
      publishClusterId(commonClusterId);
    }
 else {
      long endTime=clock.millis() + timeoutMillis;
      log.info("Attempting to bind to : " + topology);
      while ((commonClusterId=topology.clusterId()) == null) {
        if (clock.millis() < endTime) {
          retryWaiter.apply();
          topology=topologyService.coreServers();
        }
 else {
          throw new TimeoutException(String.format("Failed to join a cluster with members %s. Another" + " member should have published a clusterId but none was detected. Please restart the " + "cluster.",topology));
        }
      }
      log.info("Bound to cluster: " + commonClusterId);
    }
    clusterIdStorage.writeState(commonClusterId);
    clusterId=commonClusterId;
  }
}
