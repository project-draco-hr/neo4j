{
  deleteFileOrDirectory(new File(PATH));
  BatchInserter inserter=BatchInserters.inserter(PATH);
  long first=inserter.getReferenceNode();
  int max=(int)pow(2,32) - 1000;
  Map<String,Object> nodeProperties=map("number",123);
  Map<String,Object> relationshipProperties=map("string","A long string, which is longer than shortstring boundaries");
  long i=0;
  for (; i < max; i++) {
    long second=inserter.createNode(nodeProperties);
    inserter.createRelationship(first,second,TYPE,relationshipProperties);
    if (i > 0 && i % 1000000 == 0)     System.out.println((i / 1000000) + "M");
    first=second;
  }
  inserter.shutdown();
  System.out.println("Switch to embedded");
  GraphDatabaseService db=new EmbeddedGraphDatabase(PATH);
  Node firstNode=db.getNodeById(first);
  Transaction tx=db.beginTx();
  for (; i < 5000000000L; i++) {
    Node secondNode=db.createNode();
    firstNode.createRelationshipTo(secondNode,TYPE);
    firstNode=secondNode;
    if (i % 100000 == 0) {
      tx.success();
      tx.finish();
      System.out.println((i / 1000000) + "M");
      tx=db.beginTx();
    }
  }
  db.shutdown();
}
