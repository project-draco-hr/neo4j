{
  if (timer != null) {
    timer.cancel();
  }
  Config config=loadConfig(kernel);
  if (!config.getBoolean(GraphDatabaseSettings.udc_enabled))   return null;
  int firstDelay=config.getInteger(GraphDatabaseSettings.first_delay);
  int interval=config.getInteger(GraphDatabaseSettings.interval);
  String hostAddress=config.get(GraphDatabaseSettings.udc_host);
  String source=config.get(GraphDatabaseSettings.udc_source);
  String registration=config.get(GraphDatabaseSettings.udc_registration_key);
  Integer clusterNameHash=determineClusterNameHash(config);
  NeoStoreXaDataSource ds=kernel.graphDatabase().getXaDataSourceManager().getNeoStoreDataSource();
  boolean crashPing=ds.getXaContainer().getLogicalLog().wasNonClean();
  String storeId=Long.toHexString(ds.getRandomIdentifier());
  String version=kernel.version().getReleaseVersion();
  String revision=kernel.version().getRevision();
  String classPath=getClassPath();
  String tags=determineTags(jarNamesForTags,classPath);
  Edition edition=determineEdition(classPath);
  UdcTimerTask task=new UdcTimerTask(hostAddress,version,revision,storeId,source,crashPing,registration,formattedMacAddy(),tags,edition,clusterNameHash);
  timer=new Timer("Neo4j UDC Timer",true);
  timer.scheduleAtFixedRate(task,firstDelay,interval);
  return task;
}
