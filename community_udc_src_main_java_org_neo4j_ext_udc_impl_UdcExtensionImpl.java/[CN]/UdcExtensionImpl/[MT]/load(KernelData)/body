{
  if (timer != null) {
    timer.cancel();
  }
  Map<String,String> conf=loadSystemProperties();
  conf.putAll(kernel.getConfigParams());
  Config config=new Config(conf);
  if (!config.getBoolean(UdcSettings.udc_enabled))   return null;
  int firstDelay=config.getInteger(UdcSettings.first_delay);
  int interval=config.getInteger(UdcSettings.interval);
  String hostAddress=config.get(UdcSettings.udc_host);
  String source=config.get(UdcSettings.udc_source);
  String registration=config.get(UdcSettings.udc_registration_key);
  NeoStoreXaDataSource ds=kernel.graphDatabase().getXaDataSourceManager().getNeoStoreDataSource();
  boolean crashPing=ds.getXaContainer().getLogicalLog().wasNonClean();
  String storeId=Long.toHexString(ds.getRandomIdentifier());
  String version=kernel.version().getRevision();
  if (version.equals(""))   version=kernel.version().getVersion();
  UdcTimerTask task=new UdcTimerTask(hostAddress,version,storeId,source,crashPing,registration,formattedMacAddy());
  timer=new Timer("Neo4j UDC Timer",true);
  timer.scheduleAtFixedRate(task,firstDelay,interval);
  return task;
}
