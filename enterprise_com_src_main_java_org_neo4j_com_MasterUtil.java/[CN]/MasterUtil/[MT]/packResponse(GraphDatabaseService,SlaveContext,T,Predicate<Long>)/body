{
  List<Triplet<String,Long,TxExtractor>> stream=new ArrayList<Triplet<String,Long,TxExtractor>>();
  Set<String> resourceNames=new HashSet<String>();
  XaDataSourceManager dsManager=((AbstractGraphDatabase)graphDb).getConfig().getTxModule().getXaDataSourceManager();
  final List<LogExtractor> logExtractors=new ArrayList<LogExtractor>();
  try {
    for (    Pair<String,Long> txEntry : context.lastAppliedTransactions()) {
      String resourceName=txEntry.first();
      final XaDataSource dataSource=dsManager.getXaDataSource(resourceName);
      if (dataSource == null) {
        throw new RuntimeException("No data source '" + resourceName + "' found");
      }
      resourceNames.add(resourceName);
      long masterLastTx=dataSource.getLastCommittedTxId();
      LogExtractor logExtractor;
      try {
        logExtractor=dataSource.getLogExtractor(txEntry.other() + 1,masterLastTx);
      }
 catch (      IOException ioe) {
        throw new RuntimeException(ioe);
      }
      final LogExtractor finalLogExtractor=logExtractor;
      logExtractors.add(finalLogExtractor);
      for (long txId=txEntry.other() + 1; txId <= masterLastTx; txId++) {
        if (filter.accept(txId)) {
          final long tx=txId;
          TxExtractor extractor=new TxExtractor(){
            @Override public ReadableByteChannel extract(){
              InMemoryLogBuffer buffer=new InMemoryLogBuffer();
              extract(buffer);
              return buffer;
            }
            @Override public void extract(            LogBuffer buffer){
              try {
                long extractedTxId=finalLogExtractor.extractNext(buffer);
                if (extractedTxId == -1)                 throw new RuntimeException("Txs not found");
                if (extractedTxId != tx)                 throw new RuntimeException("Expected txId " + tx + ", but was "+ extractedTxId);
              }
 catch (              IOException e) {
                throw new RuntimeException(e);
              }
            }
          }
;
          stream.add(Triplet.of(resourceName,txId,extractor));
        }
      }
    }
    StoreId storeId=((NeoStoreXaDataSource)dsManager.getXaDataSource(Config.DEFAULT_DATA_SOURCE_NAME)).getStoreId();
    return new Response<T>(response,storeId,createTransactionStream(resourceNames,stream,logExtractors));
  }
 catch (  Throwable t) {
    for (    LogExtractor extractor : logExtractors)     extractor.close();
    throw Exceptions.launderedException(t);
  }
}
