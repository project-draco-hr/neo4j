"\nNAME\n    music2png - Converts textual music notation to classically notated PNG file\n\nSYNOPSIS\n    music2png [options] INFILE\n\nDESCRIPTION\n    This filter reads LilyPond or ABC music notation text from the input file\n    INFILE (or stdin if INFILE is -), converts it to classical music notation\n    and writes it to a trimmed PNG image file.\n\n    This script is a wrapper for LilyPond and ImageMagick commands.\n\nOPTIONS\n    -f FORMAT\n        The INFILE music format. 'abc' for ABC notation, 'ly' for LilyPond\n        notation. Defaults to 'abc' unless source starts with backslash.\n\n    -o OUTFILE\n        The file name of the output file. If not specified the output file is\n        named like INFILE but with a .png file name extension.\n\n    -m\n        Skip if the PNG output file is newer that than the INFILE.\n        Compares timestamps on INFILE and OUTFILE. If\n        INFILE is - (stdin) then compares MD5 checksum stored in file\n        named like OUTFILE but with a .md5 file name extension.\n        The .md5 file is created if the -m option is used and the\n        INFILE is - (stdin).\n\n    -v\n        Verbosely print processing information to stderr.\n\n    --help, -h\n        Print this documentation.\n\n    --version\n        Print program version number.\n\nSEE ALSO\n    lilypond(1), abc2ly(1), convert(1)\n\nAUTHOR\n    Written by Stuart Rackham, <srackham@gmail.com>\n\nCOPYING\n    Copyright (C) 2006 Stuart Rackham. Free use of this software is\n    granted under the terms of the GNU General Public License (GPL).\n"
import warnings
warnings.simplefilter('ignore', DeprecationWarning)
import os, sys, tempfile, md5
VERSION = '0.1.1'
verbose = False
if (__name__ == '__main__'):
    try:
        main()
    except SystemExit:
        raise
    except KeyboardInterrupt:
        sys.exit(1)
    except Exception as e:
        print_stderr(('%s: %s' % (os.path.basename(sys.argv[0]), str(e))))
        sys.exit(1)
