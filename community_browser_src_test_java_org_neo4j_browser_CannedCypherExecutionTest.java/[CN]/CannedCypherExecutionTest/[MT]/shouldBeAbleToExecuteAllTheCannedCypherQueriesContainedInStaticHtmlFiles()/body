{
  URL resourceLoc=getClass().getClassLoader().getResource("browser");
  assertNotNull(resourceLoc);
  final GraphDatabaseService database=new TestGraphDatabaseFactory().newImpermanentDatabase();
  final AtomicInteger cypherStatementCount=new AtomicInteger(0);
  Files.walkFileTree(Paths.get(resourceLoc.toURI()),new SimpleFileVisitor<Path>(){
    @Override public FileVisitResult visitFile(    Path file,    BasicFileAttributes attributes) throws IOException {
      if (file.getFileName().toString().endsWith(".html")) {
        String content=FileUtils.readTextFile(file.toFile(),Charsets.UTF_8);
        Elements cypherElements=Jsoup.parse(content).select("pre.runnable");
        for (        Element cypherElement : cypherElements) {
          String statement=replaceAngularExpressions(cypherElement.text());
          if (!statement.startsWith(":")) {
            try (Transaction transaction=database.beginTx()){
              database.execute(statement);
              transaction.success();
            }
 catch (            QueryExecutionException e) {
              throw new AssertionError(format("Failed to execute query [%s] in file [%s]",statement,file),e);
            }
            cypherStatementCount.incrementAndGet();
          }
        }
      }
      return FileVisitResult.CONTINUE;
    }
  }
);
  assertTrue("Static files should contain at least one valid cypher statement",cypherStatementCount.intValue() > 0);
  System.out.printf("Successfully executed %s cypher statements extracted from HTML files.%n",cypherStatementCount);
}
