{
  OperationContext operationContext=sessionPool.acquireSession();
  ReplicatedTransaction transaction;
  try {
    transaction=createImmutableReplicatedTransaction(tx.transactionRepresentation(),operationContext.globalSession(),operationContext.localOperationId());
  }
 catch (  IOException e) {
    throw new TransactionFailureException("Could not create immutable object for replication",e);
  }
  while (true) {
    final Future<Long> futureTxId=replicatedTxListener.getFutureTxId(operationContext.localOperationId());
    try {
      replicator.replicate(transaction);
      Long txId=futureTxId.get(60,TimeUnit.SECONDS);
      sessionPool.releaseSession(operationContext);
      return txId;
    }
 catch (    InterruptedException|TimeoutException e) {
      futureTxId.cancel(false);
    }
catch (    ReplicationFailedException|ExecutionException e) {
      throw new TransactionFailureException("Failed to commit transaction",e);
    }
    System.out.println("Retrying replication");
  }
}
