{
  String activeFileName=fileName + ".active";
  if (!new File(activeFileName).exists()) {
    if (new File(fileName).exists()) {
      open(fileName);
    }
 else {
      open(getLog1FileName());
      setActiveLog(LOG1);
    }
  }
 else {
    FileChannel fc=new RandomAccessFile(activeFileName,"rw").getChannel();
    byte bytes[]=new byte[256];
    ByteBuffer buf=ByteBuffer.wrap(bytes);
    int read=fc.read(buf);
    fc.close();
    if (read != 4) {
      throw new IllegalStateException("Read " + read + " bytes from "+ activeFileName+ " but expected 4");
    }
    buf.flip();
    char c=buf.asCharBuffer().get();
    File copy=new File(fileName + ".copy");
    safeDeleteFile(copy);
    if (c == CLEAN) {
      String newLog=getLog1FileName();
      File file=new File(newLog);
      if (file.exists()) {
        fixCleanKill(newLog);
      }
      file=new File(getLog2FileName());
      if (file.exists()) {
        fixCleanKill(file.getPath());
      }
      open(newLog);
      setActiveLog(LOG1);
    }
 else     if (c == LOG1) {
      String newLog=getLog1FileName();
      if (!new File(newLog).exists()) {
        throw new IllegalStateException("Active marked as 1 but no " + newLog + " exist");
      }
      currentLog=LOG1;
      File otherLog=new File(getLog2FileName());
      if (otherLog.exists()) {
        if (!otherLog.delete()) {
          log.warning("Unable to delete " + copy.getName());
        }
      }
      open(newLog);
    }
 else     if (c == LOG2) {
      String newLog=getLog2FileName();
      if (!new File(newLog).exists()) {
        throw new IllegalStateException("Active marked as 2 but no " + newLog + " exist");
      }
      File otherLog=new File(getLog1FileName());
      if (otherLog.exists()) {
        if (!otherLog.delete()) {
          log.warning("Unable to delete " + copy.getName());
        }
      }
      currentLog=LOG2;
      open(newLog);
    }
 else {
      throw new IllegalStateException("Unknown active log: " + c);
    }
  }
  instantiateCorrectWriteBuffer();
}
