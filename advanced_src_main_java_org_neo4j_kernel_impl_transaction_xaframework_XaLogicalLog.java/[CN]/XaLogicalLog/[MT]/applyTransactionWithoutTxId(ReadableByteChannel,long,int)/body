{
  if (nextTxId != (xaTf.getLastCommittedTx() + 1)) {
    throw new IllegalStateException("Tried to apply tx " + nextTxId + " but expected transaction "+ (xaTf.getCurrentVersion() + 1));
  }
  log.fine("Logical log version: " + logVersion + ", committing tx="+ nextTxId+ ")");
  long logEntriesFound=0;
  scanIsComplete=false;
  LogApplier logApplier=new LogApplier(byteChannel);
  int xidIdent=getNextIdentifier();
  long startEntryPosition=writeBuffer.getFileChannelPosition();
  ;
  while (logApplier.readAndWriteAndApplyEntry(xidIdent)) {
    logEntriesFound++;
  }
  byteChannel.close();
  LogEntry.Start startEntry=logApplier.startEntry;
  if (startEntry == null) {
    throw new IOException("Unable to find start entry");
  }
  startEntry.setStartPosition(startEntryPosition);
  LogEntry.OnePhaseCommit commit=new LogEntry.OnePhaseCommit(xidIdent,nextTxId,masterId);
  LogIoUtils.writeLogEntry(commit,writeBuffer);
  Xid xid=startEntry.getXid();
  try {
    XaTransaction xaTx=xaRm.getXaTransaction(xid);
    xaTx.setCommitTxId(nextTxId);
    xaRm.commit(xid,true);
    LogEntry doneEntry=new LogEntry.Done(startEntry.getIdentifier());
    LogIoUtils.writeLogEntry(doneEntry,writeBuffer);
    xidIdentMap.remove(startEntry.getIdentifier());
    recoveredTxMap.remove(startEntry.getIdentifier());
    cacheTxStartPosition(nextTxId,startEntry);
  }
 catch (  XAException e) {
    e.printStackTrace();
    throw new IOException(e.getMessage());
  }
  scanIsComplete=true;
  msgLog.logMessage("Applied external tx and generated tx id=" + nextTxId);
}
