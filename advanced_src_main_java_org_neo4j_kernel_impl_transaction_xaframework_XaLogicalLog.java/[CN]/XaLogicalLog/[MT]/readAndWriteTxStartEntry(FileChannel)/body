{
  buffer.clear();
  buffer.put(LogEntry.TX_START);
  buffer.limit(3);
  if (fileChannel.read(buffer) != 2) {
    throw new IllegalStateException("Unable to read tx start entry xid id lengths");
  }
  buffer.flip();
  buffer.position(1);
  byte globalIdLength=buffer.get();
  byte branchIdLength=buffer.get();
  int xidLength=globalIdLength + branchIdLength;
  buffer.limit(3 + xidLength + 8);
  buffer.position(3);
  if (fileChannel.read(buffer) != 8 + xidLength) {
    throw new IllegalStateException("Unable to read xid");
  }
  buffer.flip();
  buffer.position(3 + xidLength);
  int identifier=buffer.getInt();
  FileChannel writeToLog=null;
  LogEntry.Start entry=xidIdentMap.get(identifier);
  if (entry != null) {
    writeToLog=newLog;
    entry.setStartPosition(newLog.position());
  }
  buffer.position(0);
  if (writeToLog != null && writeToLog.write(buffer) != 3 + 8 + xidLength) {
    throw new TransactionFailureException("Unable to write tx start xid");
  }
}
