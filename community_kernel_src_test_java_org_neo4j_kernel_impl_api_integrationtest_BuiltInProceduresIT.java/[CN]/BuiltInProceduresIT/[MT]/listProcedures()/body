{
  RawIterator<Object[],ProcedureException> stream=readOperationsInNewTransaction().procedureCallRead(procedureName("dbms","procedures"),new Object[0]);
  assertThat(asList(stream),containsInAnyOrder(equalTo(new Object[]{"db.constraints","db.constraints() :: (description :: STRING?)","List all constraints in the database."}),equalTo(new Object[]{"db.indexes","db.indexes() :: (description :: STRING?, state :: STRING?, type :: STRING?)","List all indexes in the database."}),equalTo(new Object[]{"db.awaitIndex","db.awaitIndex(index :: STRING?, timeOutSeconds = 300 :: INTEGER?) :: VOID","Wait for an index to come online (for example: CALL db.awaitIndex(\":Person(name)\"))."}),equalTo(new Object[]{"db.resampleIndex","db.resampleIndex(index :: STRING?) :: VOID","Schedule resampling of an index (for example: CALL db.resampleIndex(\":Person(name)\"))."}),equalTo(new Object[]{"db.resampleOutdatedIndexes","db.resampleOutdatedIndexes() :: VOID","Schedule resampling of all outdated indexes."}),equalTo(new Object[]{"db.propertyKeys","db.propertyKeys() :: (propertyKey :: STRING?)","List all property keys in the database."}),equalTo(new Object[]{"db.labels","db.labels() :: (label :: STRING?)","List all labels in the database."}),equalTo(new Object[]{"db.relationshipTypes","db.relationshipTypes() :: (relationshipType :: " + "STRING?)","List all relationship types in the database."}),equalTo(new Object[]{"dbms.procedures","dbms.procedures() :: (name :: STRING?, signature :: " + "STRING?, description :: STRING?)","List all procedures in the DBMS."}),equalTo(new Object[]{"dbms.functions","dbms.functions() :: (name :: STRING?, signature :: " + "STRING?, description :: STRING?)","List all user functions in the DBMS."}),equalTo(new Object[]{"dbms.components","dbms.components() :: (name :: STRING?, versions :: LIST? OF" + " STRING?, edition :: STRING?)","List DBMS components and their versions."}),equalTo(new Object[]{"dbms.queryJmx","dbms.queryJmx(query :: STRING?) :: (name :: STRING?, " + "description :: STRING?, attributes :: MAP?)","Query JMX management data by domain and name." + " For instance, \"org.neo4j:*\""})));
}
