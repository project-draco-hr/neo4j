{
  return new PrimitiveLongBaseIterator(){
    private long highId=nodeStore.getHighestPossibleIdInUse();
    private long currentId;
    private final NodeRecord record=new NodeRecord(-1);
    @Override protected boolean fetchNext(){
      while (true) {
        while (currentId <= highId) {
          try {
            nodeStore.getRecord(currentId,record,RecordLoad.CHECK);
            if (record.inUse()) {
              return next(record.getId());
            }
          }
  finally {
            currentId++;
          }
        }
        long newHighId=nodeStore.getHighestPossibleIdInUse();
        if (newHighId > highId) {
          highId=newHighId;
        }
 else {
          break;
        }
      }
      return false;
    }
  }
;
}
