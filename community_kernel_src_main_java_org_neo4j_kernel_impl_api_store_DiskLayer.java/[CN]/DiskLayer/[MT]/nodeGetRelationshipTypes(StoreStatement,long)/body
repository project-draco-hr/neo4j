{
  final NodeRecord node=nodeStore.loadRecord(nodeId,null);
  if (node == null) {
    throw new EntityNotFoundException(EntityType.NODE,nodeId);
  }
  if (node.isDense()) {
    return new PrimitiveIntCollections.PrimitiveIntBaseIterator(){
      private long groupId=node.getNextRel();
      @Override protected boolean fetchNext(){
        if (groupId == Record.NO_NEXT_RELATIONSHIP.intValue()) {
          return false;
        }
        RelationshipGroupRecord group=relationshipGroupStore.getRecord(groupId);
        try {
          return next(group.getType());
        }
  finally {
          groupId=group.getNext();
        }
      }
    }
;
  }
  final PrimitiveIntSet types=Primitive.intSet(5);
  RelationshipVisitor<RuntimeException> visitor=new RelationshipVisitor<RuntimeException>(){
    @Override public void visit(    long relId,    int type,    long startNode,    long endNode) throws RuntimeException {
      types.add(type);
    }
  }
;
  RelationshipIterator relationships=nodeListRelationships(statement,nodeId,Direction.BOTH);
  while (relationships.hasNext()) {
    relationships.relationshipVisit(relationships.next(),visitor);
  }
  return types.iterator();
}
