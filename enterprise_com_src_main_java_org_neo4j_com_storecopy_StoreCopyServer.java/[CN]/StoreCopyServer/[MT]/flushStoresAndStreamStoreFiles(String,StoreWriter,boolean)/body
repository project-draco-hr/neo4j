{
  try {
    monitor.startTryCheckPoint();
    long lastAppliedTransaction=checkPointer.tryCheckPoint(new SimpleTriggerInfo(triggerName));
    monitor.finishTryCheckPoint();
    ByteBuffer temporaryBuffer=ByteBuffer.allocateDirect((int)ByteUnit.mebiBytes(1));
    monitor.startStreamingStoreFiles();
    try (ResourceIterator<StoreFileMetadata> files=dataSource.listStoreFiles(includeLogs)){
      while (files.hasNext()) {
        StoreFileMetadata meta=files.next();
        File file=meta.file();
        int recordSize=meta.recordSize();
        final Optional<PagedFile> optionalPagedFile=pageCache.getExistingMapping(file);
        if (optionalPagedFile.isPresent()) {
          PagedFile pagedFile=optionalPagedFile.get();
          long fileSize=pagedFile.fileSize();
          try (ReadableByteChannel fileChannel=pagedFile.openReadableByteChannel()){
            doWrite(writer,temporaryBuffer,file,recordSize,fileChannel,fileSize);
          }
  finally {
            pagedFile.close();
          }
        }
 else {
          try (ReadableByteChannel fileChannel=fileSystem.open(file,"r")){
            long fileSize=fileSystem.getFileSize(file);
            doWrite(writer,temporaryBuffer,file,recordSize,fileChannel,fileSize);
          }
         }
      }
    }
  finally {
      monitor.finishStreamingStoreFiles();
    }
    return anonymous(lastAppliedTransaction);
  }
 catch (  IOException e) {
    throw new ServerFailureException(e);
  }
}
