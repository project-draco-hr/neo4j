{
  byte[] value=changes.get(key);
  if (value == null) {
    final byte[] proposal=new byte[keys.valueSize()];
synchronized (proposal) {
      value=changes.putIfAbsent(key,proposal);
      if (value == null) {
        BigEndianByteArrayBuffer buffer=new BigEndianByteArrayBuffer(proposal);
        if (!reset) {
          PreviousValue<Key> lookup=new PreviousValue<>(keys,key,proposal);
          if (!store.scan(lookup,lookup)) {
            buffer.clear();
          }
        }
        update.update(buffer);
        return;
      }
    }
  }
synchronized (value) {
    BigEndianByteArrayBuffer target=new BigEndianByteArrayBuffer(value);
    if (reset) {
      target.clear();
    }
    update.update(target);
  }
}
