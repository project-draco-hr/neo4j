{
  GraphDatabaseAPI db=(GraphDatabaseAPI)factory.newImpermanentDatabase();
  Worker worker1=new Worker("W1",new State(db));
  Worker worker2=new Worker("W2",new State(db));
  PropertyContainer properties=getGraphProperties(db);
  worker1.beginTx();
  worker2.beginTx();
  String key1="name";
  String value1="Value 1";
  String key2="some other property";
  String value2="Value 2";
  String key3="say";
  String value3="hello";
  worker1.setProperty(key1,value1).get();
  assertThat(properties,inTx(db,not(hasProperty(key1))));
  assertFalse(worker2.hasProperty(key1));
  Future<Void> blockedSetProperty=worker2.setProperty(key2,value2);
  assertThat(properties,inTx(db,not(hasProperty(key1))));
  assertThat(properties,inTx(db,not(hasProperty(key2))));
  worker1.setProperty(key3,value3).get();
  assertFalse(blockedSetProperty.isDone());
  assertThat(properties,inTx(db,not(hasProperty(key1))));
  assertThat(properties,inTx(db,not(hasProperty(key2))));
  assertThat(properties,inTx(db,not(hasProperty(key3))));
  worker1.commitTx();
  assertThat(properties,inTx(db,hasProperty(key1)));
  assertThat(properties,inTx(db,not(hasProperty(key2))));
  assertThat(properties,inTx(db,hasProperty(key3)));
  blockedSetProperty.get();
  assertTrue(blockedSetProperty.isDone());
  worker2.commitTx();
  assertThat(properties,inTx(db,hasProperty(key1).withValue(value1)));
  assertThat(properties,inTx(db,hasProperty(key2).withValue(value2)));
  assertThat(properties,inTx(db,hasProperty(key3).withValue(value3)));
  worker1.shutdown();
  worker2.shutdown();
  db.shutdown();
}
