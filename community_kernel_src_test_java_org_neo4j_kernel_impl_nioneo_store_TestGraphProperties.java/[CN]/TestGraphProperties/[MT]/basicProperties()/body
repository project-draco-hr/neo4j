{
  GraphDatabaseAPI db=(GraphDatabaseAPI)factory.newImpermanentDatabase();
  PropertyContainer graphProperties=properties(db);
  assertThat(graphProperties,inTx(db,not(hasProperty("test"))));
  Transaction tx=db.beginTx();
  graphProperties.setProperty("test","yo");
  assertEquals("yo",graphProperties.getProperty("test"));
  tx.success();
  tx.finish();
  assertThat(graphProperties,inTx(db,hasProperty("test").withValue("yo")));
  tx=db.beginTx();
  assertNull(graphProperties.removeProperty("something non existent"));
  assertEquals("yo",graphProperties.removeProperty("test"));
  assertNull(graphProperties.getProperty("test",null));
  graphProperties.setProperty("other",10);
  assertEquals(10,graphProperties.getProperty("other"));
  graphProperties.setProperty("new","third");
  tx.success();
  tx.finish();
  assertThat(graphProperties,inTx(db,not(hasProperty("test"))));
  assertThat(graphProperties,inTx(db,hasProperty("other").withValue(10)));
  assertThat(getPropertyKeys(db,graphProperties),containsOnly("other","new"));
  tx=db.beginTx();
  graphProperties.setProperty("rollback",true);
  assertEquals(true,graphProperties.getProperty("rollback"));
  tx.finish();
  assertThat(graphProperties,inTx(db,not(hasProperty("rollback"))));
  db.shutdown();
}
