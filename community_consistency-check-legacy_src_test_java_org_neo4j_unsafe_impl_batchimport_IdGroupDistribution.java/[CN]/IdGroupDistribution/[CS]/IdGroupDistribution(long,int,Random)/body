{
  groupCounts=new long[numberOfGroups];
  groups=new Group[numberOfGroups];
  long total=0;
  long partSize=nodeCount / numberOfGroups;
  float debt=1f;
  for (int i=0; i < numberOfGroups - 1; i++) {
    float part=random.nextFloat() * debt;
    assignGroup(i,(long)(partSize * part));
    total+=groupCounts[i];
    debt=debt + 1.0f - part;
  }
  assignGroup(numberOfGroups - 1,nodeCount - total);
}
