{
  final List<Integer> labels=new ArrayList<>();
  final Pair<List<DynamicRecord>,List<Integer>> pair=chainOfDynamicRecordsWithLabelsForANode(3);
  fixture.apply(new GraphStoreFixture.Transaction(){
    @Override protected void transactionData(    GraphStoreFixture.TransactionDataBuilder tx,    GraphStoreFixture.IdGenerator next){
      NodeRecord node=new NodeRecord(42,-1,-1);
      node.setInUse(true);
      List<DynamicRecord> dynamicRecords;
      dynamicRecords=pair.first();
      labels.addAll(pair.other());
      node.setLabelField(dynamicPointer(dynamicRecords),dynamicRecords);
      tx.create(node);
    }
  }
);
  long[] before=asArray(labels);
  labels.remove(1);
  long[] after=asArray(labels);
  write(fixture.directStoreAccess().labelScanStore(),asList(labelChanges(42,before,after)));
  ConsistencySummaryStatistics stats=check();
  verifyInconsistency(stats,RecordType.NODE);
}
