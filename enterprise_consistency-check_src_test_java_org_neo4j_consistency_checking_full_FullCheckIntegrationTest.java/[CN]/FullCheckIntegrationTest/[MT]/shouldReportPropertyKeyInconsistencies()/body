{
  final Reference<Integer> inconsistentKey=new Reference<>();
  fixture.apply(new GraphStoreFixture.Transaction(){
    @Override protected void transactionData(    GraphStoreFixture.TransactionDataBuilder tx,    GraphStoreFixture.IdGenerator next){
      inconsistentKey.set(next.propertyKey());
      tx.propertyKey(inconsistentKey.get(),"FOO");
    }
  }
);
  StoreAccess access=fixture.storeAccess();
  DynamicRecord record=access.getPropertyKeyNameStore().forceGetRecord(inconsistentKey.get());
  record.setInUse(false);
  access.getPropertyKeyNameStore().updateRecord(record);
  ConsistencySummaryStatistics stats=check(access);
  verifyInconsistency(RecordType.PROPERTY_KEY,stats);
}
