{
  final List<DynamicRecord> chain=chainOfDynamicRecordsWithLabelsForANode(176).first();
  assertEquals("number of records in chain",3,chain.size());
  assertEquals("all records full",chain.get(0).getLength(),chain.get(2).getLength());
  fixture.apply(new GraphStoreFixture.Transaction(){
    @Override protected void transactionData(    GraphStoreFixture.TransactionDataBuilder tx,    GraphStoreFixture.IdGenerator next){
      long nodeId=((long[])getRightArray(readFullByteArrayFromHeavyRecords(chain,ARRAY)))[0];
      NodeRecord before=inUse(new NodeRecord(nodeId,false,-1,-1));
      NodeRecord after=inUse(new NodeRecord(nodeId,false,-1,-1));
      DynamicRecord record1=chain.get(0).clone();
      DynamicRecord record2=chain.get(1).clone();
      DynamicRecord record3=chain.get(2).clone();
      record3.setNextBlock(record2.getId());
      before.setLabelField(dynamicPointer(chain),chain);
      after.setLabelField(dynamicPointer(chain),asList(record1,record2,record3));
      tx.update(before,after);
    }
  }
);
  ConsistencySummaryStatistics stats=check();
  verifyInconsistency(stats,RecordType.NODE);
}
