{
  String lowerCaseKey=key.toLowerCase();
  String value=null;
  if ("neo4j-servers".equals(lowerCaseKey)) {
    return output.ok(new MappingRepresentation("neo4j-servers"){
      @Override protected void serialize(      MappingSerializer serializer){
        serializer.putMapping(uriInfo.getBaseUri().toString(),new MappingRepresentation("urls"){
          @Override protected void serialize(          MappingSerializer serializer){
            serializer.putString("url",server.restApiUri().toString());
            serializer.putString("manageUrl",server.managementApiUri().toString());
          }
        }
);
      }
    }
);
  }
 else   if (Configurator.REST_API_PATH_PROPERTY_KEY.endsWith(lowerCaseKey)) {
    value=server.restApiUri().toString();
  }
 else   if (Configurator.WEB_ADMIN_PATH_PROPERTY_KEY.endsWith(lowerCaseKey)) {
    value=server.managementApiUri().toString();
  }
 else {
    if (server.getConfiguration().containsKey(lowerCaseKey)) {
      value=(String)server.getConfiguration().getProperty(lowerCaseKey);
    }
  }
  if (value == null) {
    value="undefined";
  }
  return output.ok(ValueRepresentation.string(value));
}
