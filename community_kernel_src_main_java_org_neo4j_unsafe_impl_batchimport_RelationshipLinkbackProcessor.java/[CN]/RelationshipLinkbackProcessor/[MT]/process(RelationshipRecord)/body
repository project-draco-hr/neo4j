{
  boolean isLoop=record.getFirstNode() == record.getSecondNode();
  boolean firstIsDense=cache.isDense(record.getFirstNode());
  boolean changed=false;
  if (isLoop) {
    if (firstIsDense == denseNodes) {
      long prevRel=cache.getAndPutRelationship(record.getFirstNode(),Direction.BOTH,record.getId(),false);
      if (prevRel == -1) {
        record.setFirstInFirstChain(true);
        record.setFirstInSecondChain(true);
        prevRel=cache.getCount(record.getFirstNode(),Direction.BOTH);
      }
      record.setFirstPrevRel(prevRel);
      record.setSecondPrevRel(prevRel);
      changed=true;
    }
  }
 else {
    if (firstIsDense == denseNodes) {
      long firstPrevRel=cache.getAndPutRelationship(record.getFirstNode(),Direction.OUTGOING,record.getId(),false);
      if (firstPrevRel == -1) {
        record.setFirstInFirstChain(true);
        firstPrevRel=cache.getCount(record.getFirstNode(),Direction.OUTGOING);
      }
      record.setFirstPrevRel(firstPrevRel);
      changed=true;
    }
    boolean secondIsDense=cache.isDense(record.getSecondNode());
    if (secondIsDense == denseNodes) {
      long secondPrevRel=cache.getAndPutRelationship(record.getSecondNode(),Direction.INCOMING,record.getId(),false);
      if (secondPrevRel == -1) {
        record.setFirstInSecondChain(true);
        secondPrevRel=cache.getCount(record.getSecondNode(),Direction.INCOMING);
      }
      record.setSecondPrevRel(secondPrevRel);
      changed=true;
    }
  }
  return changed;
}
