{
  return new TypeSafeDiagnosingMatcher<Node>(){
    private Set<String> foundLabels;
    @Override public void describeTo(    Description description){
      description.appendText(expectedLabels.toString());
    }
    @Override protected boolean matchesSafely(    Node item,    Description mismatchDescription){
      foundLabels=asLabelNameSet(item.getLabels());
      if (foundLabels.size() == expectedLabels.size() && foundLabels.containsAll(expectedLabels)) {
        return true;
      }
      mismatchDescription.appendText("was " + foundLabels.toString());
      return false;
    }
  }
;
}
