{
  return new TypeSafeDiagnosingMatcher<Iterator<Long>>(){
    int len=0;
    String actualText=null;
    String expectedText=null;
    @Override protected boolean matchesSafely(    Iterator<Long> expected,    Description actualDescription){
      if (actualText != null) {
        actualDescription.appendText(actualText);
      }
      while (expected.hasNext() && actual.hasNext()) {
        len++;
        Long expectedNext=expected.next();
        long actualNext=actual.next();
        if (!(expectedNext.equals(actualNext))) {
          actualText=format("Element %d at position %d",actualNext,len);
          expectedText=format("Element %d at position %d",expectedNext,len);
          return false;
        }
      }
      if (expected.hasNext()) {
        actualText=format("Length %d",len);
        expectedText=format("Length %d",len + 1);
        return false;
      }
      if (actual.hasNext()) {
        actualText=format("Length %d",len + 1);
        expectedText=format("Length %d",len);
        return false;
      }
      return true;
    }
    @Override public void describeTo(    Description expectedDescription){
      if (expectedText != null) {
        expectedDescription.appendText(expectedText);
      }
    }
  }
;
}
