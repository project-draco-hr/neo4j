{
  Unzip.unzip(Legacy20Store.class,"propkeydupdb.zip",storeDir);
  upgrader(new StoreMigrator(monitor,fs)).migrateIfNeeded(storeDir);
  GraphDatabaseService db=new GraphDatabaseFactory().newEmbeddedDatabase(storeDir.getAbsolutePath());
  try {
    Node nodeA=getNodeWithName(db,"A");
    assertThat(nodeA,inTx(db,hasProperty("name").withValue("A")));
    Node nodeB=getNodeWithName(db,"B");
    assertThat(nodeB,inTx(db,hasProperty("name").withValue("B")));
    Node nodeC=getNodeWithName(db,"C");
    assertThat(nodeC,inTx(db,hasProperty("name").withValue("C")));
    assertThat(nodeC,inTx(db,hasProperty("other").withValue("a value")));
    assertThat(nodeC,inTx(db,hasProperty("third").withValue("something")));
  }
  finally {
    db.shutdown();
  }
  PropertyKeyTokenStore tokenStore=cleanup.add(storeFactory.newPropertyKeyTokenStore());
  Token[] tokens=tokenStore.getTokens(MAX_VALUE);
  tokenStore.close();
  assertNoDuplicates(tokens);
}
