{
  LegacyStore legacyStore=new LegacyStore(fs,new File(getClass().getResource("legacystore/propkeydupdb/neostore").getFile()));
  NeoStore neoStore=storeFactory.createNeoStore(storeFileName);
  new StoreMigrator(monitor).migrate(legacyStore,neoStore);
  legacyStore.close();
  GraphDatabaseService db=new GraphDatabaseFactory().newEmbeddedDatabase(storeDir);
  Node nodeA=getNodeWithName(db,"A");
  assertEquals("A",nodeA.getProperty("name"));
  Node nodeB=getNodeWithName(db,"B");
  assertEquals("B",nodeB.getProperty("name"));
  Node nodeC=getNodeWithName(db,"C");
  assertEquals("C",nodeC.getProperty("name"));
  assertEquals("a value",nodeC.getProperty("other"));
  assertEquals("something",nodeC.getProperty("third"));
  db.shutdown();
  PropertyKeyTokenStore tokenStore=storeFactory.newPropertyKeyTokenStore(new File(storeFileName + PROPERTY_KEY_TOKEN_STORE_NAME));
  Token[] tokens=tokenStore.getTokens(MAX_VALUE);
  tokenStore.close();
  assertNuDuplicates(tokens);
}
