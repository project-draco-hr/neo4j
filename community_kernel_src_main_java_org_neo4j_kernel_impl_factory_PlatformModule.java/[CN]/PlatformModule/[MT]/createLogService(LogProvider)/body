{
  long internalLogRotationThreshold=config.get(GraphDatabaseSettings.store_internal_log_rotation_threshold);
  long internalLogRotationDelay=config.get(GraphDatabaseSettings.store_internal_log_rotation_delay);
  int internalLogMaxArchives=config.get(GraphDatabaseSettings.store_internal_log_max_archives);
  final StoreLogService.Builder builder=StoreLogService.withRotation(internalLogRotationThreshold,internalLogRotationDelay,internalLogMaxArchives,jobScheduler);
  if (userLogProvider != null) {
    builder.withUserLogProvider(userLogProvider);
  }
  builder.withRotationListener(new Consumer<LogProvider>(){
    @Override public void accept(    LogProvider logProvider){
      diagnosticsManager.dumpAll(logProvider.getLog(DiagnosticsManager.class));
    }
  }
);
  for (  String debugContext : config.get(GraphDatabaseSettings.store_internal_debug_contexts)) {
    builder.withLevel(debugContext,Level.DEBUG);
  }
  builder.withDefaultLevel(config.get(GraphDatabaseSettings.store_internal_log_level));
  File internalLog=config.get(GraphDatabaseSettings.store_internal_log_location);
  StoreLogService logService;
  try {
    if (internalLog == null) {
      logService=builder.inStoreDirectory(fileSystem,storeDir);
    }
 else {
      logService=builder.toFile(fileSystem,internalLog);
    }
  }
 catch (  IOException ex) {
    throw new RuntimeException(ex);
  }
  return life.add(logService);
}
