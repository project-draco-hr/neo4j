{
  CapturingHighAvailabilityMemberStateMachine memberStateMachine=new CapturingHighAvailabilityMemberStateMachine(myId);
  UpdatePuller puller=new UpdatePuller(memberStateMachine,master,requestContextFactory,availabilityGuard,lastUpdateTime,config,scheduler,stringLogger,unpacker);
  puller.init();
  puller.start();
  scheduler.runJob();
  verify(lastUpdateTime,times(1)).setLastUpdateTime(anyLong());
  verify(availabilityGuard,times(1)).isAvailable(anyLong());
  verify(unpacker,times(1)).unpackResponse(Matchers.<Response>any());
  verify(master,times(1)).pullUpdates(Matchers.<RequestContext>any());
  memberStateMachine.switchInstanceToSlave();
  scheduler.runJob();
  verify(lastUpdateTime,times(2)).setLastUpdateTime(anyLong());
  verify(availabilityGuard,times(2)).isAvailable(anyLong());
  verify(unpacker,times(2)).unpackResponse(Matchers.<Response>any());
  verify(master,times(2)).pullUpdates(Matchers.<RequestContext>any());
  memberStateMachine.switchInstanceToMaster();
  verifyNoMoreInteractions(lastUpdateTime,availabilityGuard,unpacker);
}
