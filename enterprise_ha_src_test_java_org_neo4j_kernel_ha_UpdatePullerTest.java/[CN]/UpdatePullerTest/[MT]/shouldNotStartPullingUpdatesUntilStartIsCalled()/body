{
  OnDemandCallScheduler scheduler=new OnDemandCallScheduler();
  Config config=mock(Config.class);
  InstanceId myId=new InstanceId(1);
  when(config.get(HaSettings.pull_interval)).thenReturn(1000l);
  when(config.get(ClusterSettings.server_id)).thenReturn(myId);
  LastUpdateTime lastUpdateTime=mock(LastUpdateTime.class);
  AvailabilityGuard availabilityGuard=mock(AvailabilityGuard.class);
  when(availabilityGuard.isAvailable(anyLong())).thenReturn(true);
  HaXaDataSourceManager dataSourceManager=mock(HaXaDataSourceManager.class);
  Master master=mock(Master.class);
  UpdatePuller puller=new UpdatePuller(mock(HighAvailabilityMemberStateMachine.class),dataSourceManager,master,mock(RequestContextFactory.class),mock(AbstractTransactionManager.class),availabilityGuard,lastUpdateTime,config,scheduler,mock(StringLogger.class));
  puller.init();
  assertNotNull(scheduler.getJob());
  scheduler.runJob();
  verifyZeroInteractions(lastUpdateTime,availabilityGuard,dataSourceManager);
}
