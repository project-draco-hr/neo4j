{
  Map<String,String> config=findIndexConfig(entityType.entityClass(),indexName,suppliedConfig,this.config.getParams());
  if (!indexStore.has(entityType.entityClass(),indexName)) {
synchronized (this) {
      Map<String,String> existing=indexStore.get(entityType.entityClass(),indexName);
      if (existing != null) {
        assertConfigMatches(indexProviders.apply(existing.get(PROVIDER)),indexName,existing,config);
        return config;
      }
      try (KernelTransaction transaction=kernel.get().newTransaction(KernelTransaction.Type.implicit,AccessMode.Static.FULL);Statement statement=transaction.acquireStatement()){
switch (entityType) {
case Node:
          statement.dataWriteOperations().nodeLegacyIndexCreate(indexName,config);
        break;
case Relationship:
      statement.dataWriteOperations().relationshipLegacyIndexCreate(indexName,config);
    break;
}
transaction.success();
}
 catch (Exception ex) {
throw new TransactionFailureException("Index creation failed for " + indexName + ", "+ config,ex);
}
}
}
return config;
}
