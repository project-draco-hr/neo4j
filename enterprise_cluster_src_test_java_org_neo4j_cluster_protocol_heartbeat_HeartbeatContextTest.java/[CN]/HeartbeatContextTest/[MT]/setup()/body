{
  Map<InstanceId,URI> members=new HashMap<InstanceId,URI>();
  for (int i=0; i < instanceIds.length; i++) {
    members.put(instanceIds[i],URI.create(initialHosts[i]));
  }
  ClusterConfiguration config=new ClusterConfiguration("clusterName",initialHosts);
  config.setMembers(members);
  context=mock(ClusterContext.class);
  when(context.getConfiguration()).thenReturn(config);
  when(context.getMyId()).thenReturn(instanceIds[0]);
  Logging logging=Mockito.mock(Logging.class);
  when(logging.getMessagesLog(Matchers.<Class>any())).thenReturn(mock(StringLogger.class));
  MultiPaxosContext context=new MultiPaxosContext(instanceIds[0],Iterables.<ElectionRole,ElectionRole>iterable(new ElectionRole("coordinator")),config,Mockito.mock(Executor.class),logging,Mockito.mock(ObjectInputStreamFactory.class),Mockito.mock(ObjectOutputStreamFactory.class),Mockito.mock(AcceptorInstanceStore.class),Mockito.mock(Timeouts.class));
  toTest=context.getHeartbeatContext();
}
