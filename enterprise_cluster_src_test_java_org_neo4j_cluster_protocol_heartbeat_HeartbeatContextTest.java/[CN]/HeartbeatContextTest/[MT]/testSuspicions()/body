{
  InstanceId suspect=instanceIds[1];
  toTest.suspect(suspect);
  assertEquals(Collections.singleton(suspect),toTest.getSuspicionsFor(context.getMyId()));
  assertEquals(Collections.singletonList(context.getMyId()),toTest.getSuspicionsOf(suspect));
  assertFalse(toTest.isFailed(suspect));
  assertTrue(toTest.alive(suspect));
  toTest.suspect(suspect);
  toTest.suspect(suspect);
  assertEquals(Collections.singleton(suspect),toTest.getSuspicionsFor(context.getMyId()));
  assertEquals(Collections.singletonList(context.getMyId()),toTest.getSuspicionsOf(suspect));
  assertFalse(toTest.isFailed(suspect));
  assertTrue(toTest.alive(suspect));
  InstanceId newSuspiciousBastard=instanceIds[2];
  toTest.suspicions(newSuspiciousBastard,Collections.singleton(suspect));
  toTest.suspect(suspect);
  assertEquals(Collections.singleton(suspect),toTest.getSuspicionsFor(context.getMyId()));
  assertEquals(Collections.singleton(suspect),toTest.getSuspicionsFor(newSuspiciousBastard));
  List<InstanceId> suspiciousBastards=new ArrayList<InstanceId>(2);
  suspiciousBastards.add(context.getMyId());
  suspiciousBastards.add(newSuspiciousBastard);
  assertEquals(suspiciousBastards,toTest.getSuspicionsOf(suspect));
  assertTrue(toTest.isFailed(suspect));
  assertTrue(toTest.alive(suspect));
}
