{
  UniqueLuceneIndexPopulator populator=new UniqueLuceneIndexPopulator(100,new LuceneDocumentStructure(),standard(),new IndexWriterStatus(),new DirectoryFactory.InMemoryDirectoryFactory(),new File("target/whatever"),failureStorage,indexId);
  populator.create();
  populator.add(1,"value1");
  populator.add(2,"value2");
  int propertyKeyId=100;
  PropertyAccessor propertyAccessor=mock(PropertyAccessor.class);
  when(propertyAccessor.getProperty(1,propertyKeyId)).thenReturn(stringProperty(propertyKeyId,"value1"));
  when(propertyAccessor.getProperty(2,propertyKeyId)).thenReturn(stringProperty(propertyKeyId,"value2"));
  try {
    try (IndexUpdater updater=populator.newPopulatingUpdater(propertyAccessor)){
      updater.process(add(2,propertyKeyId,"value1",new long[]{1000}));
    }
     fail("should have thrown exception");
  }
 catch (  PreexistingIndexEntryConflictException conflict) {
    assertEquals(1,conflict.getExistingNodeId());
    assertEquals("value1",conflict.getPropertyValue());
    assertEquals(2,conflict.getAddedNodeId());
  }
}
