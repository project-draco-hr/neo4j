{
  DirectoryFactory.InMemoryDirectoryFactory directoryFactory=new DirectoryFactory.InMemoryDirectoryFactory();
  File indexDirectory=new File("target/whatever");
  final LuceneDocumentStructure documentStructure=new LuceneDocumentStructure();
  UniqueLuceneIndexPopulator populator=new UniqueLuceneIndexPopulator(100,documentStructure,tracking(),new IndexWriterStatus(),directoryFactory,indexDirectory,failureStorage,indexId);
  populator.create();
  int propertyKeyId=100;
  populator.add(1,"value1");
  populator.add(2,"value2");
  PropertyAccessor propertyAccessor=mock(PropertyAccessor.class);
  when(propertyAccessor.getProperty(1,propertyKeyId)).thenReturn(stringProperty(propertyKeyId,"value1"));
  when(propertyAccessor.getProperty(2,propertyKeyId)).thenReturn(stringProperty(propertyKeyId,"value2"));
  try (IndexUpdater updater=populator.newPopulatingUpdater(propertyAccessor)){
    updater.process(add(3,propertyKeyId,"value3",new long[]{1000}));
  }
   populator.close(true);
  List<Long> nodeIds=getAllNodes(directoryFactory,indexDirectory,"value3");
  assertEquals(asList(3l),nodeIds);
}
