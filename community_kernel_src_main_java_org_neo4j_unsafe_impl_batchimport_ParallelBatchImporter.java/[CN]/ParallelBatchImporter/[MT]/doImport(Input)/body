{
  logger.info("Import starting");
  NodeRelationshipLink nodeRelationshipLink=null;
  NodeLabelsCache nodeLabelsCache=null;
  long startTime=currentTimeMillis();
  try (BatchingNeoStore neoStore=new BatchingNeoStore(fileSystem,storeDir,config,writeMonitor,logging,monitors,writerFactory,highTokenIds)){
    IdMapper idMapper=input.idMapper();
    IdGenerator idGenerator=input.idGenerator();
    nodeRelationshipLink=new NodeRelationshipLinkImpl(AUTO,config.denseNodeThreshold());
    final ResourceIterable<InputNode> nodes=input.nodes();
    final ResourceIterable<InputRelationship> relationships=input.relationships();
    final NodeStage nodeStage=new NodeStage(nodes,idMapper,idGenerator,neoStore);
    final CalculateDenseNodesStage calculateDenseNodesStage=new CalculateDenseNodesStage(relationships,nodeRelationshipLink,idMapper);
    if (idMapper.needsPreparation()) {
      executeStages(nodeStage);
      executeStages(calculateDenseNodesStage);
    }
 else {
      executeStages(nodeStage,calculateDenseNodesStage);
    }
    final RelationshipStage relationshipStage=new RelationshipStage(relationships,idMapper,neoStore,nodeRelationshipLink);
    executeStages(relationshipStage);
    writerFactory.awaitEverythingWritten();
    neoStore.switchToUpdateMode();
    idMapper=null;
    idGenerator=null;
    final NodeFirstRelationshipStage nodeFirstRelationshipStage=new NodeFirstRelationshipStage(neoStore,nodeRelationshipLink);
    executeStages(nodeFirstRelationshipStage);
    nodeRelationshipLink.clearRelationships();
    final RelationshipLinkbackStage relationshipLinkbackStage=new RelationshipLinkbackStage(neoStore,nodeRelationshipLink);
    executeStages(relationshipLinkbackStage);
    nodeRelationshipLink.close();
    nodeRelationshipLink=null;
    nodeLabelsCache=new NodeLabelsCache(AUTO,neoStore.getLabelRepository().getHighId());
    final NodeCountsStage nodeCountsStage=new NodeCountsStage(neoStore,nodeLabelsCache);
    executeStages(nodeCountsStage);
    final RelationshipCountsStage relationshipCountsStage=new RelationshipCountsStage(neoStore,nodeLabelsCache);
    executeStages(relationshipCountsStage);
    long totalTimeMillis=currentTimeMillis() - startTime;
    executionPoller.done(totalTimeMillis);
    logger.info("Import completed, took " + Format.duration(totalTimeMillis));
  }
 catch (  Throwable t) {
    logger.error("Error during import",t);
    throw Exceptions.launderedException(IOException.class,t);
  }
 finally {
    writerFactory.shutdown();
    if (nodeRelationshipLink != null) {
      nodeRelationshipLink.close();
    }
    if (nodeLabelsCache != null) {
      nodeLabelsCache.close();
    }
  }
}
