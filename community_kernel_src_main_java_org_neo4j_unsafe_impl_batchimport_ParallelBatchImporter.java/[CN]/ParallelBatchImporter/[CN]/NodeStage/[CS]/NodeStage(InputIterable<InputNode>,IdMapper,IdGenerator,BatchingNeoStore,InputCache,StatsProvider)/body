{
  super("Nodes",config,true);
  add(new InputIteratorBatcherStep<>(control(),config.batchSize(),config.movingAverageSize(),nodes.iterator(),InputNode.class));
  if (!nodes.supportsMultiplePasses()) {
    add(new InputEntityCacherStep<>(control(),config.workAheadSize(),config.movingAverageSize(),inputCache.cacheNodes()));
  }
  NodeStore nodeStore=neoStore.getNodeStore();
  PropertyStore propertyStore=neoStore.getPropertyStore();
  add(new PropertyEncoderStep<>(control(),config,1,neoStore.getPropertyKeyRepository(),propertyStore));
  add(new NodeEncoderStep(control(),config,idMapper,idGenerator,neoStore.getLabelRepository(),nodeStore,memoryUsage));
  add(new EntityStoreUpdaterStep<>(control(),config,nodeStore,propertyStore,writeMonitor,writerFactory));
}
