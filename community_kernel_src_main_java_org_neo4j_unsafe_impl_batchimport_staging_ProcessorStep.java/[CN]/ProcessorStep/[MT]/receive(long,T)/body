{
  long idleTime=await(catchUp,executor.numberOfProcessors());
  incrementQueue();
  executor.submit(new Task<Sender>(){
    @Override public void run(    Sender sender){
      assertHealthy();
      sender.initialize(ticket);
      try {
        if (guarantees(ORDER_PROCESS)) {
          await(rightBeginTicket,ticket);
        }
        try (Resource precondition=permit(batch)){
          begunBatches.incrementAndGet();
          long startTime=currentTimeMillis();
          process(batch,sender);
          if (downstream == null) {
            doneBatches.incrementAndGet();
          }
          totalProcessingTime.add(currentTimeMillis() - startTime - sender.sendTime);
        }
         decrementQueue();
        checkNotifyEndDownstream();
      }
 catch (      Throwable e) {
        issuePanic(e);
      }
    }
  }
);
  return idleTime;
}
