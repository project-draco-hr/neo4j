{
  try {
    Configurator configurator=getConfigurator();
    HashMap<String,String> config=new HashMap<String,String>(configurator.getDatabaseTuningProperties());
    String dbLocation=new File(configurator.configuration().getString(Configurator.DATABASE_LOCATION_PROPERTY_KEY)).getAbsolutePath();
    if (new CurrentDatabase().storeFilesAtCurrentVersion(new File(dbLocation))) {
      return 0;
    }
    String separator=System.getProperty("file.separator");
    String store=dbLocation + separator + NeoStore.DEFAULT_NAME;
    config.put("store_dir",dbLocation);
    config.put("neo_store",store);
    if (!new UpgradableDatabase().storeFilesUpgradeable(new File(store))) {
      logger.info("Store files missing, or not in suitable state for upgrade. " + "Leaving this problem for main server process to resolve.");
      return 0;
    }
    FileSystemAbstraction fileSystem=new DefaultFileSystemAbstraction();
    Config conf=new Config(StringLogger.SYSTEM,fileSystem,config,Collections.<Class<?>>singletonList(GraphDatabaseSettings.class));
    StoreUpgrader storeUpgrader=new StoreUpgrader(conf,StringLogger.SYSTEM,new ConfigMapUpgradeConfiguration(conf),new UpgradableDatabase(),new StoreMigrator(new VisibleMigrationProgressMonitor(out)),new DatabaseFiles(),new DefaultIdGeneratorFactory(),fileSystem);
    try {
      storeUpgrader.attemptUpgrade(store);
    }
 catch (    UpgradeNotAllowedByConfigurationException e) {
      logger.info(e.getMessage());
      out.println(e.getMessage());
      return 1;
    }
catch (    StoreUpgrader.UnableToUpgradeException e) {
      logger.error(e);
      return 1;
    }
    return 0;
  }
 catch (  Exception e) {
    logger.error(e);
    return 1;
  }
}
