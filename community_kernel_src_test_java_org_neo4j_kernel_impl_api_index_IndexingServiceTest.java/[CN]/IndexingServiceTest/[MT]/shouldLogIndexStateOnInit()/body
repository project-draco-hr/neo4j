{
  TestLogger logger=new TestLogger();
  SchemaIndexProvider provider=mock(SchemaIndexProvider.class);
  when(provider.getProviderDescriptor()).thenReturn(PROVIDER_DESCRIPTOR);
  SchemaIndexProviderMap providerMap=new DefaultSchemaIndexProviderMap(provider);
  IndexingService indexingService=new IndexingService(mock(JobScheduler.class),providerMap,mock(IndexStoreView.class),mock(UpdateableSchemaState.class),mockLogging(logger));
  IndexRule onlineIndex=IndexRule.indexRule(1,1,1,PROVIDER_DESCRIPTOR);
  IndexRule populatingIndex=IndexRule.indexRule(2,2,2,PROVIDER_DESCRIPTOR);
  IndexRule failedIndex=IndexRule.indexRule(3,3,3,PROVIDER_DESCRIPTOR);
  when(provider.getInitialState(onlineIndex.getId())).thenReturn(InternalIndexState.ONLINE);
  when(provider.getInitialState(populatingIndex.getId())).thenReturn(InternalIndexState.POPULATING);
  when(provider.getInitialState(failedIndex.getId())).thenReturn(InternalIndexState.FAILED);
  indexingService.initIndexes(asList(onlineIndex,populatingIndex,failedIndex).iterator());
  logger.assertExactly(info("IndexingService.initIndexes: IndexDescriptor[label:1, property:1, constraintIndex:false] is ONLINE"),info("IndexingService.initIndexes: IndexDescriptor[label:2, property:2, constraintIndex:false] is POPULATING"),info("IndexingService.initIndexes: IndexDescriptor[label:3, property:3, constraintIndex:false] is FAILED"));
}
