{
  TestLogger logger=new TestLogger();
  SchemaIndexProvider provider=mock(SchemaIndexProvider.class);
  when(provider.getProviderDescriptor()).thenReturn(PROVIDER_DESCRIPTOR);
  SchemaIndexProviderMap providerMap=new DefaultSchemaIndexProviderMap(provider);
  IndexingService indexingService=new IndexingService(mock(JobScheduler.class),providerMap,mock(IndexStoreView.class),mock(UpdateableSchemaState.class),mockLogging(logger));
  IndexRule onlineIndex=new IndexRule(1,1,PROVIDER_DESCRIPTOR,1);
  IndexRule populatingIndex=new IndexRule(2,2,PROVIDER_DESCRIPTOR,2);
  IndexRule failedIndex=new IndexRule(3,3,PROVIDER_DESCRIPTOR,3);
  when(provider.getInitialState(onlineIndex.getId())).thenReturn(InternalIndexState.ONLINE);
  when(provider.getInitialState(populatingIndex.getId())).thenReturn(InternalIndexState.POPULATING);
  when(provider.getInitialState(failedIndex.getId())).thenReturn(InternalIndexState.FAILED);
  indexingService.initIndexes(asList(onlineIndex,populatingIndex,failedIndex).iterator());
  logger.clear();
  indexingService.start();
  logger.assertAtLeastOnce(info("IndexingService.start: IndexDescriptor[label:1, property:1] is ONLINE"));
  logger.assertAtLeastOnce(info("IndexingService.start: IndexDescriptor[label:2, property:2] is POPULATING"));
  logger.assertAtLeastOnce(info("IndexingService.start: IndexDescriptor[label:3, property:3] is FAILED"));
}
