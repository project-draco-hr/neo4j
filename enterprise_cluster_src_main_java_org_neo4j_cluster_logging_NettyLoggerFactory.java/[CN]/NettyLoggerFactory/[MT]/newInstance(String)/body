{
  final Log log=logProvider.getLog(name);
  return new AbstractInternalLogger(){
    @Override public boolean isDebugEnabled(){
      return log.isDebugEnabled();
    }
    @Override public boolean isInfoEnabled(){
      return true;
    }
    @Override public boolean isWarnEnabled(){
      return true;
    }
    @Override public boolean isErrorEnabled(){
      return true;
    }
    @Override public boolean isEnabled(    InternalLogLevel level){
      return level != InternalLogLevel.DEBUG || isDebugEnabled();
    }
    @Override public void debug(    String msg){
      log.debug(msg);
    }
    @Override public void debug(    String msg,    Throwable cause){
      log.debug(msg,cause);
    }
    @Override public void info(    String msg){
      log.info(msg);
    }
    @Override public void info(    String msg,    Throwable cause){
      log.info(msg,cause);
    }
    @Override public void warn(    String msg){
      log.warn(msg);
    }
    @Override public void warn(    String msg,    Throwable cause){
      log.warn(msg,cause);
    }
    @Override public void error(    String msg){
      log.error(msg);
    }
    @Override public void error(    String msg,    Throwable cause){
      log.error(msg,cause);
    }
  }
;
}
