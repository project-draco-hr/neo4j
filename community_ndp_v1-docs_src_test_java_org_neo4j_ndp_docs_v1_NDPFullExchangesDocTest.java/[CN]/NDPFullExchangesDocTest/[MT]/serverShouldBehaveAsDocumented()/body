{
  try (NDPConn client=new NDPConn()){
    for (    DocExchangeExample.Event event : example) {
      if (event.from().equalsIgnoreCase("client")) {
switch (event.type()) {
case CONNECT:
          client.connect(neo4j.address());
        break;
case DISCONNECT:
      client.disconnect();
    break;
case SEND:
  if (event.hasHumanReadableValue()) {
    assertThat("'" + event.humanReadableMessage() + "' should serialize to the documented "+ "binary data.",hex(event.payload()),equalTo(hex(packAndChunk(event.humanReadableMessage(),64))));
  }
client.send(event.payload());
break;
default :
throw new RuntimeException("Unknown client event: " + event.type());
}
}
 else if (event.from().equalsIgnoreCase("server")) {
switch (event.type()) {
case DISCONNECT:
break;
case SEND:
if (event.hasHumanReadableValue()) {
assertThat("'" + event.humanReadableMessage() + "' should serialize to the documented "+ "binary data.",hex(event.payload()),equalTo(hex(packAndChunk(event.humanReadableMessage(),512))));
}
byte[] recieved=client.recv(event.payload().length);
assertThat(hex(recieved),equalTo(hex(event.payload())));
break;
default :
throw new RuntimeException("Unknown server event: " + event.type());
}
}
}
}
 }
