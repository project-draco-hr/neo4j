{
  List<IndexableField> fields=document.getFields();
  int expectedLabelFields=fields.size() - 1;
  long[] scratchLabelIds=new long[expectedLabelFields];
  Bitmap[] scratchBitmaps=new Bitmap[expectedLabelFields];
  int i=0;
  long rangeId=-1;
  for (  IndexableField field : fields) {
    if (format.isRangeField(field)) {
      rangeId=format.rangeOf(field);
    }
 else     if (format.isLabelBitmapField(field)) {
      scratchLabelIds[i]=format.labelId(field);
      scratchBitmaps[i]=format.readBitmap(field);
      i++;
    }
  }
  assert(rangeId >= 0);
  final long[] labelIds;
  final Bitmap[] bitmaps;
  if (i < expectedLabelFields) {
    labelIds=Arrays.copyOf(scratchLabelIds,i);
    bitmaps=Arrays.copyOf(scratchBitmaps,i);
  }
 else {
    labelIds=scratchLabelIds;
    bitmaps=scratchBitmaps;
  }
  return LuceneNodeLabelRange.fromBitmapStructure(id,labelIds,getLongs(bitmaps,rangeId));
}
