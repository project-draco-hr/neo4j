{
  int pos=0;
  int braceCounter=0;
  Map<String,Object> map=new HashMap<>();
  StringBuilder builder=new StringBuilder();
  while (pos < s.length()) {
    char character=s.charAt(pos);
switch (character) {
case ' ':
      ++pos;
    break;
case '{':
  if (braceCounter++ > 0) {
    builder.append(s.charAt(pos));
  }
++pos;
break;
case ',':
if (braceCounter == 1) {
addKeyValue(map,builder.toString().trim());
builder=new StringBuilder();
}
 else {
builder.append(s.charAt(pos));
}
++pos;
break;
case '}':
if (--braceCounter == 0) {
addKeyValue(map,builder.toString().trim());
}
 else {
builder.append(s.charAt(pos));
}
++pos;
break;
default :
builder.append(s.charAt(pos++));
break;
}
}
if (braceCounter != 0) {
throw new IllegalArgumentException(String.format("%s contains unbalanced '{', '}'.",s));
}
return map;
}
