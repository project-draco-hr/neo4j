{
  if (key == null || value == null) {
    throw new IllegalValueException("Null parameter, " + "key=" + key + ", "+ "value="+ value);
  }
  acquireLock(this,LockType.WRITE);
  try {
    ensureFullRelationship();
    PropertyIndex index=null;
    Property property=null;
    for (    PropertyIndex cachedIndex : PropertyIndex.index(key)) {
      property=propertyMap.get(cachedIndex.getKeyId());
      index=cachedIndex;
      if (property != null) {
        break;
      }
    }
    if (property == null && !PropertyIndex.hasAll()) {
      for (      int keyId : propertyMap.keySet()) {
        if (!PropertyIndex.hasIndexFor(keyId)) {
          PropertyIndex indexToCheck=PropertyIndex.getIndexFor(keyId);
          if (indexToCheck.getKey().equals(key)) {
            index=indexToCheck;
            property=propertyMap.get(indexToCheck.getKeyId());
            break;
          }
        }
      }
    }
    if (index == null) {
      index=PropertyIndex.createPropertyIndex(key);
    }
    Event event=Event.RELATIONSHIP_ADD_PROPERTY;
    RelationshipOpData data;
    if (property != null) {
      int propertyId=property.getId();
      data=new RelationshipOpData(this,id,propertyId,index,value);
      event=Event.RELATIONSHIP_CHANGE_PROPERTY;
    }
 else {
      data=new RelationshipOpData(this,id,-1,index,value);
    }
    EventManager em=EventManager.getManager();
    EventData eventData=new EventData(data);
    if (!em.generateProActiveEvent(event,eventData)) {
      setRollbackOnly();
      throw new IllegalValueException("Generate pro-active event failed.");
    }
    if (event == Event.RELATIONSHIP_ADD_PROPERTY) {
      doAddProperty(index,new Property(data.getPropertyId(),value));
    }
 else {
      doChangeProperty(index,new Property(data.getPropertyId(),value));
    }
    em.generateReActiveEvent(event,eventData);
  }
  finally {
    releaseLock(this,LockType.WRITE);
  }
}
