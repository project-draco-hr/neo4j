{
  if (keyComparator.compare(newKey,node.key) > 0) {
    throw new RuntimeException("Trying to decrease to a greater key");
  }
  node.key=newKey;
  FibonacciHeapNode parent=node.parent;
  if (parent != null && keyComparator.compare(node.key,parent.key) < 0) {
    cut(node,parent);
    cascadingCut(parent);
  }
  if (keyComparator.compare(node.key,minimum.key) < 0) {
    minimum=node;
  }
}
