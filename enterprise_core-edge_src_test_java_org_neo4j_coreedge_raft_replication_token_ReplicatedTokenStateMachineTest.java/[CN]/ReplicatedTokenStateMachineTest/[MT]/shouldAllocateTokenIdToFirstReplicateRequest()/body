{
  when(dependencies.resolveDependency(TransactionRepresentationCommitProcess.class)).thenReturn(mock(TransactionRepresentationCommitProcess.class));
  TokenRegistry<Token> registry=new TokenRegistry<>("Label");
  ReplicatedTokenStateMachine<Token> stateMachine=new ReplicatedTokenStateMachine<>(registry,dependencies,new Token.Factory(),LABEL,NullLogProvider.getInstance(),mock(RecoverTransactionLogState.class));
  ReplicatedTokenRequest winningRequest=new ReplicatedTokenRequest(LABEL,"Person",commandBytes(tokenCommands(EXPECTED_TOKEN_ID)));
  ReplicatedTokenRequest losingRequest=new ReplicatedTokenRequest(LABEL,"Person",commandBytes(tokenCommands(UNEXPECTED_TOKEN_ID)));
  stateMachine.applyCommand(winningRequest,1);
  stateMachine.applyCommand(losingRequest,2);
  assertEquals(EXPECTED_TOKEN_ID,(int)registry.getId("Person"));
}
