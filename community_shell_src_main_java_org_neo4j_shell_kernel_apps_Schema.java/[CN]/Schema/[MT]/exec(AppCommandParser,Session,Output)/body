{
  String action=parser.argumentWithDefault(0,"ls");
  org.neo4j.graphdb.schema.Schema schema=getServer().getDb().schema();
  Label[] labels=parseLabels(parser);
  RelationshipType[] relTypes=parseRelTypes(parser);
  String property=parser.option("p",null);
  boolean sampleAll=parser.options().containsKey("a");
  boolean forceSample=parser.options().containsKey("f");
  boolean verbose=parser.options().containsKey("v");
switch (action) {
case "await":
    if (relTypes.length > 0) {
      throw new ShellException("It is only possible to await nodes related index");
    }
  awaitIndexes(out,schema,labels,property);
break;
case "progress":
if (relTypes.length > 0) {
throw new ShellException("It is only possible to show progress on nodes related index");
}
printIndexProgress(out,schema,labels,property);
break;
case "ls":
listIndexesAndConstraints(out,schema,labels,relTypes,property,verbose);
break;
case "sample":
if (relTypes.length > 0) {
throw new ShellException("It is only possible to sample nodes related index");
}
sampleIndexes(labels,property,sampleAll,forceSample);
break;
default :
out.println("Unknown action: " + action + "\nUSAGE:\n"+ getDescription());
break;
}
return INPUT_COMPLETE;
}
