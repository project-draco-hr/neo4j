{
  List<RelationshipRecord> out=new ArrayList<>();
  List<RelationshipRecord> in=new ArrayList<>();
  List<RelationshipRecord> loop=null;
  Map<DirectionWrapper,Iterable<RelationshipRecord>> result=new EnumMap<>(DirectionWrapper.class);
  result.put(DirectionWrapper.OUTGOING,out);
  result.put(DirectionWrapper.INCOMING,in);
  for (int i=0; i < grabSize && position != Record.NO_NEXT_RELATIONSHIP.intValue(); i++) {
    RelationshipRecord relRecord=relStore.getChainRecord(position);
    if (relRecord == null) {
      return Pair.of(result,position);
    }
    long firstNode=relRecord.getFirstNode();
    long secondNode=relRecord.getSecondNode();
    if (relRecord.inUse()) {
      if (firstNode == secondNode) {
        if (loop == null) {
          loop=new ArrayList<>();
          result.put(DirectionWrapper.BOTH,loop);
        }
        loop.add(relRecord);
      }
 else       if (firstNode == nodeId) {
        out.add(relRecord);
      }
 else       if (secondNode == nodeId) {
        in.add(relRecord);
      }
    }
 else {
      i--;
    }
    if (firstNode == nodeId) {
      position=relRecord.getFirstNextRel();
    }
 else     if (secondNode == nodeId) {
      position=relRecord.getSecondNextRel();
    }
 else {
      throw new InvalidRecordException("Node[" + nodeId + "] is neither firstNode["+ firstNode+ "] nor secondNode["+ secondNode+ "] for Relationship["+ relRecord.getId()+ "]");
    }
  }
  return Pair.of(result,position);
}
