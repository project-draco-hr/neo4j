{
  if (committed) {
    throw new XAException("Cannot rollback partialy commited " + "transaction[" + getIdentifier() + "]. Recover and "+ "commit");
  }
  try {
    boolean freeIds=neoStore.freeIdsDuringRollback();
    if (relTypeRecords != null)     for (    RelationshipTypeRecord record : relTypeRecords.values()) {
      if (record.isCreated()) {
        if (freeIds)         getRelationshipTypeStore().freeId(record.getId());
        for (        DynamicRecord dynamicRecord : record.getNameRecords()) {
          if (dynamicRecord.isCreated()) {
            getRelationshipTypeStore().freeId((int)dynamicRecord.getId());
          }
        }
      }
      removeRelationshipTypeFromCache(record.getId());
    }
    for (    NodeRecord record : nodeRecords.values()) {
      if (freeIds && record.isCreated()) {
        getNodeStore().freeId(record.getId());
      }
      removeNodeFromCache(record.getId());
    }
    for (    RelationshipRecord record : relRecords.values()) {
      if (freeIds && record.isCreated()) {
        getRelationshipStore().freeId(record.getId());
      }
      removeRelationshipFromCache(record.getId());
    }
    if (neoStoreRecord != null) {
      removeGraphPropertiesFromCache();
    }
    if (propIndexRecords != null)     for (    PropertyIndexRecord record : propIndexRecords.values()) {
      if (record.isCreated()) {
        if (freeIds)         getPropertyStore().getIndexStore().freeId(record.getId());
        for (        DynamicRecord dynamicRecord : record.getNameRecords()) {
          if (dynamicRecord.isCreated()) {
            getPropertyStore().getIndexStore().freeId((int)dynamicRecord.getId());
          }
        }
      }
    }
    for (    PropertyRecord record : propertyRecords.values()) {
      if (record.getNodeId() != -1) {
        removeNodeFromCache(record.getNodeId());
      }
 else       if (record.getRelId() != -1) {
        removeRelationshipFromCache(record.getRelId());
      }
      if (record.isCreated()) {
        if (freeIds)         getPropertyStore().freeId(record.getId());
        for (        PropertyBlock block : record.getPropertyBlocks()) {
          for (          DynamicRecord dynamicRecord : block.getValueRecords()) {
            if (dynamicRecord.isCreated()) {
              if (dynamicRecord.getType() == PropertyType.STRING.intValue()) {
                getPropertyStore().freeStringBlockId(dynamicRecord.getId());
              }
 else               if (dynamicRecord.getType() == PropertyType.ARRAY.intValue()) {
                getPropertyStore().freeArrayBlockId(dynamicRecord.getId());
              }
 else {
                throw new InvalidRecordException("Unknown type on " + dynamicRecord);
              }
            }
          }
        }
      }
    }
    for (    Pair<Collection<DynamicRecord>,SchemaRule> records : schemaRuleRecords.values()) {
      long id=-1;
      for (      DynamicRecord record : records.first()) {
        if (id == -1)         id=record.getId();
        if (freeIds && record.isCreated()) {
          getSchemaStore().freeId(record.getId());
        }
      }
    }
  }
  finally {
    clear();
  }
}
