{
  long propertyId=propertyData.getId();
  RelationshipRecord relRecord=getRelationshipRecord(relId);
  if (relRecord == null) {
    relRecord=getRelationshipStore().getRecord(relId);
    addRelationshipRecord(relRecord);
  }
  if (!relRecord.inUse()) {
    throw new IllegalStateException("Property remove on relationship[" + relId + "] illegal since it has been deleted.");
  }
  PropertyRecord propRecord=getPropertyRecord(propertyId,false);
  if (!propRecord.inUse()) {
    throw new IllegalStateException("Unable to delete property[" + propertyId + "] since it is already deleted.");
  }
  propRecord.setRelId(relId);
  PropertyBlock block=propRecord.removePropertyBlock(propertyData.getIndex());
  if (block == null) {
    throw new IllegalStateException("Property with index[" + propertyData.getIndex() + "] is not present in property["+ propertyId+ "]");
  }
  if (block.isLight()) {
    getPropertyStore().makeHeavy(block);
  }
  block.setChanged();
  propRecord.setChanged();
  for (  DynamicRecord valueRecord : block.getValueRecords()) {
    if (valueRecord.inUse()) {
      valueRecord.setInUse(false,block.getType().intValue());
      propRecord.addDeletedRecord(valueRecord);
    }
  }
  if (propRecord.getUsedPayloadBytes() > 0) {
    return;
  }
 else {
    unlinkPropertyRecord(propRecord,relRecord);
  }
}
