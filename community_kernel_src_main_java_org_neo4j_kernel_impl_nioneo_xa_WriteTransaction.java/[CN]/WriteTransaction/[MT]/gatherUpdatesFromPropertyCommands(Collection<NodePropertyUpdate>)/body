{
  final PropertyStore propertyStore=getPropertyStore();
  final NodeStore nodeStore=getNodeStore();
  for (  PropertyCommand propertyCommand : propCommands) {
    PropertyRecord after=propertyCommand.getAfter();
    if (after.isNodeSet()) {
      long[] nodeLabelsBefore, nodeLabelsAfter;
      NodeCommand nodeChanges=nodeCommands.get(after.getNodeId());
      if (nodeChanges != null) {
        nodeLabelsBefore=nodeStore.getLabelsForNode(nodeChanges.getBefore());
        nodeLabelsAfter=nodeStore.getLabelsForNode(nodeChanges.getAfter());
      }
 else       nodeLabelsBefore=nodeLabelsAfter=nodeStore.getLabelsForNode(nodeStore.getRecord(after.getNodeId()));
      for (      NodePropertyUpdate update : propertyStore.toLogicalUpdates(propertyCommand.getBefore(),nodeLabelsBefore,after,nodeLabelsAfter)) {
        updates.add(update);
      }
    }
  }
}
