{
  long propertyId=propertyData.getId();
  PropertyRecord propertyRecord=getPropertyRecord(propertyId,true,true);
  if (!propertyRecord.inUse()) {
    throw new IllegalStateException("Unable to change property[" + propertyId + "] since it has been deleted.");
  }
  if (isNode) {
    propertyRecord.setNodeId(primitive.getId());
  }
 else {
    propertyRecord.setRelId(primitive.getId());
  }
  PropertyBlock block=propertyRecord.getPropertyBlock(propertyData.getIndex());
  if (block == null) {
    throw new IllegalStateException("Property with index[" + propertyData.getIndex() + "] is not present in property["+ propertyId+ "]");
  }
  if (block.isLight()) {
    getPropertyStore().makeHeavy(block);
  }
  propertyRecord.setChanged();
  for (  DynamicRecord record : block.getValueRecords()) {
    record.setInUse(false,block.getType().intValue());
    propertyRecord.addDeletedRecord(record);
  }
  int oldSize=block.getSize();
  int oldRecordSize=propertyRecord.size();
  getPropertyStore().encodeValue(block,propertyData.getIndex(),value);
  if (oldRecordSize - oldSize + block.getSize() > PropertyType.getPayloadSize()) {
    PropertyRecord oldRecord=propertyRecord;
    propertyRecord.removePropertyBlock(propertyData.getIndex());
    propertyRecord=addPropertyBlockToPrimitive(block,primitive,isNode);
    if (propertyRecord != oldRecord && oldRecord.size() == 0) {
      oldRecord.setInUse(false);
    }
  }
  return block.newPropertyData(propertyRecord,value);
}
