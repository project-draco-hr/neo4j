{
  final NodeStore nodeStore=getNodeStore();
  for (  NodeCommand nodeCommand : nodeCommands.values()) {
    long nodeId=nodeCommand.getKey();
    long[] labelsBefore=parseLabelsField(nodeCommand.getBefore()).get(nodeStore);
    long[] labelsAfter=parseLabelsField(nodeCommand.getAfter()).get(nodeStore);
    labelUpdates.add(NodeLabelUpdate.labelChanges(nodeId,labelsBefore,labelsAfter));
    if (nodeCommand.getMode() != Mode.UPDATE) {
      continue;
    }
    for (    long labelAfter : labelsAfter) {
      if (binarySearch(labelsBefore,labelAfter) < 0) {
        Iterator<DefinedProperty> properties=nodeFullyLoadProperties(nodeId);
        while (properties.hasNext()) {
          DefinedProperty property=properties.next();
          propertyUpdates.add(NodePropertyUpdate.add(nodeId,property.propertyKeyId(),property.value(),new long[]{labelAfter}));
        }
      }
    }
    for (    long labelBefore : labelsBefore) {
      if (binarySearch(labelsAfter,labelBefore) < 0) {
        Iterator<DefinedProperty> properties=nodeFullyLoadProperties(nodeId);
        while (properties.hasNext()) {
          DefinedProperty property=properties.next();
          propertyUpdates.add(NodePropertyUpdate.remove(nodeId,property.propertyKeyId(),property.value(),new long[]{labelBefore}));
        }
      }
    }
  }
}
