{
  Buffer buffer=window.getOffsettedBuffer(id);
  long inUseByte=buffer.get();
  boolean inUse=(inUseByte & 0x1) == Record.IN_USE.intValue();
  if (!inUse) {
    if (checkInUse) {
      return null;
    }
    throw new InvalidRecordException("Record[" + id + "] not in use");
  }
  long firstNode=buffer.getUnsignedInt();
  long firstNodeMod=(inUseByte & 0xE) << 31;
  long secondNode=buffer.getUnsignedInt();
  long typeInt=buffer.getInt();
  long secondNodeMod=(typeInt & 0x70000000L) << 4;
  int type=(int)(typeInt & 0xFFFF);
  RelationshipRecord record=new RelationshipRecord(id,longFromIntAndMod(firstNode,firstNodeMod),longFromIntAndMod(secondNode,secondNodeMod),type);
  record.setInUse(inUse);
  long firstPrevRel=buffer.getUnsignedInt();
  long firstPrevRelMod=firstPrevRel == IdGeneratorImpl.INTEGER_MINUS_ONE && (typeInt & 0xE000000) == 0 ? 0 : (typeInt & 0xE000000) << 7;
  record.setFirstPrevRel(longFromIntAndMod(firstPrevRel,firstPrevRelMod));
  long firstNextRel=buffer.getUnsignedInt();
  long firstNextRelMod=firstNextRel == IdGeneratorImpl.INTEGER_MINUS_ONE && (typeInt & 0x1C00000) == 0 ? 0 : (typeInt & 0x1C00000) << 10;
  record.setFirstNextRel(longFromIntAndMod(firstNextRel,firstNextRelMod));
  long secondPrevRel=buffer.getUnsignedInt();
  long secondPrevRelMod=secondPrevRel == IdGeneratorImpl.INTEGER_MINUS_ONE && (typeInt & 0x380000) == 0 ? 0 : (typeInt & 0x380000) << 13;
  record.setSecondPrevRel(longFromIntAndMod(secondPrevRel,secondPrevRelMod));
  long secondNextRel=buffer.getUnsignedInt();
  long secondNextRelMod=secondNextRel == IdGeneratorImpl.INTEGER_MINUS_ONE && (typeInt & 0x70000) == 0 ? 0 : (typeInt & 0x70000) << 16;
  record.setSecondNextRel(longFromIntAndMod(secondNextRel,secondNextRelMod));
  long nextProp=buffer.getUnsignedInt();
  long nextPropMod=nextProp == IdGeneratorImpl.INTEGER_MINUS_ONE && (inUseByte & 0xF0) == 0 ? 0 : (inUseByte & 0xF0) << 28;
  record.setNextProp(longFromIntAndMod(nextProp,nextPropMod));
  return record;
}
