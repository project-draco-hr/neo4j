{
  final TaskExecutor<Void> executor=new DynamicTaskExecutor<>(2,0,10,PARK,getClass().getSimpleName());
  IOException exception=new IOException("Failure");
  FailingTask failingTask=new FailingTask(exception);
  executor.submit(failingTask);
  failingTask.latch.await();
  try (OtherThreadExecutor<Void> closer=new OtherThreadExecutor<>("closer",null)){
    Future<Void> shutdown=closer.executeDontWait(new WorkerCommand<Void,Void>(){
      @Override public Void doWork(      Void state) throws Exception {
        executor.shutdown(SF_AWAIT_ALL_COMPLETED);
        return null;
      }
    }
);
    while (!closer.waitUntilWaiting().isAt(DynamicTaskExecutor.class,"shutdown")) {
      Thread.sleep(10);
    }
    failingTask.latch.release();
    shutdown.get();
  }
 }
