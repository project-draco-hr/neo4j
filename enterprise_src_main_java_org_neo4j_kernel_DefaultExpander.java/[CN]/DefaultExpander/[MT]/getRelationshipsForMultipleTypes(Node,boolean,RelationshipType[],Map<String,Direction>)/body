{
  return new FilteringIterable<Relationship>(start.getRelationships(types)){
    @Override protected boolean passes(    Relationship item){
switch (directions.get(item.getType().name())) {
case INCOMING:
        return reversedDirection ? item.getStartNode().equals(start) : item.getEndNode().equals(start);
case OUTGOING:
      return reversedDirection ? item.getEndNode().equals(start) : item.getStartNode().equals(start);
default :
    return true;
}
}
}
;
}
