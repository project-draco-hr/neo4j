{
  Set<JavaFileObject> sources=null;
  for (  Diagnostic<?> diagnostic : diagnostics) {
    Object source=diagnostic.getSource();
    if (source instanceof JavaFileObject) {
      JavaFileObject file=(JavaFileObject)source;
      if (file.getKind() == JavaFileObject.Kind.SOURCE) {
        if (sources == null) {
          sources=Collections.newSetFromMap(new IdentityHashMap<JavaFileObject,Boolean>());
        }
        sources.add(file);
      }
    }
  }
  if (sources == null) {
    return "";
  }
  StringBuilder result=new StringBuilder();
  for (  JavaFileObject source : sources) {
    int pos=result.length();
    result.append("\nSource file ").append(source.getName()).append(":\n");
    try {
      CharSequence content=source.getCharContent(true);
      result.append(String.format("%4d: ",1));
      for (int line=1, i=0; i < content.length(); i++) {
        char c=content.charAt(i);
        result.append(c);
        if (c == '\n') {
          result.append(String.format("%4d: ",++line));
        }
      }
    }
 catch (    IOException e) {
      result.setLength(pos);
    }
  }
  return result.toString();
}
