{
  int currentMasterId;
  try {
    String root=getRoot();
    List<String> children=zooKeeper.getChildren(root,false);
    currentMasterId=-1;
    int lowestSeq=Integer.MAX_VALUE;
    long highestTxId=-1;
    for (    String child : children) {
      int index=child.indexOf('_');
      int id=Integer.parseInt(child.substring(0,index));
      int seq=Integer.parseInt(child.substring(index + 1));
      try {
        byte[] data=zooKeeper.getData(root + "/" + child,false,null);
        ByteBuffer buf=ByteBuffer.wrap(data);
        long tx=buf.getLong();
        if (tx >= highestTxId) {
          highestTxId=tx;
          if (seq < lowestSeq) {
            currentMasterId=id;
            lowestSeq=seq;
          }
        }
      }
 catch (      KeeperException e) {
        if (e.code() != KeeperException.Code.NONODE) {
          throw e;
        }
      }
    }
  }
 catch (  InterruptedException e) {
    Thread.interrupted();
    throw new ZooKeeperException("Interrupted",e);
  }
  return currentMasterId;
}
