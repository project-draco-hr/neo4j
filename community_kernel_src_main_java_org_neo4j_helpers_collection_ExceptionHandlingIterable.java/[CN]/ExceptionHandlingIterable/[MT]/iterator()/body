{
  try {
    final Iterator<T> it=source.iterator();
    return new Iterator<T>(){
      @Override public boolean hasNext(){
        try {
          return it.hasNext();
        }
 catch (        Throwable t) {
          return exceptionOnHasNext(t);
        }
      }
      @Override public T next(){
        try {
          return it.next();
        }
 catch (        Throwable t) {
          return exceptionOnNext(t);
        }
      }
      @Override public void remove(){
        try {
          it.remove();
        }
 catch (        Throwable t) {
          exceptionOnRemove(t);
        }
      }
    }
;
  }
 catch (  Throwable t) {
    return exceptionOnIterator(t);
  }
}
