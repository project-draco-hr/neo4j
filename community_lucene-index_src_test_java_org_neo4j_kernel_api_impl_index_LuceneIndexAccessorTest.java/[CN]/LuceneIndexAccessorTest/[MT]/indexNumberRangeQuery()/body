{
  updateAndCommit(asList(add(1,1),add(2,2),add(3,3),add(4,4),add(5,Double.NaN)));
  IndexReader reader=accessor.newReader();
  PrimitiveLongIterator rangeTwoThree=reader.rangeSeekByNumberInclusive(2,3);
  assertThat(PrimitiveLongCollections.asArray(rangeTwoThree),LongArrayMatcher.of(2,3));
  PrimitiveLongIterator infiniteMaxRange=reader.rangeSeekByNumberInclusive(2,Long.MAX_VALUE);
  assertThat(PrimitiveLongCollections.asArray(infiniteMaxRange),LongArrayMatcher.of(2,3,4));
  PrimitiveLongIterator infiniteMinRange=reader.rangeSeekByNumberInclusive(Long.MIN_VALUE,3);
  assertThat(PrimitiveLongCollections.asArray(infiniteMinRange),LongArrayMatcher.of(1,2,3));
  PrimitiveLongIterator maxNanInterval=reader.rangeSeekByNumberInclusive(3,Double.NaN);
  assertThat(PrimitiveLongCollections.asArray(maxNanInterval),LongArrayMatcher.of(3,4,5));
  PrimitiveLongIterator minNanInterval=reader.rangeSeekByNumberInclusive(Double.NaN,5);
  assertThat(PrimitiveLongCollections.asArray(minNanInterval),LongArrayMatcher.emptyArrayMatcher());
  PrimitiveLongIterator nanInterval=reader.rangeSeekByNumberInclusive(Double.NaN,Double.NaN);
  assertThat(PrimitiveLongCollections.asArray(nanInterval),LongArrayMatcher.of(5));
}
