{
  if (config.get(MetricsSettings.neoPageCacheEnabled)) {
    registry.register(PC_PAGE_FAULTS,new Gauge<Long>(){
      @Override public Long getValue(){
        return pageCacheCounters.countFaults();
      }
    }
);
    registry.register(PC_EVICTIONS,new Gauge<Long>(){
      @Override public Long getValue(){
        return pageCacheCounters.countEvictions();
      }
    }
);
    registry.register(PC_PINS,new Gauge<Long>(){
      @Override public Long getValue(){
        return pageCacheCounters.countPins();
      }
    }
);
    registry.register(PC_UNPINS,new Gauge<Long>(){
      @Override public Long getValue(){
        return pageCacheCounters.countUnpins();
      }
    }
);
    registry.register(PC_FLUSHES,new Gauge<Long>(){
      @Override public Long getValue(){
        return pageCacheCounters.countFlushes();
      }
    }
);
    registry.register(PC_EVICTION_EXCEPTIONS,new Gauge<Long>(){
      @Override public Long getValue(){
        return pageCacheCounters.countEvictionExceptions();
      }
    }
);
  }
}
