{
  StageControl control=mock(StageControl.class);
  final CountDownLatch latch=new CountDownLatch(1);
  final ProcessorStep<Void> step=new BlockingProcessorStep(control,0,latch);
  step.start(ORDER_PROCESS);
  step.setNumberOfProcessors(3);
  for (int i=0; i < step.numberOfProcessors() + 1; i++) {
    step.receive(i,null);
  }
  Future<Void> receiveFuture=t2.execute(new WorkerCommand<Void,Void>(){
    @Override public Void doWork(    Void state) throws Exception {
      step.receive(step.numberOfProcessors(),null);
      return null;
    }
  }
);
  t2.get().waitUntilThreadState(Thread.State.TIMED_WAITING);
  latch.countDown();
  receiveFuture.get();
}
