{
  return new Iterable<T>(){
    @Override public Iterator<T> iterator(){
      if (cursor.next()) {
        final T first=cursor.get();
        return new Iterator<T>(){
          T instance=first;
          @Override public boolean hasNext(){
            return instance != null;
          }
          @Override public T next(){
            try {
              return instance;
            }
  finally {
              if (cursor.next()) {
                instance=cursor.get();
              }
 else {
                instance=null;
              }
            }
          }
          @Override public void remove(){
            throw new UnsupportedOperationException();
          }
        }
;
      }
 else {
        return Collections.emptyIterator();
      }
    }
  }
;
}
