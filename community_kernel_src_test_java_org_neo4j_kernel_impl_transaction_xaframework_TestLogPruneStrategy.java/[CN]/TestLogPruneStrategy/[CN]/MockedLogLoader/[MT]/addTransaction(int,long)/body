{
  InMemoryLogBuffer tempLogBuffer=new InMemoryLogBuffer();
  XidImpl xid=new XidImpl(getNewGlobalId(DEFAULT_SEED,0),RESOURCE_XID);
  LogIoUtils.writeStart(tempLogBuffer,identifier,xid,-1,-1,date,Long.MAX_VALUE);
  LogIoUtils.writeCommand(tempLogBuffer,identifier,new TestXaCommand(commandSize),new XaCommandWriter(){
    @Override public void write(    XaCommand command,    LogBuffer buffer) throws IOException {
      TestXaCommand test=(TestXaCommand)command;
      buffer.putInt(test.getTotalSize());
      buffer.put(new byte[test.getTotalSize() - 4]);
    }
  }
);
  LogIoUtils.writeCommit(false,tempLogBuffer,identifier,++tx,date);
  LogIoUtils.writeDone(tempLogBuffer,identifier);
  tempLogBuffer.read(activeBuffer);
  if (!timestamps.containsKey(version)) {
    timestamps.put(version,date);
  }
  boolean rotate=(activeBuffer.capacity() - activeBuffer.remaining()) >= logSize;
  if (rotate) {
    rotate();
  }
  return rotate;
}
