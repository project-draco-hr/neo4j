{
  PrimitiveLongIterable items=new PrimitiveLongIterable(){
    @Override public PrimitiveLongIterator iterator(){
      return PrimitiveLongCollections.iterator(10,20,30);
    }
  }
;
  try {
    PrimitiveLongCollections.itemAt(items.iterator(),3);
    fail("Should throw exception");
  }
 catch (  NoSuchElementException e) {
    assertThat(e.getMessage(),containsString("No element"));
  }
  try {
    PrimitiveLongCollections.itemAt(items.iterator(),-4);
    fail("Should throw exception");
  }
 catch (  NoSuchElementException e) {
    assertThat(e.getMessage(),containsString("not found"));
  }
  assertEquals(10,PrimitiveLongCollections.itemAt(items.iterator(),0));
  assertEquals(20,PrimitiveLongCollections.itemAt(items.iterator(),1));
  assertEquals(30,PrimitiveLongCollections.itemAt(items.iterator(),2));
  assertEquals(30,PrimitiveLongCollections.itemAt(items.iterator(),-1));
  assertEquals(20,PrimitiveLongCollections.itemAt(items.iterator(),-2));
  assertEquals(10,PrimitiveLongCollections.itemAt(items.iterator(),-3));
}
