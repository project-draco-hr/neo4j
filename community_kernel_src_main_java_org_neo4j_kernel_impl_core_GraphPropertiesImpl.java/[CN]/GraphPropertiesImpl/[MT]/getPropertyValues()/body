{
  final StatementOperationParts context=statementCtxProvider.getCtxForReading();
  StatementState state=statementCtxProvider.statementForReading();
  try {
    return asSet(map(new Function<Property,Object>(){
      @Override public Object apply(      Property prop){
        try {
          return prop.value();
        }
 catch (        PropertyNotFoundException e) {
          throw new ThisShouldNotHappenError("Jake","Property key retrieved through kernel API should exist.");
        }
      }
    }
,context.entityReadOperations().graphGetAllProperties(state)));
  }
  finally {
    context.close(state);
  }
}
