{
  haDbs=haDbs != null ? haDbs : new ArrayList<GraphDatabaseAPI>();
  File slavePath=dbPath(machineId);
  final Map<String,String> cfg=new HashMap<String,String>(config);
  cfg.put(HaSettings.server_id.name(),Integer.toString(machineId));
  cfg.put(GraphDatabaseSettings.keep_logical_logs.name(),GraphDatabaseSetting.TRUE);
  addDefaultConfig(cfg);
  HighlyAvailableGraphDatabase haGraphDb=new HighlyAvailableGraphDatabase(slavePath.getAbsolutePath(),cfg,Service.load(IndexProvider.class),Service.load(KernelExtension.class),Service.load(CacheProvider.class)){
    @Override protected Broker createBroker(){
      return makeSlaveBroker(master,0,machineId,this,cfg);
    }
    @Override protected ClusterClient createClusterClient(){
      return makeMasterClusterClientFromBroker(getBroker());
    }
  }
;
  haDbs.set(machineId - 1,haGraphDb);
  return haGraphDb;
}
