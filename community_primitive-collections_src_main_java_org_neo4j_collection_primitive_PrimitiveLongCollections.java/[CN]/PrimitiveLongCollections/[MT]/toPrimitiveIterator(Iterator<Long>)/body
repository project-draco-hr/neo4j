{
  return new PrimitiveLongBaseIterator(){
    @Override protected boolean fetchNext(){
      if (iterator.hasNext()) {
        Long nextValue=iterator.next();
        if (null == nextValue) {
          throw new IllegalArgumentException("Cannot convert null Long to primitive long");
        }
        return next(nextValue.longValue());
      }
      return false;
    }
  }
;
}
