{
  Map<String,String> coreParams=stringMap();
  coreParams.put(raft_log_pruning_strategy.name(),"keep_none");
  coreParams.put(raft_log_pruning_frequency.name(),"100ms");
  int numberOfTransactions=100;
  Cluster cluster=clusterRule.withSharedCoreParams(coreParams).startCluster();
  CoreServer leader=cluster.awaitCoreGraphDatabaseWithRole(TIMEOUT_MS,Role.LEADER);
  int followersLastLog=getMostRecentLogIdOn(leader);
  while (followersLastLog < 2) {
    doSomeTransactions(cluster,numberOfTransactions);
    followersLastLog=getMostRecentLogIdOn(leader);
  }
  CoreServer follower=cluster.awaitCoreGraphDatabaseWithRole(TIMEOUT_MS,Role.FOLLOWER);
  follower.shutdown();
  int leadersOldestLog=getOldestLogIdOn(leader);
  while (leadersOldestLog < followersLastLog + 10) {
    doSomeTransactions(cluster,numberOfTransactions);
    leadersOldestLog=getOldestLogIdOn(leader);
  }
  assertThat(leadersOldestLog,greaterThan(followersLastLog));
  follower.start();
}
