{
  testFailRead(pwdSubject,3);
  testFailWrite(pwdSubject);
  testFailSchema(pwdSubject);
  testCallEmpty(pwdSubject,"CALL dbms.changePassword( '321' )");
  testCallEmpty(adminSubject,"CALL dbms.createUser('Henrik', 'bar', true)");
  testCallEmpty(adminSubject,"CALL dbms.addUserToRole('Henrik', '" + ARCHITECT + "')");
  S henrik=neo.login("Henrik","bar");
  assertEquals(AuthenticationResult.PASSWORD_CHANGE_REQUIRED,neo.authenticationResult(henrik));
  testFailRead(henrik,3);
  testFailWrite(henrik);
  testFailSchema(henrik);
  testCallEmpty(henrik,"CALL dbms.changePassword( '321' )");
  testCallEmpty(adminSubject,"CALL dbms.createUser('Olivia', 'bar', true)");
  testCallEmpty(adminSubject,"CALL dbms.addUserToRole('Olivia', '" + ADMIN + "')");
  S olivia=neo.login("Olivia","bar");
  assertEquals(AuthenticationResult.PASSWORD_CHANGE_REQUIRED,neo.authenticationResult(olivia));
  testFailRead(olivia,3);
  testFailWrite(olivia);
  testFailSchema(olivia);
  testCallFail(olivia,"CALL dbms.createUser('OliviasFriend', 'bar', false)",QueryExecutionException.class,AuthProcedures.PERMISSION_DENIED);
  testCallEmpty(olivia,"CALL dbms.changePassword( '321' )");
}
