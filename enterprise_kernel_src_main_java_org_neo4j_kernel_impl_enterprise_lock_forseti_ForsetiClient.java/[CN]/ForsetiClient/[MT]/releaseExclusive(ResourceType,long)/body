{
  if (!stateHolder.incrementActiveClients()) {
    throw new LockClientAlreadyClosedException(String.format("%s is already closed",this));
  }
  try {
    if (releaseLocalLock(resourceType,resourceId,exclusiveLockCounts[resourceType.typeId()])) {
      return;
    }
    ConcurrentMap<Long,ForsetiLockManager.Lock> lockMap=lockMaps[resourceType.typeId()];
    if (sharedLockCounts[resourceType.typeId()].containsKey(resourceId)) {
      ForsetiLockManager.Lock lock=lockMap.get(resourceId);
      if (lock instanceof SharedLock) {
        SharedLock sharedLock=(SharedLock)lock;
        if (sharedLock.isUpdateLock()) {
          sharedLock.releaseUpdateLock(this);
        }
 else {
          throw new IllegalStateException("Incorrect state of exclusive lock. Lock should be updated " + "to exclusive before attempt to release it. Lock: " + this);
        }
      }
 else {
        SharedLock sharedLock=new SharedLock(this);
        lockMap.put(resourceId,sharedLock);
      }
    }
 else {
      releaseGlobalLock(lockMap,resourceId);
    }
  }
  finally {
    stateHolder.decrementActiveClients();
  }
}
