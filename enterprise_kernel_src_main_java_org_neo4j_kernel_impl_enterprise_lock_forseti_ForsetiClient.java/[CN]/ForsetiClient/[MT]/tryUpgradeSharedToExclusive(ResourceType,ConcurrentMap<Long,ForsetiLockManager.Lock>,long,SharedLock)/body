{
  int tries=0;
  boolean holdsSharedLock=sharedLockCounts[resourceType.typeId()].containsKey(resourceId);
  if (!holdsSharedLock) {
    if (!sharedLock.acquire(this)) {
      return false;
    }
    try {
      if (tryUpgradeToExclusiveWithShareLockHeld(resourceType,resourceId,sharedLock,tries)) {
        return true;
      }
 else {
        releaseGlobalLock(lockMap,resourceId);
        return false;
      }
    }
 catch (    Throwable e) {
      releaseGlobalLock(lockMap,resourceId);
      throw e;
    }
  }
 else {
    return tryUpgradeToExclusiveWithShareLockHeld(resourceType,resourceId,sharedLock,tries);
  }
}
