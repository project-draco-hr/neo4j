{
  givenUniqueDataset();
  Future<?> createConstraintTransaction=applyChangesToPopulatingUpdater(d.getId(),a.getId(),setProperty(d,"x"),setProperty(c,"x"));
  try {
    createConstraintTransaction.get();
    Assert.fail("expected to throw when PopulatingUpdater got duplicates");
  }
 catch (  ExecutionException ee) {
    Throwable cause=ee.getCause();
    assertThat(cause,instanceOf(ConstraintViolationException.class));
  }
}
