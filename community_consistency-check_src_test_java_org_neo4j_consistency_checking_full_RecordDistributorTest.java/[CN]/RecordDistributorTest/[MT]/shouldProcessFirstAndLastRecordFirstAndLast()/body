{
  final Collection<Integer> records=asList(0,1,2,3,4,5,6,7,8,9);
  final int count=records.size();
  final AtomicInteger calls=new AtomicInteger();
  RecordProcessor<Integer> processor=new RecordProcessor<Integer>(){
    @Override public void process(    Integer record){
      int call=calls.getAndIncrement();
      if (record == 0 || record == count - 1) {
        assertEquals(record.intValue(),call);
      }
    }
    @Override public void close(){
    }
  }
;
  RecordDistributor.distributeRecords(count,getClass().getSimpleName(),100,records,NONE,processor,new RoundRobinQueueDistributor<Integer>(count));
  assertEquals(count,calls.get());
}
