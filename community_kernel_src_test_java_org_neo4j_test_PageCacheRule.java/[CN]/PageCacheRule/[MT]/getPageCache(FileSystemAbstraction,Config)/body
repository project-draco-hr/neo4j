{
  if (jobScheduler == null) {
    jobScheduler=new Neo4jJobScheduler();
    jobScheduler.init();
  }
  if (pageCache != null) {
    try {
      pageCache.stop();
    }
 catch (    IOException e) {
      throw new AssertionError("Failed to stop existing PageCache prior to creating a new one",e);
    }
  }
  PageSwapperFactory swapperFactory=new SingleFilePageSwapperFactory(fs);
  pageCache=new LifecycledPageCache(swapperFactory,jobScheduler,config,PageCacheMonitor.NULL);
  pageCache.start();
  if (automaticallyProduceInconsistentReads) {
    return withInconsistentReads(pageCache);
  }
  return pageCache;
}
