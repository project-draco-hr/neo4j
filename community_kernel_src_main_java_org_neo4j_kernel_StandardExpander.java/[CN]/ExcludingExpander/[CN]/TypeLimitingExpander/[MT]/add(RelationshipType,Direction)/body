{
  Direction excluded=exclusion.get(type.name());
  final Map<String,Direction> newExclusion;
  if (excluded == null) {
    return this;
  }
 else   if (excluded == direction || direction == Direction.BOTH) {
    if (exclusion.size() == 1) {
      return expander;
    }
 else {
      newExclusion=new HashMap<String,Direction>(exclusion);
      newExclusion.remove(type.name());
    }
  }
 else {
    newExclusion=new HashMap<String,Direction>(exclusion);
    newExclusion.put(type.name(),direction.reverse());
  }
  return new TypeLimitingExpander(expander,newExclusion);
}
