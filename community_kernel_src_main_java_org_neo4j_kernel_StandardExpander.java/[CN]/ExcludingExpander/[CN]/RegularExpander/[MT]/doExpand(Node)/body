{
  if (types.isEmpty()) {
    return start.getRelationships().iterator();
  }
 else   if (types.size() == 1) {
    Entry<Direction,RelationshipType[]> entry=types.entrySet().iterator().next();
    return start.getRelationships(entry.getKey(),entry.getValue()).iterator();
  }
 else {
    return new NestingIterator<Relationship,Entry<Direction,RelationshipType[]>>(types.entrySet().iterator()){
      @Override protected Iterator<Relationship> createNestedIterator(      Entry<Direction,RelationshipType[]> item){
        return start.getRelationships(item.getKey(),item.getValue()).iterator();
      }
    }
;
  }
}
