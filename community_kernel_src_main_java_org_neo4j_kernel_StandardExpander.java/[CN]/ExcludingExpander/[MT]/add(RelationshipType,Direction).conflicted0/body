{
  Exclusion excluded=exclusion.get(type.name());
  final Map<String,Exclusion> newExclusion;
  if ((excluded == null ? defaultExclusion : excluded).includes(direction)) {
    return this;
  }
 else {
    excluded=Exclusion.include(direction);
    if (excluded == defaultExclusion) {
      if (exclusion.size() == 1) {
        return new AllExpander(defaultExclusion.direction);
      }
 else {
        newExclusion=new HashMap<String,Exclusion>(exclusion);
        newExclusion.remove(type.name());
      }
    }
 else {
      newExclusion=new HashMap<String,Exclusion>(exclusion);
      newExclusion.put(type.name(),excluded);
    }
  }
  return new ExcludingExpander(defaultExclusion,newExclusion);
}
