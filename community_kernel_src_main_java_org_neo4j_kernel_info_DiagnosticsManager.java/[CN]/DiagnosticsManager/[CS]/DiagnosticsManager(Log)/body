{
  this.targetLog=targetLog;
  providers.add(new DiagnosticsProvider(){
    @Override public String getDiagnosticsIdentifier(){
      return DiagnosticsManager.this.getClass().getName();
    }
    @Override public void dump(    DiagnosticsPhase phase,    final Logger logger){
      if (phase.isInitialization() || phase.isExplicitlyRequested()) {
        logger.log("Diagnostics providers:");
        for (        DiagnosticsProvider provider : providers) {
          logger.log(provider.getDiagnosticsIdentifier());
        }
      }
    }
    @Override public void acceptDiagnosticsVisitor(    Object visitor){
      Visitor<? super DiagnosticsProvider,? extends RuntimeException> target=Visitor.SafeGenerics.castOrNull(DiagnosticsProvider.class,RuntimeException.class,visitor);
      if (target != null)       for (      DiagnosticsProvider provider : providers) {
        target.visit(provider);
      }
    }
  }
);
  SystemDiagnostics.registerWith(this);
}
