{
  return new MappingRepresentation("plan"){
    @Override protected void serialize(    MappingSerializer mappingSerializer){
      final PlanDescription planDescription=getPlan.apply(null);
      mappingSerializer.putString("name",planDescription.getName());
      MappingRepresentation argsRepresentation=getMapRepresentation((Map)planDescription.getArguments());
      mappingSerializer.putMapping("args",argsRepresentation);
      if (planDescription.hasProfilerStatistics()) {
        ProfilerStatistics stats=planDescription.getProfilerStatistics();
        mappingSerializer.putNumber("rows",stats.getRows());
        mappingSerializer.putNumber("dbHits",stats.getDbHits());
      }
      mappingSerializer.putList("children",new ListRepresentation("children",new IterableWrapper<Representation,PlanDescription>(planDescription.getChildren()){
        @Override protected Representation underlyingObjectToObject(        final PlanDescription childPlan){
          return createPlanRepresentation(new Function<Object,PlanDescription>(){
            @Override public PlanDescription apply(            Object from){
              return childPlan;
            }
          }
);
        }
      }
));
    }
  }
;
}
