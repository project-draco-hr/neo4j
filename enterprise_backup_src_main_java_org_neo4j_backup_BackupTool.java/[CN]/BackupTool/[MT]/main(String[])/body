{
  Args arguments=new Args(args);
  checkArguments(arguments);
  boolean full=arguments.has(FULL);
  String from=arguments.get(FROM,null);
  String to=arguments.get(TO,null);
  URI backupURI=null;
  try {
    backupURI=new URI(from);
  }
 catch (  URISyntaxException e) {
    System.out.println("Please properly specify a location to backup as a valid URI in the form <scheme>://<host>[:port], where scheme is the target database's running mode, eg ha");
    exitAbnormally();
  }
  String module=backupURI.getScheme();
  BackupExtensionService service=null;
  if (module != null && !DEFAULT_SCHEME.equals(module)) {
    try {
      service=Service.load(BackupExtensionService.class,module);
    }
 catch (    NoSuchElementException e) {
      System.out.println(String.format("%s was specified as a backup module but it was not found. Please make sure that the implementing service is on the classpath.",module));
      exitAbnormally();
    }
  }
  if (service != null) {
    backupURI=service.resolve(backupURI);
  }
  doBackup(full,backupURI,to);
}
