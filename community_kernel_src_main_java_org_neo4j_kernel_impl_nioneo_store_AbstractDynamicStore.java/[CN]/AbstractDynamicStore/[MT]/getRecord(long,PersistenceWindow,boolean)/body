{
  DynamicRecord record=new DynamicRecord(blockId);
  Buffer buffer=window.getOffsettedBuffer(blockId);
  long inUseByte=buffer.get();
  boolean inUse=(inUseByte & 0x1) == Record.IN_USE.intValue();
  if (!inUse) {
    throw new InvalidRecordException("Not in use, blockId[" + blockId + "]");
  }
  int dataSize=getBlockSize() - BLOCK_HEADER_SIZE;
  long nrOfBytesInt=buffer.getInt();
  int nrOfBytes=(int)(nrOfBytesInt & 0xFFFFFF);
  long nextBlock=buffer.getUnsignedInt();
  long nextModifier=(nrOfBytesInt & 0xF000000L) << 8;
  long longNextBlock=longFromIntAndMod(nextBlock,nextModifier);
  if (longNextBlock != Record.NO_NEXT_BLOCK.intValue() && nrOfBytes < dataSize || nrOfBytes > dataSize) {
    throw new InvalidRecordException("Next block set[" + nextBlock + "] current block illegal size["+ nrOfBytes+ "/"+ dataSize+ "]");
  }
  record.setInUse(true);
  record.setLength(nrOfBytes);
  record.setNextBlock(longNextBlock);
  if (loadData) {
    byte byteArrayElement[]=new byte[nrOfBytes];
    buffer.get(byteArrayElement);
    record.setData(byteArrayElement);
  }
 else {
    record.setIsLight(true);
  }
  return record;
}
