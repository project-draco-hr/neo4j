{
  int blockSize=baseBlockSize;
  if (fileName == null) {
    throw new IllegalArgumentException("Null filename");
  }
  File file=new File(fileName);
  if (file.exists()) {
    throw new IllegalStateException("Can't create store[" + fileName + "], file already exists");
  }
  if (blockSize < 1) {
    throw new IllegalArgumentException("Illegal block size[" + blockSize + "]");
  }
  if (blockSize > 0xFFFF) {
    throw new IllegalArgumentException("Illegal block size[" + blockSize + "], limit is 65535");
  }
  blockSize+=BLOCK_HEADER_SIZE;
  try {
    FileChannel channel=new FileOutputStream(fileName).getChannel();
    int endHeaderSize=blockSize + UTF8.encode(typeAndVersionDescriptor).length;
    ByteBuffer buffer=ByteBuffer.allocate(endHeaderSize);
    buffer.putInt(blockSize);
    buffer.position(endHeaderSize - typeAndVersionDescriptor.length());
    buffer.put(UTF8.encode(typeAndVersionDescriptor)).flip();
    channel.write(buffer);
    channel.force(false);
    channel.close();
  }
 catch (  IOException e) {
    throw new UnderlyingStorageException("Unable to create store " + fileName,e);
  }
  idGeneratorFactory.create(fileName + ".id");
  IdGenerator idGenerator=idGeneratorFactory.open(fileName + ".id",1,idType,0,false);
  idGenerator.nextId();
  idGenerator.close(false);
}
