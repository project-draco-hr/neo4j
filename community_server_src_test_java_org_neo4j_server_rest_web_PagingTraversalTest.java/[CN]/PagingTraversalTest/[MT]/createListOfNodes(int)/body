{
  try (Transaction tx=database.getGraph().beginTx()){
    long zerothNode=helper.createNode(MapUtil.map("name",String.valueOf(0)));
    long previousNodeId=zerothNode;
    for (int i=1; i < numberOfNodes; i++) {
      long currentNodeId=helper.createNode(MapUtil.map("name",String.valueOf(i)));
      database.getGraph().getNodeById(previousNodeId).createRelationshipTo(database.getGraph().getNodeById(currentNodeId),RelationshipType.withName("PRECEDES"));
      previousNodeId=currentNodeId;
    }
    tx.success();
    return zerothNode;
  }
 }
