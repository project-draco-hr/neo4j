{
  BufferPageSwapper io=new BufferPageSwapper(bytesA);
  PinnablePage page=table.load(io,12,PagedFile.PF_SHARED_LOCK);
  page.unpin(PagedFile.PF_SHARED_LOCK);
  fork(new Runnable(){
    @Override public void run(){
      BufferPageSwapper io=new BufferPageSwapper(ByteBuffer.wrap(bytesB));
      try {
        table.load(io,3,PagedFile.PF_SHARED_LOCK).unpin(PagedFile.PF_SHARED_LOCK);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
).join();
  assertFalse(page.pin(io,12,PagedFile.PF_SHARED_LOCK));
}
