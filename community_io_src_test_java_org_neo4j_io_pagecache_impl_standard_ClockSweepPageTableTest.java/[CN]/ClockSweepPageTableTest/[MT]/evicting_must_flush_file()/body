{
  ByteBuffer storageBuffer=ByteBuffer.allocate(TEST_PAGE_SIZE);
  BufferPageSwapper io=new BufferPageSwapper(storageBuffer);
  PinnablePage page=table.load(io,12,PagedFile.PF_EXCLUSIVE_LOCK);
  page.putBytes(bytesA,0);
  page.unpin(PagedFile.PF_EXCLUSIVE_LOCK);
  fork(new Runnable(){
    @Override public void run(){
      BufferPageSwapper io=new BufferPageSwapper(ByteBuffer.allocate(1));
      try {
        table.load(io,3,PagedFile.PF_SHARED_LOCK);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
).join();
  byte[] actual=new byte[bytesA.length];
  storageBuffer.position(0);
  storageBuffer.get(actual);
  assertThat(actual,equalTo(bytesA));
}
