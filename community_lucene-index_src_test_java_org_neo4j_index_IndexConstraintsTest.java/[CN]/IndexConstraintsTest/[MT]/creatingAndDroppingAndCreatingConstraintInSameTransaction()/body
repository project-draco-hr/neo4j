{
  for (int times=1; times <= 4; times++) {
    try {
      try (Transaction tx=graphDb.beginTx()){
        recreate(graphDb.schema().constraintFor(LABEL).assertPropertyIsUnique(PROPERTY_KEY).create(),times);
        tx.success();
      }
       assertNotNull("Constraint should exist",getConstraint(LABEL,PROPERTY_KEY));
      assertNotNull("Should have constraint index",getIndex(LABEL,PROPERTY_KEY));
      try (Transaction tx=graphDb.beginTx()){
        recreate(getConstraint(LABEL,PROPERTY_KEY),times);
        tx.success();
      }
       assertNotNull("Constraint should exist",getConstraint(LABEL,PROPERTY_KEY));
      assertNotNull("Should have constraint index",getIndex(LABEL,PROPERTY_KEY));
      try (Transaction tx=graphDb.beginTx()){
        recreate(getConstraint(LABEL,PROPERTY_KEY),times).drop();
        tx.success();
      }
       assertNull("Constraint should be removed",getConstraint(LABEL,PROPERTY_KEY));
      assertNull("Should not have constraint index",getIndex(LABEL,PROPERTY_KEY));
    }
 catch (    Throwable e) {
      throw new AssertionError("times=" + times,e);
    }
  }
}
