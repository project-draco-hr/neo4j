{
  final DefaultListModel<String> packageListModel=new DefaultListModel<>();
  for (  String packageName : model.getExtensionPackagesConfig()) {
    packageListModel.addElement(packageName);
  }
  final JList<String> packageList=new JList<>(packageListModel);
  JPanel packageListButtons=withBoxLayout(BoxLayout.Y_AXIS,createPanel(createTextButton("+",new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      String newPackage=JOptionPane.showInputDialog("Package containing extension(s) to include");
      if (newPackage != null) {
        packageListModel.addElement(newPackage);
        model.setExtensionPackagesConfig(itemsAsList(packageListModel));
      }
    }
  }
),createTextButton("-",new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      int selectedIndex=packageList.getSelectedIndex();
      if (selectedIndex != -1) {
        packageListModel.removeElementAt(selectedIndex);
        model.setExtensionPackagesConfig(itemsAsList(packageListModel));
      }
    }
  }
)));
  return withBorder(BorderFactory.createCompoundBorder(BorderFactory.createTitledBorder(format("Server Extensions (at %s)",environment.getExtensionsDirectory().getAbsolutePath())),createSpacingBorder(2)),withBoxLayout(BoxLayout.X_AXIS,createPanel(new JScrollPane(packageList),createHorizontalSpacing(),packageListButtons)));
}
