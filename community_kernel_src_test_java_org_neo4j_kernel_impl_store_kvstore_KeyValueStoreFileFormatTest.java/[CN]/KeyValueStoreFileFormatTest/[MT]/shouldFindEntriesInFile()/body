{
  Format format=new Format("one","two");
  Map<String,byte[]> metadata=new HashMap<>();
  metadata.put("one",new byte[]{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1});
  metadata.put("two",new byte[]{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2});
  Map<String,String> config=new HashMap<>();
  config.put(GraphDatabaseSettings.pagecache_memory.name(),"8M");
  config.put(GraphDatabaseSettings.mapped_memory_page_size.name(),"256");
  Data data=data(entry(bytes(17),bytes('v','a','l',1)),entry(bytes(22),bytes('v','a','l',2)),entry(bytes(22),bytes('v','a','l',3)),entry(bytes(25),bytes('v','a','l',4)),entry(bytes(27),bytes('v','a','l',5)),entry(bytes(27),bytes('v','a','l',6)),entry(bytes(31),bytes('v','a','l',7)),entry(bytes(63),bytes('v','a','l',8)),entry(bytes(127),bytes('v','a','l',9)),entry(bytes(255),bytes('v','a','l',10)),entry(bytes(511),bytes('v','a','l',11)),entry(bytes(1023),bytes('v','a','l',12)),entry(bytes(1050),bytes('v','a','l',13)),entry(bytes(2000),bytes('v','a','l',14)));
  try (KeyValueStoreFile<Map<String,byte[]>> file=format.create(config,metadata,data)){
    assertFind(file,17,17,true,new Bytes('v','a','l',1));
    assertFind(file,22,22,true,new Bytes('v','a','l',2),new Bytes('v','a','l',3));
    assertFind(file,25,25,true,new Bytes('v','a','l',4));
    assertFind(file,27,27,true,new Bytes('v','a','l',5),new Bytes('v','a','l',6));
    assertFind(file,26,30,false,new Bytes('v','a','l',5),new Bytes('v','a','l',6));
    assertFind(file,31,31,true,new Bytes('v','a','l',7));
    assertFind(file,32,1024,false,new Bytes('v','a','l',8),new Bytes('v','a','l',9),new Bytes('v','a','l',10),new Bytes('v','a','l',11),new Bytes('v','a','l',12));
    assertFind(file,1050,1050,true,new Bytes('v','a','l',13));
    assertFind(file,2000,2000,true,new Bytes('v','a','l',14));
    assertFind(file,1500,8000,false,new Bytes('v','a','l',14));
    assertFind(file,1050,8000,true,new Bytes('v','a','l',13),new Bytes('v','a','l',14));
    assertFind(file,2001,Integer.MAX_VALUE,false);
  }
 }
