{
  PrimitiveLongObjectMap<Factory<SocketProtocol>> available=Primitive.longObjectMap();
  Factory factory=mock(Factory.class);
  SocketProtocol protocol=mock(SocketProtocol.class);
  when(factory.newInstance()).thenReturn(protocol);
  available.put(1,factory);
  ProtocolChooser chooser=new ProtocolChooser(available);
  HandshakeOutcome firstOutcome=chooser.handleVersionHandshakeChunk(wrappedBuffer(new byte[]{0,0,0,0,0,0,0}));
  HandshakeOutcome secondOutcome=chooser.handleVersionHandshakeChunk(wrappedBuffer(new byte[]{1,0,0,0,0,0,0,0,0}));
  assertThat(firstOutcome,equalTo(PARTIAL_HANDSHAKE));
  assertThat(secondOutcome,equalTo(PROTOCOL_CHOSEN));
  assertThat(chooser.chosenProtocol(),equalTo(protocol));
}
