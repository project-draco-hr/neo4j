{
  PrimitiveLongObjectMap<Factory<SocketProtocol>> available=Primitive.longObjectMap();
  Factory fallbackFactory=mock(Factory.class);
  SocketProtocol fallbackProtocol=mock(SocketProtocol.class);
  when(fallbackFactory.newInstance()).thenReturn(fallbackProtocol);
  available.put(1,mock(Factory.class));
  ProtocolChooser chooser=new ProtocolChooser(available);
  HandshakeOutcome outcome=chooser.handleVersionHandshakeChunk(wrappedBuffer(new byte[]{0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,4}));
  assertThat(outcome,equalTo(NO_APPLICABLE_PROTOCOL));
  assertThat(chooser.chosenProtocol(),nullValue());
}
