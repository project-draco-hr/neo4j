{
  checkTolerance(DUPLICATE_NODES,new ProblemReporter(){
    @Override public String message(){
      return DuplicateInputIdException.message(id,group,firstSource,otherSource);
    }
    @Override public InputException exception(){
      return new DuplicateInputIdException(id,group,firstSource,otherSource);
    }
  }
);
  if (leftOverDuplicateNodeIdsCursor == leftOverDuplicateNodeIds.length) {
    leftOverDuplicateNodeIds=Arrays.copyOf(leftOverDuplicateNodeIds,leftOverDuplicateNodeIds.length * 2);
  }
  leftOverDuplicateNodeIds[leftOverDuplicateNodeIdsCursor++]=actualId;
}
