{
  File base=new File("base");
  FileNames fileNames=new FileNames(base);
  FileSystemAbstraction fsa=mock(FileSystemAbstraction.class);
  Log log=mock(Log.class);
  List<File> filesPresent=new LinkedList<>();
  int lower=0;
  int upper=24;
  for (int i=upper; i >= lower; i--) {
    filesPresent.add(fileNames.getForVersion(i));
  }
  when(fsa.listFiles(base)).thenReturn(filesPresent.toArray(new File[]{}));
  SortedMap<Long,File> allFiles=fileNames.getAllFiles(fsa,log);
  assertEquals(upper - lower + 1,allFiles.size());
  long currentVersion=lower;
  for (  Map.Entry<Long,File> longFileEntry : allFiles.entrySet()) {
    assertEquals(currentVersion,longFileEntry.getKey().longValue());
    assertEquals(fileNames.getForVersion(currentVersion),longFileEntry.getValue());
    currentVersion++;
  }
}
