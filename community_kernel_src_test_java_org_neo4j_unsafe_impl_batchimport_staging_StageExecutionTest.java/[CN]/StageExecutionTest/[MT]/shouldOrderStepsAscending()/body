{
  Collection<Step<?>> steps=new ArrayList<>();
  steps.add(stepWithAverageOf(10));
  steps.add(stepWithAverageOf(5));
  steps.add(stepWithAverageOf(30));
  StageExecution execution=new StageExecution("Test",DEFAULT,steps,true);
  Iterator<Pair<Step<?>,Float>> ordered=execution.stepsOrderedBy(Keys.avg_processing_time,true).iterator();
  Pair<Step<?>,Float> fastest=ordered.next();
  assertEquals(1f / 2f,fastest.other().floatValue(),0f);
  Pair<Step<?>,Float> faster=ordered.next();
  assertEquals(1f / 3f,faster.other().floatValue(),0f);
  Pair<Step<?>,Float> fast=ordered.next();
  assertEquals(1f,fast.other().floatValue(),0f);
  assertFalse(ordered.hasNext());
}
