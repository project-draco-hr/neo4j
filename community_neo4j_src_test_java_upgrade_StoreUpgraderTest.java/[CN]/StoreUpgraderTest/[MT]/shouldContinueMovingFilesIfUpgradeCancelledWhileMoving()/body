{
  PageCache pageCache=pageCacheRule.getPageCache(fileSystem);
  StoreUpgrader upgrader=newUpgrader(ALLOW_UPGRADE,pageCache);
  String failureMessage="Just failing";
  upgrader.addParticipant(participantThatWillFailWhenMoving(failureMessage));
  try {
    upgrader.migrateIfNeeded(dbDirectory,schemaIndexProvider);
  }
 catch (  UnableToUpgradeException e) {
    assertTrue(e.getCause() instanceof IOException);
    assertEquals(failureMessage,e.getCause().getMessage());
  }
  Monitor monitor=Mockito.mock(Monitor.class);
  upgrader=newUpgrader(monitor,pageCache);
  StoreMigrationParticipant observingParticipant=Mockito.mock(StoreMigrationParticipant.class);
  when(observingParticipant.needsMigration(any(File.class))).thenReturn(true);
  upgrader.addParticipant(observingParticipant);
  upgrader.migrateIfNeeded(dbDirectory,schemaIndexProvider);
  verify(observingParticipant,Mockito.times(0)).migrate(any(File.class),any(File.class),any(SchemaIndexProvider.class));
  verify(observingParticipant,Mockito.times(1)).moveMigratedFiles(any(File.class),any(File.class));
  verify(observingParticipant,Mockito.times(1)).cleanup(any(File.class));
  verify(monitor).migrationCompleted();
}
