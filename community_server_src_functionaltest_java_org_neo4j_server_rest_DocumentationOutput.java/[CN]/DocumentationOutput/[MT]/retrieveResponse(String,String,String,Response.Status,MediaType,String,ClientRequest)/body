{
  DocumentationData data=new DocumentationData();
  getRequestHeaders(data,request.getHeaders());
  if (request.getEntity() != null) {
    data.setPayload(String.valueOf(request.getEntity()));
  }
  Client client=new Client();
  ClientResponse response=client.handle(request);
  assertEquals(responseCode.getStatusCode(),response.getStatus());
  if (response.getType() != null) {
    assertEquals(type,response.getType());
  }
  if (headerField != null) {
    assertNotNull(response.getHeaders().get(headerField));
  }
  data.setTitle(title);
  data.setDescription(description);
  data.setMethod(request.getMethod());
  data.setRelUri(uri.substring(functionalTestHelper.dataUri().length() - 9));
  data.setUri(uri);
  data.setStatus(responseCode);
  if (response.hasEntity() && response.getStatus() != 204) {
    data.setEntity(response.getEntity(String.class));
  }
  data.setHeaderField(headerField);
  if (headerField != null) {
    getResponseHeaders(data,response.getHeaders(),Arrays.asList(new String[]{headerField}));
  }
 else {
    getResponseHeaders(data,response.getHeaders(),Collections.<String>emptyList());
  }
  document(data);
  return response;
}
