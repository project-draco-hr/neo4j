{
  Node start=data.get().get("Pet0");
  gen.get().addSnippet("graph",createGraphViz("Descendants Example Graph",graphdb(),gen.get().getTitle()));
  gen.get().addGithubLink("github",this.getClass(),"neo4j/community","embedded-examples");
  gen.get();
  gen.get().addSourceSnippets(this.getClass(),"traverser","traverseNodeGlobal");
  final Node target=data.get().get("Principal1");
  TraversalDescription td=Traversal.description().uniqueness(Uniqueness.NODE_PATH).evaluator(new Evaluator(){
    @Override public Evaluation evaluate(    Path path){
      if (path.endNode().equals(target)) {
        return Evaluation.INCLUDE_AND_PRUNE;
      }
      return Evaluation.EXCLUDE_AND_CONTINUE;
    }
  }
);
  Traverser results=td.traverse(start);
  String output="";
  int count=0;
  for (  Path path : results) {
    count++;
    output+=path.toString() + "\n";
  }
  gen.get().addSnippet("output",createOutputSnippet(output));
  assertEquals(2,count);
  td=td.uniqueness(Uniqueness.NODE_GLOBAL);
  results=td.traverse(start);
  String output2="";
  count=0;
  for (  Path path : results) {
    count++;
    output2+=path.toString() + "\n";
  }
  gen.get().addSnippet("outNodeGlobal",createOutputSnippet(output2));
  assertEquals(1,count);
}
