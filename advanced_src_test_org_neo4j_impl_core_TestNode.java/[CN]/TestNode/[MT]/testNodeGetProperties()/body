{
  String key1="key1";
  String key2="key2";
  String key3="key3";
  Integer int1=new Integer(1);
  Integer int2=new Integer(2);
  String string=new String("3");
  Node node1=getNeo().createNode();
  assertTrue(!node1.getPropertyValues().iterator().hasNext());
  try {
    node1.getProperty(key1);
    fail("get non existing property din't throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node1.getProperty(null);
    fail("get of null key din't throw exception");
  }
 catch (  IllegalArgumentException e) {
  }
  assertTrue(!node1.hasProperty(key1));
  assertTrue(!node1.hasProperty(null));
  node1.setProperty(key1,int1);
  node1.setProperty(key2,int2);
  node1.setProperty(key3,string);
  Iterator<Object> values=node1.getPropertyValues().iterator();
  values.next();
  values.next();
  values.next();
  Iterator<String> keys=node1.getPropertyKeys().iterator();
  keys.next();
  keys.next();
  keys.next();
  assertTrue(node1.hasProperty(key1));
  assertTrue(node1.hasProperty(key2));
  assertTrue(node1.hasProperty(key3));
  try {
    node1.removeProperty(key3);
  }
 catch (  NotFoundException e) {
    fail("Remove of property failed.");
  }
  assertTrue(!node1.hasProperty(key3));
  assertTrue(!node1.hasProperty(null));
  node1.delete();
}
