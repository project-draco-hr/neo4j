{
  RelationshipType type1=DynamicRelationshipType.withName("KNOWS");
  RelationshipType type2=DynamicRelationshipType.withName("LOVES");
  Relationship[] relationships=createRelationshipChain(type1,2);
  Node node=getEndNode(relationships[0]);
  createRelationshipChain(node,type2,1);
  executeCommand("cd " + node.getId());
  executeCommand("ls","<-","->");
  executeCommand("ls -p","!Neo");
  setProperty(node,"name","Neo");
  executeCommand("ls -p","Neo");
  executeCommand("ls","<-","->","Neo",type1.name(),type2.name());
  executeCommand("ls -r","<-","->","!Neo");
  executeCommand("ls -rf .*:out","!<-","->","!Neo",type1.name(),type2.name());
  executeCommand("ls -rf .*:in","<-","!->","!Neo",type1.name(),"!" + type2.name());
  executeCommand("ls -rf KN.*:in","<-","!->",type1.name(),"!" + type2.name());
  executeCommand("ls -rf LOVES:in","!<-","!->","!" + type1.name(),"!" + type2.name());
  executeCommand("ls -pf something","!<-","!->","!Neo");
  executeCommand("ls -pf name","!<-","!->","Neo");
  executeCommand("ls -pf name:Something","!<-","!->","!Neo");
  executeCommand("ls -pf name:Neo","!<-","!->","Neo");
}
