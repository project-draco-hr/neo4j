{
  this.spec=spec;
  this.name=spec.getName();
  for (int i=0; i < spec.getMembers().size(); i++) {
    startMember(new InstanceId(firstInstanceId + i));
  }
  for (  HighlyAvailableGraphDatabaseProxy member : members.values()) {
    HighlyAvailableGraphDatabase graphDatabase=member.get(DEFAULT_TIMEOUT_SECONDS);
    Config config=graphDatabase.getDependencyResolver().resolveDependency(Config.class);
  }
}
