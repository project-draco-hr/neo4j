{
  initializeStores(stringMap());
  startTx();
  int relType1=(int)nextId(RelationshipType.class);
  transaction.createRelationshipTypeToken(relType1,"relationshiptype1");
  long nodeIds[]=new long[8];
  for (int i=0; i < nodeIds.length; i++) {
    nodeIds[i]=nextId(Node.class);
    transaction.nodeCreate(nodeIds[i]);
  }
  for (int i=0; i < nodeIds.length / 2; i++) {
    transaction.relCreate(nextId(Relationship.class),relType1,nodeIds[i],nodeIds[i * 2]);
  }
  long rel5=nextId(Relationship.class);
  transaction.relCreate(rel5,relType1,nodeIds[0],nodeIds[5]);
  long rel2=nextId(Relationship.class);
  transaction.relCreate(rel2,relType1,nodeIds[1],nodeIds[2]);
  long rel3=nextId(Relationship.class);
  transaction.relCreate(rel3,relType1,nodeIds[1],nodeIds[3]);
  long rel6=nextId(Relationship.class);
  transaction.relCreate(rel6,relType1,nodeIds[1],nodeIds[6]);
  long rel1=nextId(Relationship.class);
  transaction.relCreate(rel1,relType1,nodeIds[0],nodeIds[1]);
  long rel4=nextId(Relationship.class);
  transaction.relCreate(rel4,relType1,nodeIds[0],nodeIds[4]);
  long rel7=nextId(Relationship.class);
  transaction.relCreate(rel7,relType1,nodeIds[0],nodeIds[7]);
  commitTx();
  startTx();
  transaction.relDelete(rel7);
  transaction.relDelete(rel4);
  transaction.relDelete(rel1);
  transaction.relDelete(rel6);
  transaction.relDelete(rel3);
  transaction.relDelete(rel2);
  transaction.relDelete(rel5);
  commitTx();
  ds.stop();
}
