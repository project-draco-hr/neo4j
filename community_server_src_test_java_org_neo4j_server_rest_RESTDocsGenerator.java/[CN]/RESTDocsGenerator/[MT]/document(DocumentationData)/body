{
  data.description=replaceSnippets(data.description);
  Writer fw=null;
  try {
    fw=getFW("target" + File.separator + "docs"+ File.separator+ section,data.title);
    String name=title.replace(" ","-").toLowerCase();
    String longSection=section.replaceAll("\\(|\\)","") + "-" + name.replaceAll("\\(|\\)","");
    if (longSection.indexOf("/") > 0) {
      longSection=longSection.substring(longSection.indexOf("/") + 1);
    }
    line(fw,"[[" + longSection + "]]");
    String firstChar=data.title.substring(0,1).toUpperCase();
    line(fw,"=== " + firstChar + data.title.substring(1)+ " ===");
    line(fw,"");
    if (data.description != null && !data.description.isEmpty()) {
      line(fw,data.description);
      line(fw,"");
    }
    if (graph != null) {
      fw.append(AsciidocHelper.createGraphViz("Final Graph",graph,title));
      line(fw,"");
    }
    line(fw,"_Example request_");
    line(fw,"");
    line(fw,"* *+" + data.method + "+*  +"+ data.uri+ "+");
    if (data.requestHeaders != null) {
      for (      Entry<String,String> header : data.requestHeaders.entrySet()) {
        line(fw,"* *+" + header.getKey() + ":+* +"+ header.getValue()+ "+");
      }
    }
    writeEntity(fw,data.payload);
    line(fw,"");
    line(fw,"_Example response_");
    line(fw,"");
    line(fw,"* *+" + data.status + ":+* +"+ Response.Status.fromStatusCode(data.status)+ "+");
    if (data.responseHeaders != null) {
      for (      Entry<String,String> header : data.responseHeaders.entrySet()) {
        line(fw,"* *+" + header.getKey() + ":+* +"+ header.getValue()+ "+");
      }
    }
    writeEntity(fw,JSONPrettifier.parse(data.entity));
    line(fw,"");
  }
 catch (  IOException e) {
    e.printStackTrace();
    fail();
  }
 finally {
    if (fw != null) {
      try {
        fw.close();
      }
 catch (      IOException e) {
        e.printStackTrace();
        fail();
      }
    }
  }
}
