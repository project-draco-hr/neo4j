{
  return new PrefetchingIterator<SchemaRule>(){
    private final long highestId=schemaStore.getHighestPossibleIdInUse();
    private long currentId=1;
    private final byte[] scratchData=newRecordBuffer();
    private final DynamicRecord record=schemaStore.newRecord();
    @Override protected SchemaRule fetchNextOrNull(){
      while (currentId <= highestId) {
        long id=currentId++;
        schemaStore.getRecord(id,record,RecordLoad.FORCE);
        if (record.inUse() && record.isStartRecord()) {
          try {
            return getSchemaRule(id,scratchData);
          }
 catch (          MalformedSchemaRuleException e) {
            throw new RuntimeException(e);
          }
        }
      }
      return null;
    }
  }
;
}
