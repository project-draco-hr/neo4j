{
  ClassHandle handle;
  try (ClassGenerator simple=generateClass("SimpleClass")){
    try (CodeBlock run=simple.generateMethod(void.class,"run",param(Runnable.class,"body"),param(Runnable.class,"catcher"),param(boolean.class,"test"))){
      try (TryBlock tryBlock=run.tryBlock()){
        try (CodeBlock ifBlock=tryBlock.ifStatement(run.load("test"))){
          ifBlock.expression(invoke(run.load("body"),RUN));
        }
         try (CodeBlock catchBlock=tryBlock.catchBlock(param(RuntimeException.class,"E"))){
          catchBlock.expression(invoke(run.load("catcher"),RUN));
        }
       }
     }
     handle=simple.handle();
  }
   Runnable runnable=mock(Runnable.class);
  MethodHandle run=instanceMethod(handle.newInstance(),"run",Runnable.class,Runnable.class,boolean.class);
  run.invoke(runnable,mock(Runnable.class),false);
  verify(runnable,never()).run();
  run.invoke(runnable,mock(Runnable.class),true);
  verify(runnable).run();
}
