{
  ClassHandle handle;
  try (ClassGenerator simple=generateClass(NamedBase.class,"SimpleClass")){
    simple.field(String.class,"foo");
    simple.generate(MethodTemplate.constructor(param(String.class,"name"),param(Object.class,"foo")).invokeSuper(load("name")).put(self(),String.class,"foo",cast(String.class,load("foo"))).build());
    handle=simple.handle();
  }
   Object instance=constructor(handle.loadClass(),String.class,Object.class).invoke("Pontus","Tobias");
  assertEquals("SimpleClass",instance.getClass().getSimpleName());
  assertThat(instance,instanceOf(NamedBase.class));
  assertEquals("Pontus",((NamedBase)instance).name);
  assertEquals("Tobias",getField(instance,"foo"));
}
