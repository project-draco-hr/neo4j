{
  Node node1=getGraphDb().createNode();
  Node node2=getGraphDb().createNode();
  Relationship rel1=node1.createRelationshipTo(node2,MyRelTypes.TEST);
  Relationship rel2=node1.createRelationshipTo(node2,MyRelTypes.TEST);
  node1.setProperty("key1","value1");
  rel1.setProperty("key1","value1");
  newTransaction();
  node1.delete();
  try {
    node1.getProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node1.setProperty("key1","value2");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node1.removeProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  node2.delete();
  try {
    node2.delete();
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node1.getProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node1.setProperty("key1","value2");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node1.removeProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  assertEquals("value1",rel1.getProperty("key1"));
  rel1.delete();
  try {
    rel1.delete();
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    rel1.getProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    rel1.setProperty("key1","value2");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    rel1.removeProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    rel1.getProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    rel1.setProperty("key1","value2");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    rel1.removeProperty("key1");
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node2.createRelationshipTo(node1,MyRelTypes.TEST);
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  try {
    node2.createRelationshipTo(node1,MyRelTypes.TEST);
    fail("Should throw exception");
  }
 catch (  NotFoundException e) {
  }
  assertEquals(node1,rel1.getStartNode());
  assertEquals(node2,rel2.getEndNode());
  Node[] nodes=rel1.getNodes();
  assertEquals(node1,nodes[0]);
  assertEquals(node2,nodes[1]);
  assertEquals(node2,rel1.getOtherNode(node1));
  rel2.delete();
  rollback();
}
