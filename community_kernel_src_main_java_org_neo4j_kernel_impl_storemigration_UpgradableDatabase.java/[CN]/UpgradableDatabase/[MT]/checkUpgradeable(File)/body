{
  Triplet<Outcome,String,String> outcome=checkUpgradeableFor19(storeDirectory);
  if (outcome.first().isSuccessful()) {
    return Legacy19Store.LEGACY_VERSION;
  }
 else {
    outcome=checkUpgradeableFor20(storeDirectory);
    if (!outcome.first().isSuccessful()) {
      String foundVersion=outcome.second();
      String storeFileName=outcome.third();
switch (outcome.first()) {
case missingStoreFile:
        throw new StoreUpgrader.UpgradeMissingStoreFilesException(storeFileName);
case storeVersionNotFound:
      throw new StoreUpgrader.UpgradingStoreVersionNotFoundException(storeFileName);
case unexpectedUpgradingStoreVersion:
    throw new StoreUpgrader.UnexpectedUpgradingStoreVersionException(storeFileName,Legacy20Store.LEGACY_VERSION,foundVersion);
default :
  throw new IllegalArgumentException(outcome.first().name());
}
}
 else {
return Legacy20Store.LEGACY_VERSION;
}
}
}
