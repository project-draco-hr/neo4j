{
  File storeDirectory=neoStoreFile.getParentFile();
  for (  String fileName : fileNamesToExpectedVersions.keySet()) {
    String expectedVersion=fileNamesToExpectedVersions.get(fileName);
    FileChannel fileChannel=null;
    byte[] expectedVersionBytes=UTF8.encode(expectedVersion);
    try {
      File storeFile=new File(storeDirectory,fileName);
      if (!storeFile.exists()) {
        throw new StoreUpgrader.UnableToUpgradeException(String.format("Missing required store file " + "'%s'.",storeFile.getName()));
      }
      fileChannel=new RandomAccessFile(storeFile,"r").getChannel();
      if (fileChannel.size() < expectedVersionBytes.length) {
        throw new StoreUpgrader.UnableToUpgradeException(String.format("'%s' does not contain a store " + "version, please ensure that the original database was shut down in a clean state.",storeFile.getName()));
      }
      fileChannel.position(fileChannel.size() - expectedVersionBytes.length);
      byte[] foundVersionBytes=new byte[expectedVersionBytes.length];
      fileChannel.read(ByteBuffer.wrap(foundVersionBytes));
      if (!expectedVersion.equals(UTF8.decode(foundVersionBytes))) {
        throw new StoreUpgrader.UnableToUpgradeException(String.format("'%s' has a store version number that we cannot upgrade from. " + "Expected '%s' but file is version '%s'.",storeFile.getName(),expectedVersion,UTF8.decode(foundVersionBytes)));
      }
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
 finally {
      if (fileChannel != null) {
        try {
          fileChannel.close();
        }
 catch (        IOException e) {
        }
      }
    }
  }
}
