{
  try {
    long now=clock.currentTimeMillis();
    Collection<ScheduledRenewableTimeout> triggered=new LinkedList<>();
synchronized (timeouts) {
      ScheduledRenewableTimeout renew;
      while ((renew=pendingRenewals.poll()) != null) {
        timeouts.remove(renew);
        renew.setTimeoutTimestamp(calcTimeoutTimestamp(renew.timeoutLength,renew.randomRange));
        timeouts.add(renew);
      }
      for (      ScheduledRenewableTimeout timeout : timeouts) {
        if (timeout.shouldTrigger(now)) {
          triggered.add(timeout);
          timeout.trigger();
        }
 else {
          break;
        }
      }
      timeouts.removeAll(triggered);
    }
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
}
