{
  PhysicalTransactionRepresentation transaction=new PhysicalTransactionRepresentation(justOneNode());
  byte[] additionalHeader="extra".getBytes();
  int masterId=1, authorId=2;
  long timeStarted=12345, lastTxWhenStarted=12, timeCommitted=timeStarted + 10;
  transaction.setHeader(additionalHeader,masterId,authorId,timeStarted,lastTxWhenStarted,timeCommitted,-1);
  Protocol.TransactionSerializer serializer=new Protocol.TransactionSerializer(transaction);
  ChannelBuffer buffer=new ChannelBufferWrapper(new InMemoryLogChannel());
  serializer.write(buffer);
  assertEquals(NeoStoreDataSource.DEFAULT_DATA_SOURCE_NAME,Protocol.readString(buffer));
  VersionAwareLogEntryReader<ReadableLogChannel> reader=new VersionAwareLogEntryReader<>(new RecordStorageCommandReaderFactory());
  TransactionRepresentation readTransaction=new Protocol.TransactionRepresentationDeserializer(reader).read(buffer,ByteBuffer.allocate(1000));
  assertArrayEquals(additionalHeader,readTransaction.additionalHeader());
  assertEquals(masterId,readTransaction.getMasterId());
  assertEquals(authorId,readTransaction.getAuthorId());
  assertEquals(timeStarted,readTransaction.getTimeStarted());
  assertEquals(lastTxWhenStarted,readTransaction.getLatestCommittedTxWhenStarted());
  assertEquals(timeCommitted,readTransaction.getTimeCommitted());
}
