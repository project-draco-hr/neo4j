{
  boolean onePhase=isOnePhase();
  boolean readOnly=true;
  if (!onePhase) {
    status=Status.STATUS_PREPARING;
    LinkedList<Xid> preparedXids=new LinkedList<>();
    for (    ResourceElement re : resourceList) {
      if (!preparedXids.contains(re.getXid())) {
        preparedXids.add(re.getXid());
        int vote=re.getResource().prepare(re.getXid());
        if (vote == XAResource.XA_OK) {
          readOnly=false;
        }
 else         if (vote == XAResource.XA_RDONLY) {
          re.setStatus(RS_READONLY);
        }
 else {
          status=Status.STATUS_MARKED_ROLLBACK;
          return;
        }
      }
 else {
        re.setStatus(RS_READONLY);
      }
    }
    if (readOnly) {
      status=Status.STATUS_COMMITTED;
      return;
    }
 else {
      status=Status.STATUS_PREPARED;
    }
    try {
      txManager.getTxLog().markAsCommitting(getGlobalId(),forceMode);
    }
 catch (    IOException e) {
      logger.error("Error writing transaction log",e);
      txManager.setTmNotOk(e);
      throw Exceptions.withCause(new SystemException("TM encountered a problem, " + " error writing transaction log"),e);
    }
  }
  status=Status.STATUS_COMMITTING;
  RuntimeException benignException=null;
  for (  ResourceElement re : resourceList) {
    if (re.getStatus() != RS_READONLY) {
      try {
        re.getResource().commit(re.getXid(),onePhase);
      }
 catch (      XAException e) {
        throw e;
      }
catch (      CommitNotificationFailedException e) {
        benignException=e;
      }
catch (      Throwable e) {
        throw Exceptions.withCause(new XAException(XAException.XAER_RMERR),e);
      }
    }
  }
  status=Status.STATUS_COMMITTED;
  if (benignException != null) {
    throw benignException;
  }
}
