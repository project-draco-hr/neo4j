{
  if (xaRes == null) {
    throw new IllegalArgumentException("Null xa resource");
  }
  if (status == Status.STATUS_ACTIVE || status == Status.STATUS_PREPARING) {
    try {
      if (resourceList.size() == 0) {
        if (!globalStartRecordWritten) {
          txManager.writeStartRecord(globalId);
          globalStartRecordWritten=true;
        }
        byte branchId[]=txManager.getBranchId(xaRes);
        Xid xid=new XidImpl(globalId,branchId);
        resourceList.add(new ResourceElement(xid,xaRes));
        xaRes.start(xid,XAResource.TMNOFLAGS);
        try {
          txManager.getTxLog().addBranch(globalId,branchId);
        }
 catch (        IOException e) {
          logger.error("Error writing transaction log",e);
          txManager.setTmNotOk(e);
          throw Exceptions.withCause(new SystemException("TM encountered a problem, " + " error writing transaction log"),e);
        }
        if (!hasAnyLocks()) {
          getState().getTxHook().initializeTransaction(eventIdentifier);
        }
        return true;
      }
      Xid sameRmXid=null;
      for (      ResourceElement re : resourceList) {
        if (sameRmXid == null && re.getResource().isSameRM(xaRes)) {
          sameRmXid=re.getXid();
        }
        if (xaRes == re.getResource()) {
          if (re.getStatus() == RS_SUSPENDED) {
            xaRes.start(re.getXid(),XAResource.TMRESUME);
          }
 else {
            xaRes.start(re.getXid(),XAResource.TMJOIN);
          }
          re.setStatus(RS_ENLISTED);
          return true;
        }
      }
      if (sameRmXid != null) {
        addResourceToList(sameRmXid,xaRes);
        xaRes.start(sameRmXid,XAResource.TMJOIN);
      }
 else {
        byte branchId[]=txManager.getBranchId(xaRes);
        Xid xid=new XidImpl(globalId,branchId);
        addResourceToList(xid,xaRes);
        xaRes.start(xid,XAResource.TMNOFLAGS);
        try {
          txManager.getTxLog().addBranch(globalId,branchId);
        }
 catch (        IOException e) {
          logger.error("Error writing transaction log",e);
          txManager.setTmNotOk(e);
          throw Exceptions.withCause(new SystemException("TM encountered a problem, " + " error writing transaction log"),e);
        }
      }
      return true;
    }
 catch (    XAException e) {
      logger.error("Unable to enlist resource[" + xaRes + "]",e);
      status=Status.STATUS_MARKED_ROLLBACK;
      return false;
    }
  }
 else   if (status == Status.STATUS_ROLLING_BACK || status == Status.STATUS_ROLLEDBACK || status == Status.STATUS_MARKED_ROLLBACK) {
    throw new RollbackException("Tx status is: " + txManager.getTxStatusAsString(status));
  }
  throw new IllegalStateException("Tx status is: " + txManager.getTxStatusAsString(status));
}
