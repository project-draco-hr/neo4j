{
  int clusterSize=3;
  ClusterManager manager=new ClusterManager.Builder().withRootDirectory(dir.cleanDirectory("testcluster")).withCluster(ClusterManager.clusterOfSize(clusterSize)).build();
  try {
    manager.start();
    ClusterManager.ManagedCluster cluster=manager.getCluster();
    cluster.await(allSeesAllAsAvailable());
    cluster.await(masterAvailable());
    HighlyAvailableGraphDatabase slave=cluster.getAnySlave();
    CountDownLatch slaveTransitionLatch=new CountDownLatch(1);
    setupForWaitOnSwitchToDetached(slave,slaveTransitionLatch);
    addSomeData(slave);
    ClusterManager.RepairKit fail=cluster.fail(slave,NetworkFlag.values());
    cluster.await(instanceEvicted(slave),20);
    slaveTransitionLatch.await();
    ensureInstanceIsReadOnlyInPendingState(slave);
    fail.repair();
    cluster.await(allSeesAllAsAvailable());
    ensureInstanceIsWritable(slave);
  }
  finally {
    manager.safeShutdown();
  }
}
