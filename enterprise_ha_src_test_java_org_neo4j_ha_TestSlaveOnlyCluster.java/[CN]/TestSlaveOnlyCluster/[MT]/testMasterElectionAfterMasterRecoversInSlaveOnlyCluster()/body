{
  final ClusterManager clusterManager=createCluster("masterrecovery",1,2);
  try {
    clusterManager.start();
    final ClusterManager.ManagedCluster cluster=clusterManager.getDefaultCluster();
    cluster.await(allSeesAllAsAvailable());
    final HighlyAvailableGraphDatabase master=cluster.getMaster();
    final CountDownLatch masterFailedLatch=createMasterFailLatch(cluster);
    final ClusterManager.RepairKit repairKit=cluster.fail(master);
    masterFailedLatch.await(60,TimeUnit.SECONDS);
    repairKit.repair();
    cluster.await(allSeesAllAsAvailable());
    clusterManager.getDefaultCluster().await(ClusterManager.allSeesAllAsAvailable());
    long nodeId=createNodeWithPropertyOn(cluster.getAnySlave(),PROPERTY,VALUE);
    try (Transaction ignore=master.beginTx()){
      assertThat((String)master.getNodeById(nodeId).getProperty(PROPERTY),equalTo(VALUE));
    }
   }
  finally {
    clusterManager.stop();
  }
}
