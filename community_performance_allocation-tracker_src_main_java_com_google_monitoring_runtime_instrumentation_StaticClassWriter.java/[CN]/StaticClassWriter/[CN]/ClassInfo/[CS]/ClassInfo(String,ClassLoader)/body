{
  Class cls=null;
  try {
    cls=Class.forName(type);
  }
 catch (  Exception e) {
  }
  if (cls != null) {
    this.type=Type.getType(cls);
    this.loader=loader;
    this.isInterface=cls.isInterface();
    this.superClass=cls.getSuperclass().getName();
    Class[] ifs=cls.getInterfaces();
    this.interfaces=new String[ifs.length];
    for (int i=0; i < ifs.length; i++) {
      this.interfaces[i]=ifs[i].getName();
    }
    return;
  }
  this.loader=loader;
  this.type=Type.getObjectType(type);
  String fileName=type.replace('.','/') + ".class";
  InputStream is=null;
  ClassReader cr;
  try {
    is=(loader == null) ? ClassLoader.getSystemResourceAsStream(fileName) : loader.getResourceAsStream(fileName);
    cr=new ClassReader(is);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (is != null) {
      try {
        is.close();
      }
 catch (      Exception e) {
      }
    }
  }
  int offset=cr.header;
  isInterface=(cr.readUnsignedShort(offset) & Opcodes.ACC_INTERFACE) != 0;
  char[] buf=new char[2048];
  offset+=4;
  superClass=readConstantPoolString(cr,offset,buf);
  offset+=2;
  int numInterfaces=cr.readUnsignedShort(offset);
  interfaces=new String[numInterfaces];
  offset+=2;
  for (int i=0; i < numInterfaces; i++) {
    interfaces[i]=readConstantPoolString(cr,offset,buf);
    offset+=2;
  }
}
