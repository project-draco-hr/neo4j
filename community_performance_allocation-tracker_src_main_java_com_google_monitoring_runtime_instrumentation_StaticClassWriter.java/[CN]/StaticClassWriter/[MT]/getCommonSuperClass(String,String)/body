{
  try {
    return super.getCommonSuperClass(type1,type2);
  }
 catch (  Throwable e) {
  }
  ClassInfo ci1, ci2;
  try {
    ci1=new ClassInfo(type1,classLoader);
    ci2=new ClassInfo(type2,classLoader);
  }
 catch (  Throwable e) {
    throw new RuntimeException(e);
  }
  if (ci1.isAssignableFrom(ci2)) {
    return type1;
  }
  if (ci2.isAssignableFrom(ci1)) {
    return type2;
  }
  if (ci1.isInterface() || ci2.isInterface()) {
    return "java/lang/Object";
  }
  do {
    ci1=ci1.getSuperclass();
  }
 while (!ci1.isAssignableFrom(ci2));
  return ci1.getType().getInternalName();
}
