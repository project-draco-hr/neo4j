{
  if (reports.isEmpty()) {
    out.println("no reports");
    return;
  }
  out.println("Throughput reports (tx/s):");
  double sum=0;
  for (  double report : reports) {
    out.println("\t" + report);
    sum+=report;
  }
  out.println();
  double average=sum / (double)reports.size();
  out.println("Average throughput (tx/s): " + average);
  double powerSum=0.0;
  for (  double report : reports) {
    powerSum+=Math.pow(report - average,2);
  }
  double stdDeviation=Math.sqrt(powerSum / (double)reports.size());
  out.println("Standard deviation (tx/s): " + stdDeviation);
  double twoStdDeviations=stdDeviation * 2.0;
  out.println("Two standard deviations (tx/s): " + twoStdDeviations);
  int inOneStdDeviationRange=0;
  int inTwoStdDeviationRange=0;
  for (  double report : reports) {
    if (Math.abs(average - report) <= stdDeviation) {
      inOneStdDeviationRange++;
      inTwoStdDeviationRange++;
    }
 else     if (Math.abs(average - report) <= twoStdDeviations) {
      out.println("Outside _one_ std deviation range: " + report);
      inTwoStdDeviationRange++;
    }
 else {
      out.println("Outside _two_ std deviation range: " + report);
    }
  }
  int inOneStdDeviationRangePercentage=(int)((inOneStdDeviationRange * 100.0) / (double)reports.size());
  System.out.println("Percentage inside one std deviation is: " + inOneStdDeviationRangePercentage);
  assertTrue("Assumption is that at least 65 percent should be in one std deviation (" + stdDeviation + ")"+ " range from the average ("+ average+ ") ",inOneStdDeviationRangePercentage >= 65);
  int inTwoStdDeviationRangePercentage=(int)((inTwoStdDeviationRange * 100.0) / (double)reports.size());
  System.out.println("Percentage inside two std deviations is: " + inTwoStdDeviationRangePercentage);
  assertTrue("Assumption is that at least 90 percent should be in two std deviations (" + twoStdDeviations + ")"+ " range from the average ("+ average+ ") ",inTwoStdDeviationRangePercentage >= 90);
}
