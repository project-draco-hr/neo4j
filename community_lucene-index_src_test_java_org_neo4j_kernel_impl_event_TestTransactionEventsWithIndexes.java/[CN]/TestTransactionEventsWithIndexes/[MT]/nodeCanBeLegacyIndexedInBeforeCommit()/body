{
  GraphDatabaseService db=dbRule.getGraphDatabaseAPI();
  final Index<Node> index;
  try (Transaction tx=db.beginTx()){
    index=db.index().forNodes("index");
    tx.success();
  }
   db.registerTransactionEventHandler(new TransactionEventHandler<Object>(){
    @Override public Object beforeCommit(    TransactionData data) throws Exception {
      Iterator<Node> nodes=data.createdNodes().iterator();
      if (nodes.hasNext()) {
        Node node=nodes.next();
        index.add(node,"key","value");
      }
      return null;
    }
    @Override public void afterCommit(    TransactionData data,    Object state){
    }
    @Override public void afterRollback(    TransactionData data,    Object state){
    }
  }
);
  try (Transaction tx=db.beginTx()){
    db.schema().awaitIndexesOnline(10,TimeUnit.SECONDS);
    Node node=db.createNode();
    node.setProperty("random",42);
    tx.success();
  }
   try (Transaction ignore=db.beginTx()){
    Node node=single(index.get("key","value"));
    assertThat(node.getProperty("random"),is((Object)42));
  }
 }
