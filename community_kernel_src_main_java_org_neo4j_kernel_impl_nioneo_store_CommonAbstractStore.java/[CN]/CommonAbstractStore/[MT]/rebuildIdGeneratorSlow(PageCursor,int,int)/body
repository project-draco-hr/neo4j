{
  long defragCount=0;
  long[] freedBatch=new long[recordsPerPage];
  int startingId=firstRecordIsHeader() ? 1 : 0;
  int defragged;
  while (cursor.next()) {
    long idPageOffset=(cursor.getCurrentPageId() * recordsPerPage);
    do {
      defragged=0;
      for (int i=startingId; i < recordsPerPage; i++) {
        cursor.setOffset(i * blockSize);
        byte inUseByte=cursor.getByte();
        long recordId=idPageOffset + i;
        if (!isInUse(inUseByte)) {
          freedBatch[defragged]=recordId;
          defragged++;
        }
      }
    }
 while (cursor.shouldRetry());
    setHighId(idPageOffset + recordsPerPage);
    for (int i=0; i < defragged; i++) {
      long freedId=freedBatch[i];
      freeId(freedId);
    }
    defragCount+=defragged;
    startingId=0;
  }
  return defragCount;
}
