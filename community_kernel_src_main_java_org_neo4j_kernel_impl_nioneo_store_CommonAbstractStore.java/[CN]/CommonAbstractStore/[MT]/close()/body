{
  if (fileChannel == null) {
    return;
  }
  closeStorage();
  if (windowPool != null) {
    try {
      windowPool.close();
    }
 catch (    IOException e) {
      throw new UnderlyingStorageException("Failed to close " + windowPool,e);
    }
    windowPool=null;
  }
  if ((isReadOnly() && !isBackupSlave()) || idGenerator == null || !storeOk) {
    releaseFileLockAndCloseFileChannel();
    return;
  }
  final long highId=idGenerator.getHighId();
  final int recordSize=getEffectiveRecordSize();
  idGenerator.close();
  IOException storedIoe=null;
  if (!readOnly || backupSlave) {
    try {
      windowsSafeIOOperation(new FileOperation(){
        @Override public void perform() throws IOException {
          fileChannel.position(highId * recordSize);
          ByteBuffer buffer=wrap(encode(getTypeAndVersionDescriptor()));
          fileChannel.write(buffer);
          stringLogger.debug("Closing " + storageFileName + ", truncating at "+ fileChannel.position()+ " vs file size "+ fileChannel.size());
          fileChannel.truncate(fileChannel.position());
          fileChannel.force(false);
          releaseFileLockAndCloseFileChannel();
        }
      }
);
    }
 catch (    IOException e) {
      storedIoe=e;
    }
  }
 else {
    releaseFileLockAndCloseFileChannel();
  }
  if (storedIoe != null) {
    throw new UnderlyingStorageException("Unable to close store " + getStorageFileName(),storedIoe);
  }
}
