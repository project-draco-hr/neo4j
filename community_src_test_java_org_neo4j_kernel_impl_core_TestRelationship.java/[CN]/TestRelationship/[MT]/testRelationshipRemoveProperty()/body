{
  Integer int1=new Integer(1);
  Integer int2=new Integer(2);
  String string1=new String("1");
  String string2=new String("2");
  Node node1=getNeo().createNode();
  Node node2=getNeo().createNode();
  Relationship rel1=node1.createRelationshipTo(node2,MyRelTypes.TEST);
  Relationship rel2=node2.createRelationshipTo(node1,MyRelTypes.TEST);
  try {
    if (rel1.removeProperty(key1) != null) {
      fail("Remove of non existing property should return null");
    }
  }
 catch (  NotFoundException e) {
  }
  try {
    rel1.removeProperty(null);
    fail("Remove null property should throw exception.");
  }
 catch (  IllegalArgumentException e) {
  }
  rel1.setProperty(key1,int1);
  rel2.setProperty(key1,string1);
  rel1.setProperty(key2,string2);
  rel2.setProperty(key2,int2);
  try {
    rel1.removeProperty(null);
    fail("Null argument should result in exception.");
  }
 catch (  IllegalArgumentException e) {
  }
  assertEquals(int1,rel1.removeProperty(key1));
  assertEquals(string1,rel2.removeProperty(key1));
  try {
    if (rel2.removeProperty(key1) != null) {
      fail("Remove of non existing property should return null");
    }
  }
 catch (  NotFoundException e) {
    getTransaction().failure();
  }
  rel1.delete();
  rel2.delete();
  node1.delete();
  node2.delete();
}
