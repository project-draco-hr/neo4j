{
  try {
    long fileSize=getFileChannel().size();
    String expectedVersion=getTypeAndVersionDescriptor();
    byte version[]=new byte[expectedVersion.getBytes().length];
    ByteBuffer buffer=ByteBuffer.wrap(version);
    getFileChannel().position(fileSize - version.length);
    getFileChannel().read(buffer);
    buffer=ByteBuffer.allocate(4);
    getFileChannel().position(0);
    getFileChannel().read(buffer);
    buffer.flip();
    blockSize=buffer.getInt();
    if (blockSize <= 0) {
      throw new StoreFailureException("Illegal block size: " + blockSize);
    }
    if (!expectedVersion.equals(new String(version))) {
      if (!versionFound(new String(version))) {
        setStoreNotOk();
      }
    }
    if ((fileSize - version.length) % blockSize != 0) {
      setStoreNotOk();
    }
    if (getStoreOk()) {
      getFileChannel().truncate(fileSize - version.length);
    }
  }
 catch (  IOException e) {
    throw new StoreFailureException("Unable to load storage " + getStorageFileName(),e);
  }
  try {
    openIdGenerator();
  }
 catch (  StoreFailureException e) {
    setStoreNotOk();
  }
  setWindowPool(new PersistenceWindowPool(getStorageFileName(),getBlockSize(),getFileChannel(),getMappedMem(),getIfMemoryMapped()));
}
