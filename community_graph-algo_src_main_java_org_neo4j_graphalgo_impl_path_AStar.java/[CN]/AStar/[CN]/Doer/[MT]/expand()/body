{
  for (  Relationship rel : expander.expand(this,Traversal.NO_BRANCH_STATE)) {
    lastMetadata.rels++;
    Node node=rel.getOtherNode(this.lastNode);
    if (this.visitedNodes.contains(node.getId())) {
      continue;
    }
    Data lastNodeData=this.score.get(this.lastNode.getId());
    double tentativeGScore=lastNodeData.wayLength + lengthEvaluator.getCost(rel,Direction.OUTGOING);
    boolean isBetter=false;
    double estimate=estimateEvaluator.getCost(node,this.end);
    if (!this.nextNodesSet.contains(node)) {
      addNext(node,estimate + tentativeGScore);
      isBetter=true;
    }
 else     if (tentativeGScore < this.score.get(node.getId()).wayLength) {
      isBetter=true;
    }
    if (isBetter) {
      this.cameFrom.put(node.getId(),rel.getId());
      Data data=new Data();
      data.wayLength=tentativeGScore;
      data.estimate=estimate;
      this.score.put(node.getId(),data);
    }
  }
}
