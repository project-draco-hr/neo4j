{
  InconsistencyReport report=mock(InconsistencyReport.class);
  ConsistencyReport.Reporter reporter=new ConsistencyReporter(mock(RecordAccess.class),report);
  reportMethod.invoke(reporter,parameters(reportMethod));
  if (method.getAnnotation(ConsistencyReport.Warning.class) == null) {
    if (reportMethod.getName().endsWith("Change")) {
      verify(report).error(any(RecordType.class),any(AbstractBaseRecord.class),any(AbstractBaseRecord.class),argThat(hasExpectedFormat()),any(Object[].class));
    }
 else {
      verify(report).error(any(RecordType.class),any(AbstractBaseRecord.class),argThat(hasExpectedFormat()),any(Object[].class));
    }
  }
 else {
    if (reportMethod.getName().endsWith("Change")) {
      verify(report).warning(any(RecordType.class),any(AbstractBaseRecord.class),any(AbstractBaseRecord.class),argThat(hasExpectedFormat()),any(Object[].class));
    }
 else {
      verify(report).warning(any(RecordType.class),any(AbstractBaseRecord.class),argThat(hasExpectedFormat()),any(Object[].class));
    }
  }
}
