{
  return new Iterable<Node>(){
    @Override public Iterator<Node> iterator(){
      return new PrefetchingIterator<Node>(){
        final Iterator<Node> startNodes=start.reverseNodes().iterator();
        boolean endReturned;
        @Override protected Node fetchNextOrNull(){
          if (!endReturned) {
            endReturned=true;
            return endNode;
          }
          return startNodes.hasNext() ? startNodes.next() : null;
        }
      }
;
    }
  }
;
}
