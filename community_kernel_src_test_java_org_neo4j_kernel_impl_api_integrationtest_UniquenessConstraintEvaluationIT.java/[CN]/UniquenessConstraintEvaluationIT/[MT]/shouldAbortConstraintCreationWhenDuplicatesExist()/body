{
  newTransaction();
  Node node=db.createNode(label("Foo"));
  long node1=node.getId();
  node.setProperty("name","foo");
  node=db.createNode(label("Foo"));
  long node2=node.getId();
  node.setProperty("name","foo");
  long foo=statement.getLabelId("Foo");
  long name=statement.getPropertyKeyId("name");
  commit();
  newTransaction();
  try {
    statement.addUniquenessConstraint(foo,name);
    fail("expected exception");
  }
 catch (  ConstraintCreationKernelException ex) {
    assertEquals(new UniquenessConstraint(foo,name),ex.constraint());
    Throwable cause=ex.getCause();
    assertThat(cause,instanceOf(ConstraintVerificationFailedKernelException.class));
    assertEquals(asSet(new ConstraintVerificationFailedKernelException.Evidence(new PreexistingIndexEntryConflictException("foo",node1,node2))),((ConstraintVerificationFailedKernelException)cause).evidence());
  }
}
