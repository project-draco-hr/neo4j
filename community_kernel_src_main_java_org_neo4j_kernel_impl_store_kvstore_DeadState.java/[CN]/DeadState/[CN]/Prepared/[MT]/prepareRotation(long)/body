{
  return new Rotation<Key,RotationState.Rotation<Key>>(state.prepareRotation(version)){
    @Override ProgressiveState<Key> rotate(    RotationStrategy strategy,    Consumer<Headers.Builder> headers) throws IOException {
      return new Prepared<>(state.rotate(strategy,headers));
    }
    @Override void close() throws IOException {
      state.close();
    }
    @Override long rotationVersion(){
      return state.rotationVersion();
    }
  }
;
}
