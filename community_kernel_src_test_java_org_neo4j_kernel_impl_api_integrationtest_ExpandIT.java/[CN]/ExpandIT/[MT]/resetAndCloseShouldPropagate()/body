{
  long nodeId=createGraph();
  ReadOperations ops=readOperationsInNewTransaction();
  RelationshipRegister relId=newRelationshipRegister();
  NodeRegister startId=newNodeRegister();
  NeoRegister.RelTypeRegister relType=newRelTypeRegister();
  ObjectRegister<Direction> direction=newObjectRegister();
  NodeRegister neighborId=newNodeRegister();
  Cursor inputCursor=spy(new Cursors.CountDownCursor(1));
  Cursor cursor=ops.expand(inputCursor,newNodeRegister(nodeId),newObjectRegister(new int[]{relType1}),newObjectRegister(INCOMING),relId,relType,direction,startId,neighborId);
  while (cursor.next())   ;
  cursor.reset();
  verify(inputCursor).reset();
  assertThat(rows(cursor,relId,relType,direction,startId,neighborId),equalTo(asList(row(0l,relType1,BOTH,nodeId,0l),row(1l,relType1,BOTH,nodeId,0l),row(4l,relType1,INCOMING,nodeId,1l),row(5l,relType1,INCOMING,nodeId,1l),row(8l,relType1,INCOMING,nodeId,2l),row(9l,relType1,INCOMING,nodeId,2l))));
  assertFalse("Should not contain any more rows.",cursor.next());
  cursor.close();
  verify(inputCursor).close();
}
