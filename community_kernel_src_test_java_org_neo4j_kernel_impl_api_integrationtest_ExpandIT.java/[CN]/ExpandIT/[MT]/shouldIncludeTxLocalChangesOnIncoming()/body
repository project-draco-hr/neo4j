{
  long nodeId=createGraph();
  DataWriteOperations ops=dataWriteOperationsInNewTransaction();
  RelationshipRegister relId=newRelationshipRegister();
  NodeRegister startId=newNodeRegister();
  NeoRegister.RelTypeRegister relType=newRelTypeRegister();
  ObjectRegister<Direction> direction=newObjectRegister();
  NodeRegister neighborId=newNodeRegister();
  ops.relationshipDelete(0l);
  ops.relationshipCreate(relType1,nodeId,ops.nodeCreate());
  ops.relationshipCreate(relType1,ops.nodeCreate(),nodeId);
  Cursor cursor=ops.expand(countDownCursor(1),newNodeRegister(nodeId),newObjectRegister(new int[]{relType1}),newObjectRegister(INCOMING),relId,relType,direction,startId,neighborId);
  assertThat(rows(cursor,relId,relType,direction,startId,neighborId),equalTo(asList(row(1,relType1,BOTH,0,0),row(4,relType1,INCOMING,0,1),row(5,relType1,INCOMING,0,1),row(8,relType1,INCOMING,0,2),row(9,relType1,INCOMING,0,2),row(13,relType1,INCOMING,nodeId,6))));
  assertFalse("Should not contain any more rows.",cursor.next());
}
