{
  Node nodeA=createNode("name","A","x",0d,"y",0d);
  Node nodeB=createNode("name","B","x",7d,"y",0d);
  Node nodeC=createNode("name","C","x",2d,"y",1d);
  Relationship relAB=createRelationship(nodeA,nodeC,"length",2d);
  Relationship relBC=createRelationship(nodeC,nodeB,"length",3d);
  Relationship relAC=createRelationship(nodeA,nodeB,"length",10d);
  EstimateEvaluator<Double> estimateEvaluator=new EstimateEvaluator<Double>(){
    public Double getCost(    final Node node,    final Node goal){
      double dx=(Double)node.getProperty("x") - (Double)goal.getProperty("x");
      double dy=(Double)node.getProperty("y") - (Double)goal.getProperty("y");
      double result=Math.sqrt(Math.pow(dx,2) + Math.pow(dy,2));
      return result;
    }
  }
;
  PathFinder<WeightedPath> astar=GraphAlgoFactory.aStar(Traversal.expanderForAllTypes(),CommonEvaluators.doubleCostEvaluator("length"),estimateEvaluator);
  WeightedPath path=astar.findSinglePath(nodeA,nodeB);
}
