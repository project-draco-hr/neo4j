{
  Node startNode=graphDb.createNode();
  Node middleNode1=graphDb.createNode();
  Node middleNode2=graphDb.createNode();
  Node middleNode3=graphDb.createNode();
  Node endNode=graphDb.createNode();
  createRelationshipsBetween(startNode,middleNode1,endNode);
  createRelationshipsBetween(startNode,middleNode2,middleNode3,endNode);
  PathFinder<Path> finder=GraphAlgoFactory.shortestPath(Traversal.expanderForTypes(ExampleTypes.MY_TYPE,Direction.OUTGOING),15);
  Iterable<Path> paths=finder.findAllPaths(startNode,endNode);
  Path path=paths.iterator().next();
  assertEquals(2,path.length());
  assertEquals(startNode,path.startNode());
  assertEquals(endNode,path.endNode());
  Iterator<Node> iterator=path.nodes().iterator();
  iterator.next();
  assertEquals(middleNode1,iterator.next());
}
