{
  List<LinkedList<PropertyContainer>> paths=new LinkedList<LinkedList<PropertyContainer>>();
  List<Relationship> current=predecessors.get(node);
  if (current != null) {
    for (    Relationship r : current) {
      Node n=r.getOtherNode(node);
      List<LinkedList<PropertyContainer>> newPaths=constructAllPathsToNodeAsLinkedLists(n,predecessors,true,backwards);
      paths.addAll(newPaths);
      for (      LinkedList<PropertyContainer> path : newPaths) {
        if (backwards) {
          path.addFirst(r);
        }
 else {
          path.addLast(r);
        }
      }
    }
  }
  if (paths.isEmpty()) {
    paths.add(new LinkedList<PropertyContainer>());
  }
  if (includeNode) {
    for (    LinkedList<PropertyContainer> path : paths) {
      if (backwards) {
        path.addFirst(node);
      }
 else {
        path.addLast(node);
      }
    }
  }
  return paths;
}
