{
  String removal="map.remove( " + key + " );";
  if (includeChecks) {
    boolean existing=source.normalMap.containsKey(key);
    int existingValue=existing ? source.normalMap.get(key) : -1;
    out.println(format("boolean existedBefore = map.containsKey( %d );",key));
    out.println(format("int valueBefore = map.get( %d );",key));
    out.println(format("int removed = %s",removal));
    out.println(format("boolean existsAfter = map.containsKey( %d );",key));
    out.println(format("int valueAfter = map.get( %d );",key));
    out.println(format("assert%s( \"%s\", existedBefore );",capitilize(existing),key + " should " + (existing ? "" : "not ")+ "exist before removing here"));
    out.println(format("assertEquals( \"%s\", %d, valueBefore );","value before should be " + existingValue,existingValue));
    out.println(format("assertEquals( \"%s\", %d, removed );","value returned from remove should be " + existingValue,existingValue));
    out.println(format("assertFalse( \"%s\", existsAfter );",key + " should not exist"));
    out.println(format("assertEquals( \"%s\", -1, valueAfter );","value after removing should be -1"));
  }
 else {
    out.println(removal);
  }
}
