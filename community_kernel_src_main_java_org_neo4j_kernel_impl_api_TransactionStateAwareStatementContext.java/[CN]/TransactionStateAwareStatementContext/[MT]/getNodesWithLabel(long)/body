{
  Iterable<Long> committed=delegate.getNodesWithLabel(labelId);
  if (!state.hasChanges())   return committed;
  Iterable<Long> result=committed;
  final Collection<Long> removed=state.getNodesWithLabelRemoved(labelId);
  if (!removed.isEmpty()) {
    result=filter(new Predicate<Long>(){
      @Override public boolean accept(      Long item){
        return !removed.contains(item);
      }
    }
,result);
  }
  Iterable<Long> added=state.getNodesWithLabelAdded(labelId);
  return concat(result,added);
}
