{
  Iterable<Long> committedLabels=super.getLabelsForNode(nodeId);
  if (!state.hasChanges())   return committedLabels;
  Iterable<Long> result=committedLabels;
  Set<Long> addedLabels=state.getAddedLabels(nodeId,false);
  if (addedLabels != null)   result=concat(result,addedLabels);
  final Set<Long> removedLabels=state.getRemovedLabels(nodeId,false);
  if (removedLabels != null) {
    result=filter(new Predicate<Long>(){
      @Override public boolean accept(      Long item){
        return !removedLabels.contains(item);
      }
    }
,result);
  }
  return result;
}
