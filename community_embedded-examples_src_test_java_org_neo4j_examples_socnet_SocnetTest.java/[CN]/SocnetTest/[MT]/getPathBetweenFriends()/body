{
  deleteSocialGraph();
  Transaction transaction=graphDb.beginTx();
  Person start;
  Person middleMan1;
  Person middleMan2;
  Person endMan;
  try {
    start=personRepository.createPerson("start");
    middleMan1=personRepository.createPerson("middle1");
    middleMan2=personRepository.createPerson("middle2");
    endMan=personRepository.createPerson("endMan");
    start.addFriend(middleMan1);
    middleMan1.addFriend(middleMan2);
    middleMan2.addFriend(endMan);
    transaction.success();
  }
  finally {
    transaction.finish();
  }
  transaction=graphDb.beginTx();
  try {
    Iterable<Person> path=start.getShortestPathTo(endMan,4);
    assertPathIs(path,start,middleMan1,middleMan2,endMan);
  }
  finally {
    transaction.finish();
  }
}
