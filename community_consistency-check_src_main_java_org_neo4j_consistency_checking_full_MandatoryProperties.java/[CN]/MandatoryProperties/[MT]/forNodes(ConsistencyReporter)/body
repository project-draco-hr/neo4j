{
  return new Function<NodeRecord,Check<NodeRecord,ConsistencyReport.NodeConsistencyReport>>(){
    @Override public Check<NodeRecord,ConsistencyReport.NodeConsistencyReport> apply(    NodeRecord node){
      PrimitiveIntSet keys=null;
      for (      long labelId : NodeLabelReader.getListOfLabels(node,storeAccess.getNodeDynamicLabelStore())) {
        int[] propertyKeys=nodes.get(Utils.safeCastLongToInt(labelId));
        if (propertyKeys != null) {
          if (keys == null) {
            keys=Primitive.intSet(16);
          }
          for (          int key : propertyKeys) {
            keys.add(key);
          }
        }
      }
      return keys != null ? new RealCheck<>(node,ConsistencyReport.NodeConsistencyReport.class,reporter,RecordType.NODE,keys) : MandatoryProperties.<NodeRecord,ConsistencyReport.NodeConsistencyReport>noCheck();
    }
  }
;
}
