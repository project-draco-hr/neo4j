{
  ConsistencySummaryStatistics summary=new ConsistencySummaryStatistics();
  InconsistencyReport report=new InconsistencyReport(new InconsistencyMessageLogger(logger),summary);
  OwnerCheck ownerCheck=new OwnerCheck(checkPropertyOwners);
  CountsBuilderDecorator countsBuilder=new CountsBuilderDecorator(stores.nativeStores().getRawNeoStore().getNodeStore());
  CheckDecorator decorator=new CheckDecorator.ChainCheckDecorator(ownerCheck,countsBuilder);
  DiffRecordAccess records=recordAccess(stores.nativeStores());
  execute(stores,decorator,records,report);
  ownerCheck.scanForOrphanChains(progressFactory);
  countsBuilder.checkCounts(stores.nativeStores().getCounts(),new ConsistencyReporter(records,report),progressFactory);
  if (!summary.isConsistent()) {
    logger.logMessage("Inconsistencies found: " + summary);
  }
  return summary;
}
