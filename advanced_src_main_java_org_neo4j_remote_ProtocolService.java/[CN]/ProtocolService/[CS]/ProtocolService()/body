{
  Iterable<Transport> result;
  try {
    Class<?> serviceLoaderClass=Class.forName("java.util.ServiceLoader");
    Method loadMethod=serviceLoaderClass.getMethod("load",Class.class);
    @SuppressWarnings("unchecked") final Iterable<Transport> iter=((Iterable<Transport>)loadMethod.invoke(null,Transport.class));
    result=new CheckingIterable(){
      @Override Iterator<?> provideIterator(){
        return iter.iterator();
      }
    }
;
  }
 catch (  Exception ex) {
    Iterable<Transport> empty=Arrays.asList(new Transport[0]);
    try {
      Class<?> serviceClass=Class.forName("sun.misc.Service");
      final Method providersMethod=serviceClass.getMethod("providers",Class.class);
      result=new CheckingIterable(){
        @Override Iterator<?> provideIterator() throws Exception {
          return (Iterator<?>)providersMethod.invoke(null,Transport.class);
        }
      }
;
    }
 catch (    Exception e) {
      result=empty;
    }
  }
  factories=result;
}
