{
  Relationship edgeAB=graph.makeEdge("a","b");
  Relationship edgeBC=graph.makeEdge("b","c");
  Relationship edgeCD=graph.makeEdge("c","d");
  Relationship edgeDE=graph.makeEdge("d","e");
  Relationship edgeAB2=graph.makeEdge("a","b2");
  Relationship edgeB2C=graph.makeEdge("b2","c");
  Relationship edgeCD2=graph.makeEdge("c","d2");
  Relationship edgeD2E=graph.makeEdge("d2","e");
  Dijkstra<Double> dijkstra=new Dijkstra<Double>(0.0,graph.getNode("a"),graph.getNode("e"),new CostEvaluator<Double>(){
    public Double getCost(    Relationship relationship,    boolean backwards){
      return 1.0;
    }
  }
,new DoubleAdder(),new DoubleComparator(),Direction.OUTGOING,MyRelTypes.R1);
  boolean pathBD=false;
  boolean pathB2D=false;
  boolean pathBD2=false;
  boolean pathB2D2=false;
  List<List<Relationship>> paths=dijkstra.getPathsAsRelationships();
  assertTrue(paths.size() == 4);
  for (  List<Relationship> path : paths) {
    assertTrue(path.size() == 4);
    if (path.get(0).equals(edgeAB)) {
      assertTrue(path.get(1).equals(edgeBC));
    }
 else {
      assertTrue(path.get(0).equals(edgeAB2));
      assertTrue(path.get(1).equals(edgeB2C));
    }
    if (path.get(2).equals(edgeCD)) {
      assertTrue(path.get(3).equals(edgeDE));
    }
 else {
      assertTrue(path.get(2).equals(edgeCD2));
      assertTrue(path.get(3).equals(edgeD2E));
    }
    if (path.get(0).equals(edgeAB)) {
      if (path.get(2).equals(edgeCD)) {
        pathBD=true;
      }
 else       if (path.get(2).equals(edgeCD2)) {
        pathBD2=true;
      }
    }
 else {
      if (path.get(2).equals(edgeCD)) {
        pathB2D=true;
      }
 else       if (path.get(2).equals(edgeCD2)) {
        pathB2D2=true;
      }
    }
  }
  assertTrue(pathBD);
  assertTrue(pathB2D);
  assertTrue(pathBD2);
  assertTrue(pathB2D2);
}
