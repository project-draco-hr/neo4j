{
  TraversalDescription side=traversal().breadthFirst().expand(expander).uniqueness(RELATIONSHIP_GLOBAL).order(new BranchOrderingPolicy(){
    public BranchSelector create(    TraversalBranch startSource,    PathExpander expander){
      return new LiteDepthFirstSelector(startSource,startThreshold,expander);
    }
  }
);
  return bidirectionalTraversal().startSide(side.evaluator(toDepth(onDepth / 2))).endSide(side.evaluator(toDepth(onDepth - onDepth / 2))).collisionEvaluator(atDepth(onDepth)).traverse(start,end);
}
