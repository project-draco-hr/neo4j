{
  File fileA=new File(storeDir,FILENAME + "A");
  File fileB=new File(storeDir,FILENAME + "B");
  ByteBuffer workingBuffer=ByteBuffer.allocate(InMemoryVoteState.InMemoryVoteStateStateMarshal.NUMBER_OF_BYTES_PER_VOTE);
  InMemoryVoteState.InMemoryVoteStateStateMarshal<MEMBER> marshal=new InMemoryVoteState.InMemoryVoteStateStateMarshal<>(memberMarshal);
  VoteStateRecoveryManager<MEMBER> recoveryManager=new VoteStateRecoveryManager<>(fileSystemAbstraction,marshal);
  final StateRecoveryManager.RecoveryStatus recoveryStatus=recoveryManager.recover(fileA,fileB);
  this.inMemoryVoteState=recoveryManager.readLastEntryFrom(fileSystemAbstraction,recoveryStatus.previouslyActive());
  this.statePersister=new StatePersister<>(fileA,fileB,fileSystemAbstraction,numberOfEntriesBeforeRotation,workingBuffer,marshal,recoveryStatus.previouslyInactive(),databaseHealthSupplier);
}
