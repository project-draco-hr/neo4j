{
  StandardPageCache cache=newPageCache();
  PagedFile mappedFile=cache.map(storeFile,16);
  PageCursor cursor=cache.newPageCursor();
  Thread evictionThread=new Thread(cache);
  evictionThread.start();
  for (int i=0; i < 128; i++) {
    mappedFile.pin(cursor,PageLock.EXCLUSIVE,i);
    cursor.putByte((byte)i);
    mappedFile.unpin(cursor);
  }
  cache.close();
  evictionThread.interrupt();
  cache=newPageCache();
  mappedFile=cache.map(storeFile,16);
  cursor=cache.newPageCursor();
  evictionThread=new Thread(cache);
  evictionThread.start();
  for (int i=0; i < 128; i++) {
    mappedFile.pin(cursor,PageLock.SHARED,i);
    byte aByte=cursor.getByte();
    assertThat(aByte,equalTo((byte)i));
    mappedFile.unpin(cursor);
  }
  evictionThread.interrupt();
}
