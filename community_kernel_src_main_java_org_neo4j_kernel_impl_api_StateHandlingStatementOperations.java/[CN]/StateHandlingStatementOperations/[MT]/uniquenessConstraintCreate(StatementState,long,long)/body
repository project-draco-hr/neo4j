{
  UniquenessConstraint constraint=new UniquenessConstraint(labelId,propertyKeyId);
  if (!state.txState().constraintDoUnRemove(constraint)) {
    for (Iterator<UniquenessConstraint> it=schemaReadDelegate.constraintsGetForLabelAndPropertyKey(state,labelId,propertyKeyId); it.hasNext(); ) {
      if (it.next().equals(labelId,propertyKeyId)) {
        return constraint;
      }
    }
    try {
      long indexId=constraintIndexCreator.createUniquenessConstraintIndex(state,this,labelId,propertyKeyId);
      state.txState().constraintDoAdd(constraint,indexId);
    }
 catch (    TransactionalException|KernelException e) {
      throw new ConstraintCreationKernelException(constraint,e);
    }
  }
  return constraint;
}
