{
  UniquenessConstraint constraint=new UniquenessConstraint(labelId,propertyKeyId);
  try {
    IndexDescriptor index=new IndexDescriptor(labelId,propertyKeyId);
    if (state.txState().constraintIndexDoUnRemove(index)) {
      state.txState().constraintIndexDiffSetsByLabel(labelId).unRemove(index);
      if (!state.txState().constraintDoUnRemove(constraint)) {
        state.txState().constraintsChangesForLabel(labelId).unRemove(constraint);
        state.txState().constraintDoAdd(constraint,state.txState().indexCreatedForConstraint(constraint));
      }
    }
 else {
      for (Iterator<UniquenessConstraint> it=storeLayer.constraintsGetForLabelAndPropertyKey(labelId,propertyKeyId); it.hasNext(); ) {
        if (it.next().equals(labelId,propertyKeyId)) {
          return constraint;
        }
      }
      long indexId=constraintIndexCreator.createUniquenessConstraintIndex(state,this,labelId,propertyKeyId);
      state.txState().constraintDoAdd(constraint,indexId);
    }
    return constraint;
  }
 catch (  ConstraintVerificationFailedKernelException|DropIndexFailureException|TransactionFailureException e) {
    throw new CreateConstraintFailureException(constraint,e);
  }
}
