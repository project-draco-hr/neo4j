{
  File classicDatabaseDir=testDirectory.cleanDirectory("classic-db");
  File classicNeo4jStore=createClassicNeo4jStore(classicDatabaseDir,10,StandardV3_0.NAME);
  StoreMetadata storeMetadata=metadataFor(classicNeo4jStore);
  Path homeDir=Paths.get(testDirectory.cleanDirectory("new-db-1").getPath());
  LinkedList<String> args=ArgsBuilder.args().from(classicNeo4jStore).database("graph.db").build();
  StringBuilder output=new StringBuilder();
  PrintStream sysout=new PrintStream(new RestoreClusterUtils.MyOutputStream(output));
  new RestoreNewClusterCli(homeDir,homeDir,sysout).execute(args.toArray(new String[args.size()]));
  String seed=extractSeed(output.toString());
  ClusterSeed clusterSeed=ClusterSeed.create(seed);
  assertTrue(storeMetadata.storeId().equals(clusterSeed.before()));
  assertEquals(storeMetadata.lastTxId(),clusterSeed.lastTxId());
  assertFalse(storeMetadata.storeId().equals(clusterSeed.after()));
  Path rootNewDatabaseDir=Paths.get(testDirectory.cleanDirectory("new-db-2").getPath());
  LinkedList<String> newArgs=ArgsBuilder.args().from(classicNeo4jStore).database("graph.db").seed(seed).build();
  new RestoreExistingClusterCli(rootNewDatabaseDir,rootNewDatabaseDir).execute(newArgs.toArray(new String[newArgs.size()]));
  StoreMetadata newMetadata=metadataFor(extractDatabaseDir(rootNewDatabaseDir.toFile()));
  assertTrue(clusterSeed.after().equals(newMetadata.storeId()));
}
