{
  if (eof) {
    return eof(mark);
  }
  seekStartPos=bufferPos;
  int ch;
  while ((ch=nextChar()) != EOL_CHAR && ch != EOL_CHAR_2 && !eof) {
    for (int i=0; i < untilOneOfChars.length; i++) {
      if (ch == untilOneOfChars[i]) {
        mark.set(lineNumber,seekStartPos,bufferPos - 1,ch);
        return true;
      }
    }
  }
  int valueLength=bufferPos - seekStartPos - 1;
  if (ch == EOF_CHAR && valueLength == 0 && seekStartPos == lineStartPos) {
    return eof(mark);
  }
  int skipped=skipEolChars();
  mark.set(lineNumber,seekStartPos,bufferPos - 1 - skipped,Mark.END_OF_LINE_CHARACTER);
  lineNumber++;
  lineStartPos=bufferPos;
  return true;
}
