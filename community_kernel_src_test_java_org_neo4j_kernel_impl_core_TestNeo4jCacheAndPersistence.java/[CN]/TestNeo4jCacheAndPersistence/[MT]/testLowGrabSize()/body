{
  Map<String,String> config=new HashMap<String,String>();
  config.put("relationship_grab_size","1");
  String storePath=getStorePath("neo2");
  deleteFileOrDirectory(storePath);
  EmbeddedGraphDatabase graphDb=new EmbeddedGraphDatabase(storePath,config);
  Transaction tx=graphDb.beginTx();
  Node node1=graphDb.createNode();
  Node node2=graphDb.createNode();
  node1.createRelationshipTo(node2,MyRelTypes.TEST);
  node2.createRelationshipTo(node1,MyRelTypes.TEST2);
  node1.createRelationshipTo(node2,MyRelTypes.TEST_TRAVERSAL);
  tx.success();
  tx.finish();
  tx=graphDb.beginTx();
  Set<Relationship> rels=new HashSet<Relationship>();
  RelationshipType types[]=new RelationshipType[]{MyRelTypes.TEST,MyRelTypes.TEST2,MyRelTypes.TEST_TRAVERSAL};
  clearCache();
  for (  Relationship rel : node1.getRelationships(types)) {
    assertTrue(rels.add(rel));
  }
  assertEquals(3,rels.size());
  rels.clear();
  clearCache();
  for (  Relationship rel : node1.getRelationships()) {
    assertTrue(rels.add(rel));
  }
  assertEquals(3,rels.size());
  rels.clear();
  clearCache();
  for (  Relationship rel : node2.getRelationships(types)) {
    assertTrue(rels.add(rel));
  }
  assertEquals(3,rels.size());
  rels.clear();
  clearCache();
  for (  Relationship rel : node2.getRelationships()) {
    assertTrue(rels.add(rel));
  }
  assertEquals(3,rels.size());
  rels.clear();
  clearCache();
  for (  Relationship rel : node1.getRelationships(Direction.OUTGOING)) {
    assertTrue(rels.add(rel));
  }
  assertEquals(2,rels.size());
  rels.clear();
  clearCache();
  for (  Relationship rel : node1.getRelationships(Direction.INCOMING)) {
    assertTrue(rels.add(rel));
  }
  assertEquals(1,rels.size());
  rels.clear();
  clearCache();
  for (  Relationship rel : node2.getRelationships(Direction.OUTGOING)) {
    assertTrue(rels.add(rel));
  }
  assertEquals(1,rels.size());
  rels.clear();
  clearCache();
  for (  Relationship rel : node2.getRelationships(Direction.INCOMING)) {
    assertTrue(rels.add(rel));
  }
  assertEquals(2,rels.size());
  tx.success();
  tx.finish();
  graphDb.shutdown();
}
