{
  dataSource.getWriteLock();
  try {
    for (    Map.Entry<IndexIdentifier,CommandList> entry : this.commandMap.entrySet()) {
      if (entry.getValue().isEmpty()) {
        continue;
      }
      IndexIdentifier identifier=entry.getKey();
      CommandList commandList=entry.getValue();
      IndexType type=identifier == LuceneCommand.CreateIndexCommand.FAKE_IDENTIFIER || !commandList.containsWrites() ? null : dataSource.getType(identifier,false);
      if (type == null) {
        if (commandList.isDeletion()) {
          dataSource.removeExpectedFutureDeletion(identifier);
        }
 else         if (commandList.containsWrites()) {
          dataSource.addExpectedFutureDeletion(identifier);
          continue;
        }
      }
      CommitContext context=null;
      try {
        context=new CommitContext(dataSource,identifier,type,commandList);
        for (        LuceneCommand command : commandList.commands) {
          command.perform(context);
        }
        applyDocuments(context.writer,type,context.documents);
        if (context.writer != null) {
          dataSource.invalidateIndexSearcher(identifier);
        }
      }
  finally {
        if (context != null) {
          context.close();
        }
      }
    }
    closeTxData();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    dataSource.releaseWriteLock();
  }
}
