{
  final Method providers;
  try {
    providers=Class.forName("sun.misc.Service").getMethod("providers",Class.class);
  }
 catch (  Exception e) {
    return null;
  }
catch (  LinkageError e) {
    return null;
  }
  return filterExceptions(new Iterable<T>(){
    public Iterator<T> iterator(){
      try {
        @SuppressWarnings("unchecked") Iterator<T> result=(Iterator<T>)providers.invoke(null,type);
        return result;
      }
 catch (      Exception e) {
        throw new RuntimeException("Failed to invoke sun.misc.Service.providers(forClass)",e);
      }
    }
  }
);
}
