{
  final long millisForSessionToExpire=1000;
  Map<String,String> stringConfig=new HashMap<String,String>();
  stringConfig.put(HaSettings.coordinators.name(),"127.0.0.1:2181");
  stringConfig.put(HaSettings.server_id.name(),"1");
  stringConfig.put(HaSettings.zk_session_timeout.name(),Long.toString(millisForSessionToExpire));
  Config config=new Config(new ConfigurationDefaults(OnlineBackupSettings.class,GraphDatabaseSettings.class,HaSettings.class).apply(stringConfig));
  ZooClient client=new ZooClient("",StringLogger.SYSTEM,null,config,null,DummyClusterReceiver);
  final AtomicBoolean stop=new AtomicBoolean(false);
  Thread launchesZK=new Thread(new Runnable(){
    @Override public void run(){
      LocalhostZooKeeperCluster cluster=null;
      try {
        Thread.sleep((millisForSessionToExpire) * 2);
        cluster=new LocalhostZooKeeperCluster(getClass(),2181);
        while (!stop.get()) {
          Thread.sleep(150);
        }
      }
 catch (      Throwable e) {
        e.printStackTrace();
      }
 finally {
        if (cluster != null) {
          cluster.shutdown();
        }
      }
    }
  }
);
  launchesZK.setDaemon(true);
  launchesZK.start();
  client.waitForSyncConnected(AbstractZooKeeperManager.WaitMode.STARTUP);
  client.shutdown();
  stop.set(true);
  launchesZK.join();
}
