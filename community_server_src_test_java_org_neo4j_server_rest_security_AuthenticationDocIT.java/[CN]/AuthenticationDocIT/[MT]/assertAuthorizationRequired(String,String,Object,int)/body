{
  HTTP.Response response=HTTP.request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(401));
  assertThat(response.get("errors").get(0).get("code").asText(),equalTo("Neo.ClientError.Security.AuthorizationFailed"));
  assertThat(response.get("errors").get(0).get("message").asText(),equalTo("No authorization header supplied."));
  assertThat(response.header(HttpHeaders.WWW_AUTHENTICATE),equalTo("None"));
  response=HTTP.withHeaders(HttpHeaders.AUTHORIZATION,"This makes no sense").request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(400));
  assertThat(response.get("errors").get(0).get("code").asText(),equalTo("Neo.ClientError.Request.InvalidFormat"));
  assertThat(response.get("errors").get(0).get("message").asText(),equalTo("Invalid Authorization header."));
  response=HTTP.withHeaders(HttpHeaders.AUTHORIZATION,challengeResponse("neo4j","incorrect")).request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(401));
  assertThat(response.get("errors").get(0).get("code").asText(),equalTo("Neo.ClientError.Security.AuthorizationFailed"));
  assertThat(response.get("errors").get(0).get("message").asText(),equalTo("Invalid username or password."));
  assertThat(response.header(HttpHeaders.WWW_AUTHENTICATE),equalTo("None"));
  response=HTTP.withHeaders(HttpHeaders.AUTHORIZATION,challengeResponse("neo4j","secret")).request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(expectedAuthorizedStatus));
}
