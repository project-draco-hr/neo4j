{
  HTTP.Response response=HTTP.request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(401));
  assertThat(response.get("errors").get(0).get("code").asText(),equalTo("Neo.ClientError.Security.AuthorizationFailed"));
  assertThat(response.get("errors").get(0).get("message").asText(),equalTo("No authorization token supplied."));
  assertThat(response.get("authentication").asText(),equalTo("http://localhost:7474/authentication"));
  assertThat(response.header(HttpHeaders.WWW_AUTHENTICATE),equalTo("None"));
  response=HTTP.withHeaders(HttpHeaders.AUTHORIZATION,"This makes no sense").request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(400));
  assertThat(response.get("errors").get(0).get("code").asText(),equalTo("Neo.ClientError.Request.InvalidFormat"));
  assertThat(response.get("errors").get(0).get("message").asText(),equalTo("Invalid Authorization header."));
  response=HTTP.withHeaders(HttpHeaders.AUTHORIZATION,"Basic realm=\"Neo4j\" " + base64(":helloworld")).request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(401));
  assertThat(response.get("errors").get(0).get("code").asText(),equalTo("Neo.ClientError.Security.AuthorizationFailed"));
  assertThat(response.get("errors").get(0).get("message").asText(),equalTo("Invalid authorization token supplied."));
  assertThat(response.get("authentication").asText(),equalTo("http://localhost:7474/authentication"));
  assertThat(response.header(HttpHeaders.WWW_AUTHENTICATE),equalTo("None"));
  String token=HTTP.POST(authURL(),RawPayload.quotedJson("{'username':'neo4j','password':'secret'}")).get("authorization_token").asText();
  response=HTTP.withHeaders(HttpHeaders.AUTHORIZATION,challengeResponse(token)).request(method,server.baseUri().resolve(path).toString(),payload);
  assertThat(response.status(),equalTo(expectedAuthorizedStatus));
}
