{
  createNode("A");
  checkPoint();
  createNode("B");
  flushNeoStoreOnly();
  crashAndRestart();
  final AtomicInteger number=new AtomicInteger(0);
  counts().accept(new CountsVisitor.Adapter(){
    @Override public void visitNodeCount(    int labelId,    long count){
      number.incrementAndGet();
      if (labelId != -1) {
        assertEquals(1,count);
      }
 else {
        assertEquals(2,count);
      }
    }
  }
);
  assertEquals(3,number.get());
}
