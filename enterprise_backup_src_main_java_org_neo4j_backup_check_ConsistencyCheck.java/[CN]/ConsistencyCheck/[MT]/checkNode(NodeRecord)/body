{
  boolean fail=false;
  long relId=node.getNextRel();
  if (!Record.NO_NEXT_RELATIONSHIP.value(relId)) {
    RelationshipRecord rel=rels.forceGetRecord(relId);
    if (!rel.inUse())     fail|=inconsistent(nodes,node,rels,rel,"reference to relationship not in use");
 else     if (!(rel.getFirstNode() == node.getId() || rel.getSecondNode() == node.getId()))     fail|=inconsistent(nodes,node,rels,rel,"reference to relationship that does not reference back");
  }
  if (props != null) {
    long propId=node.getNextProp();
    if (!Record.NO_NEXT_PROPERTY.value(propId)) {
      PropertyRecord prop=props.forceGetRecord(propId);
      if (!prop.inUse())       fail|=inconsistent(nodes,node,props,prop,"reference to property not in use");
 else       if (prop.getRelId() != -1 || (prop.getNodeId() != -1 && prop.getNodeId() != node.getId()))       fail|=inconsistent(nodes,node,props,prop,"reference to property for other entity");
    }
  }
  return fail;
}
