{
  new ConsistencyCheck(stores,propowner){
    @Override ProgressIndicator progressInit(){
      System.err.println("Checking consistency" + (propowners() ? " (with property owner verification)" : "") + " on:");
      long total=0;
      for (      RecordStore<?> store : this) {
        if (store != null) {
          long highId=store.getHighId();
          System.err.println("    " + highId + " records from "+ store);
          total+=highId;
        }
      }
      return progressFactory.newMultiProgressIndicator(total);
    }
    @Override protected <R1 extends AbstractBaseRecord,R2 extends AbstractBaseRecord>void report(    RecordStore<R1> recordStore,    R1 record,    RecordStore<? extends R2> referredStore,    R2 referred,    InconsistencyType inconsistency){
      System.out.println(record + " " + referred+ " //"+ inconsistency.message());
    }
    @Override protected <R extends AbstractBaseRecord>void report(    RecordStore<R> recordStore,    R record,    InconsistencyType inconsistency){
      System.out.println(record + " //" + inconsistency.message());
    }
  }
.run();
}
