{
  final int MIN_SIZE=50;
  final int MAX_SIZE=200;
  StatefulMonitor stateMonitor=new StatefulMonitor();
  FakeClock clock=new FakeClock();
  final LinkedQueuePool<Object> pool=getLinkedQueuePool(stateMonitor,clock,MIN_SIZE);
  List<FlyweightHolder<Object>> holders=new LinkedList<>();
  buildAPeakOfAcquiredFlyweightsAndTriggerAlarmWithSideEffects(MAX_SIZE,clock,pool,holders);
  clock.forward(110,TimeUnit.MILLISECONDS);
  for (int i=0; i < MAX_SIZE; i++) {
    acquireFromPool(pool,1).get(0).release();
  }
  assertEquals(1,stateMonitor.currentPeakSize.get());
  assertEquals(MIN_SIZE,stateMonitor.targetSize.get());
  assertEquals(MAX_SIZE - MIN_SIZE + 1,stateMonitor.disposed.get());
}
