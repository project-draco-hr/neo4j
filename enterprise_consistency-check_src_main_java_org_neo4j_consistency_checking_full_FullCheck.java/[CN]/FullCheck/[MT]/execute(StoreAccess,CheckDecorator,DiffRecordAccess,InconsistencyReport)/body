{
  StoreProcessor processEverything=new StoreProcessor(decorator,new ConsistencyReporter(recordAccess,report));
  ProgressMonitorFactory.MultiPartBuilder progress=progressFactory.multipleParts("Full consistency check");
  List<StoreProcessorTask> tasks=new ArrayList<StoreProcessorTask>(9);
  MultiPassStore.Factory processorFactory=new MultiPassStore.Factory(decorator,totalMappedMemory,store,recordAccess,report);
  tasks.add(new StoreProcessorTask<NodeRecord>(store.getNodeStore(),progress,order,processEverything,processorFactory.createAll(PROPERTIES,RELATIONSHIPS)));
  tasks.add(new StoreProcessorTask<RelationshipRecord>(store.getRelationshipStore(),progress,order,processEverything,processorFactory.createAll(NODES,PROPERTIES,RELATIONSHIPS)));
  tasks.add(new StoreProcessorTask<PropertyRecord>(store.getPropertyStore(),progress,order,processEverything,processorFactory.createAll(PROPERTIES,STRINGS,ARRAYS)));
  tasks.add(new StoreProcessorTask<DynamicRecord>(store.getStringStore(),progress,order,processEverything,processorFactory.createAll(STRINGS)));
  tasks.add(new StoreProcessorTask<DynamicRecord>(store.getArrayStore(),progress,order,processEverything,processorFactory.createAll(ARRAYS)));
  tasks.add(new StoreProcessorTask<RelationshipTypeTokenRecord>(store.getRelationshipTypeTokenStore(),progress,order,processEverything,processEverything));
  tasks.add(new StoreProcessorTask<PropertyKeyTokenRecord>(store.getPropertyKeyTokenStore(),progress,order,processEverything,processEverything));
  tasks.add(new StoreProcessorTask<DynamicRecord>(store.getRelationshipTypeNameStore(),progress,order,processEverything,processEverything));
  tasks.add(new StoreProcessorTask<DynamicRecord>(store.getPropertyKeyNameStore(),progress,order,processEverything,processEverything));
  order.execute(tasks,progress.build());
}
