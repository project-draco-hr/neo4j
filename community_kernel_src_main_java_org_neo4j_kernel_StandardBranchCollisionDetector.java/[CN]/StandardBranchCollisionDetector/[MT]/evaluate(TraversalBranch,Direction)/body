{
  Collection<TraversalBranch>[] pathsHere=paths.get(branch.endNode());
  int index=direction.ordinal();
  if (pathsHere == null) {
    pathsHere=new Collection[]{new ArrayList<TraversalBranch>(),new ArrayList<TraversalBranch>()};
    paths.put(branch.endNode(),pathsHere);
  }
  pathsHere[index].add(branch);
  Collection<TraversalBranch> otherCollections=pathsHere[index == 0 ? 1 : 0];
  if (!otherCollections.isEmpty()) {
    Collection<Path> foundPaths=new ArrayList<Path>();
    for (    TraversalBranch otherBranch : otherCollections) {
      TraversalBranch startPath=index == 0 ? branch : otherBranch;
      TraversalBranch endPath=index == 0 ? otherBranch : branch;
      BidirectionalTraversalBranchPath path=new BidirectionalTraversalBranchPath(startPath,endPath);
      if (returnedPaths.add(path) && includePath(path,startPath,endPath)) {
        foundPaths.add(path);
      }
    }
    if (!foundPaths.isEmpty()) {
      return foundPaths;
    }
  }
  return null;
}
