{
switch (direction) {
case INCOMING:
    if (incoming != null && !incoming.isEmpty()) {
      rels=diffStrategy.augmentPrimitiveIterator(rels,typeFilter.apply(incoming));
    }
  break;
case OUTGOING:
if (outgoing != null && !outgoing.isEmpty()) {
  rels=diffStrategy.augmentPrimitiveIterator(rels,typeFilter.apply(outgoing));
}
break;
case BOTH:
if (outgoing != null && !outgoing.isEmpty()) {
rels=diffStrategy.augmentPrimitiveIterator(rels,typeFilter.apply(outgoing));
}
if (incoming != null && !incoming.isEmpty()) {
rels=diffStrategy.augmentPrimitiveIterator(rels,typeFilter.apply(incoming));
}
break;
}
if (loops != null && !loops.isEmpty()) {
rels=diffStrategy.augmentPrimitiveIterator(rels,typeFilter.apply(loops));
}
return rels;
}
