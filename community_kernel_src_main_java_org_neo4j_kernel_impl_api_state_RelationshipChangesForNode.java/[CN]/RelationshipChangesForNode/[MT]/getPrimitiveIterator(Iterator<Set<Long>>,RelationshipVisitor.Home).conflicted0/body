{
  if (!diff.hasNext()) {
    return PrimitiveLongCollections.emptyIterator();
  }
  return new PrimitiveLongCollections.PrimitiveLongBaseIterator(){
    private Iterator<Long> currentSetOfAddedRels;
    @Override protected boolean fetchNext(){
      Iterator<Long> iterator=currentSetOfAddedRels();
      return iterator.hasNext() ? next(iterator.next()) : false;
    }
    private Iterator<Long> currentSetOfAddedRels(){
      while (diff.hasNext() && (currentSetOfAddedRels == null || !currentSetOfAddedRels.hasNext())) {
        currentSetOfAddedRels=diff.next().iterator();
      }
      return currentSetOfAddedRels;
    }
  }
;
}
