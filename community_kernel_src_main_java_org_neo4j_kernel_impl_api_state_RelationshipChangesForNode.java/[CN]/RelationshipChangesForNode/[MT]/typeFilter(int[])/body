{
  return new Function<Map<Integer,Set<Long>>,Iterator<Set<Long>>>(){
    @Override public Iterator<Set<Long>> apply(    final Map<Integer,Set<Long>> relationshipsByType){
      return new PrefetchingIterator<Set<Long>>(){
        private final PrimitiveIntIterator iterTypes=iterator(types);
        @Override protected Set<Long> fetchNextOrNull(){
          while (iterTypes.hasNext()) {
            Set<Long> relsByType=relationshipsByType.get(iterTypes.next());
            if (relsByType != null) {
              return relsByType;
            }
          }
          return null;
        }
      }
;
    }
  }
;
}
