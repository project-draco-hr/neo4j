{
switch (direction) {
case INCOMING:
    if (incoming != null && incoming.containsKey(typeId)) {
      degree=diffStrategy.augmentDegree(degree,incoming.get(typeId).size());
    }
  break;
case OUTGOING:
if (outgoing != null && outgoing.containsKey(typeId)) {
  degree=diffStrategy.augmentDegree(degree,outgoing.get(typeId).size());
}
break;
case BOTH:
if (outgoing != null && outgoing.containsKey(typeId)) {
degree=diffStrategy.augmentDegree(degree,outgoing.get(typeId).size());
}
if (incoming != null && incoming.containsKey(typeId)) {
degree=diffStrategy.augmentDegree(degree,incoming.get(typeId).size());
}
break;
default :
throw new IllegalArgumentException("Unknown direction: " + direction);
}
if (loops != null && loops.containsKey(typeId)) {
degree=diffStrategy.augmentDegree(degree,loops.get(typeId).size());
}
return degree;
}
