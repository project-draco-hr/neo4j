{
  fixture.apply(new GraphStoreFixture.Transaction(){
    @Override protected void transactionData(    GraphStoreFixture.TransactionDataBuilder tx,    GraphStoreFixture.IdGenerator next){
      long nodeId1=next.node();
      long nodeId2=next.node();
      long relId=next.relationship();
      long propId=next.property();
      NodeRecord node1=new NodeRecord(nodeId1,true,false,relId,NO_NEXT_PROPERTY.intValue(),NO_LABELS_FIELD.intValue());
      NodeRecord node2=new NodeRecord(nodeId2,true,false,relId,NO_NEXT_PROPERTY.intValue(),NO_LABELS_FIELD.intValue());
      RelationshipRecord relationship=new RelationshipRecord(relId,true,nodeId1,nodeId2,M,NO_PREV_RELATIONSHIP.intValue(),NO_NEXT_RELATIONSHIP.intValue(),NO_PREV_RELATIONSHIP.intValue(),NO_NEXT_RELATIONSHIP.intValue(),true,true);
      relationship.setNextProp(propId);
      PropertyRecord property=new PropertyRecord(propId,relationship);
      property.setInUse(true);
      PropertyBlock block=new PropertyBlock();
      block.setSingleBlock(key | (((long)PropertyType.INT.intValue()) << 24) | (1337L << 28));
      property.addPropertyBlock(block);
      tx.create(node1);
      tx.create(node2);
      tx.create(relationship);
      tx.create(property);
      tx.incrementRelationshipCount(ANY_LABEL,ANY_RELATIONSHIP_TYPE,ANY_LABEL,1);
      tx.incrementRelationshipCount(ANY_LABEL,M,ANY_LABEL,1);
    }
  }
);
  createRelationshipPropertyExistenceConstraint(M,mandatory);
  ConsistencySummaryStatistics stats=check();
  on(stats).verify(RecordType.RELATIONSHIP,1).andThatsAllFolks();
}
