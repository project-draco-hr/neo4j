{
  if (shortestIterator == null) {
    shortestPaths=new ArrayList<>();
    while (paths.hasNext()) {
      WeightedPath path=new WeightedPathImpl(costEvaluator,paths.next());
      if (NoneStrictMath.compare(path.weight(),foundWeight,epsilon) < 0) {
        foundWeight=path.weight();
        shortestPaths.clear();
      }
      if (NoneStrictMath.compare(path.weight(),foundWeight,epsilon) <= 0) {
        shortestPaths.add(path);
      }
    }
    shortestIterator=shortestPaths.iterator();
  }
  return shortestIterator.hasNext() ? shortestIterator.next() : null;
}
