{
  long inUseBefore=propertyRecordsInUse();
  Node node=getGraphDb().createNode();
  for (int i=0; i < 3 * PropertyType.getPayloadSizeLongs(); i++) {
    node.setProperty("shortString" + i,String.valueOf(i));
  }
  assertEquals(inUseBefore + 3,propertyRecordsInUse());
  newTransaction();
  clearCache();
  for (int i=PropertyType.getPayloadSizeLongs(); i < 2 * PropertyType.getPayloadSizeLongs(); i++) {
    assertEquals(String.valueOf(i),node.removeProperty("shortString" + i));
  }
  newTransaction();
  clearCache();
  assertEquals(inUseBefore + 2,propertyRecordsInUse());
  for (int i=0; i < PropertyType.getPayloadSizeLongs(); i++) {
    assertEquals(String.valueOf(i),node.removeProperty("shortString" + i));
  }
  for (int i=PropertyType.getPayloadSizeLongs(); i < 2 * PropertyType.getPayloadSizeLongs(); i++) {
    assertFalse(node.hasProperty("shortString" + i));
  }
  for (int i=2 * PropertyType.getPayloadSizeLongs(); i < 3 * PropertyType.getPayloadSizeLongs(); i++) {
    assertEquals(String.valueOf(i),node.removeProperty("shortString" + i));
  }
}
