{
  Node node=getGraphDb().createNode();
  long recordsInUseAtStart=propertyRecordsInUse();
  int stuffedShortStrings=0;
  for (; stuffedShortStrings < PropertyType.getPayloadSizeLongs(); stuffedShortStrings++) {
    node.setProperty("shortString" + stuffedShortStrings,String.valueOf(stuffedShortStrings));
  }
  newTransaction();
  clearCache();
  assertEquals(recordsInUseAtStart + 1,propertyRecordsInUse());
  node.removeProperty("shortString0");
  node.removeProperty("shortString2");
  node.setProperty("theDoubleOne",-1.0);
  newTransaction();
  clearCache();
  assertEquals(recordsInUseAtStart + 1,propertyRecordsInUse());
  for (int i=0; i < stuffedShortStrings; i++) {
    if (i == 0) {
      assertFalse(node.hasProperty("shortString" + i));
    }
 else     if (i == 2) {
      assertFalse(node.hasProperty("shortString" + i));
    }
 else {
      assertEquals(String.valueOf(i),node.getProperty("shortString" + i));
    }
  }
  assertEquals(-1.0,node.getProperty("theDoubleOne"));
}
