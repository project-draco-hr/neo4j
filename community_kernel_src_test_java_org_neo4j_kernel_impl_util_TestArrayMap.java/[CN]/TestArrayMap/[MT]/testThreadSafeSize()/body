{
  ArrayMap<Integer,Object> map=new ArrayMap<Integer,Object>((byte)5,true,true);
  map.put(1,new Object());
  map.put(2,new Object());
  map.put(3,new Object());
  map.put(4,new Object());
  map.put(5,new Object());
  final int NUM_THREADS=100;
  CountDownLatch done=new CountDownLatch(NUM_THREADS);
  List<WorkerThread> threads=new ArrayList<WorkerThread>(NUM_THREADS);
  for (int i=0; i < NUM_THREADS; i++) {
    WorkerThread thread=new WorkerThread(map,done);
    threads.add(thread);
    thread.start();
  }
  done.await();
  for (  WorkerThread thread : threads) {
    assertTrue("Synchronized ArrayMap concurrent size invoke failed: " + thread.getCause(),thread.wasSuccessful());
  }
}
