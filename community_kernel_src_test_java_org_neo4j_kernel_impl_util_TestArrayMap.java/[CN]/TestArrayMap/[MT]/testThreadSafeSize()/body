{
  ArrayMap<Integer,Object> map=new ArrayMap<Integer,Object>(5,true,true);
  map.put(1,new Object());
  map.put(2,new Object());
  map.put(3,new Object());
  map.put(4,new Object());
  map.put(5,new Object());
  LinkedList<WorkerThread> runningThreads=new LinkedList<WorkerThread>();
  for (int i=0; i < 100; i++) {
    WorkerThread thread=new WorkerThread(map);
    thread.start();
    runningThreads.add(thread);
  }
  while (!runningThreads.isEmpty()) {
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException e) {
      Thread.interrupted();
    }
    WorkerThread thread=runningThreads.getFirst();
    if (!thread.stillRunning()) {
      assertTrue("Synchronized ArrayMap concurrent size invoke failed: " + thread.getCause(),thread.wasSuccessful());
      runningThreads.removeFirst();
    }
  }
}
