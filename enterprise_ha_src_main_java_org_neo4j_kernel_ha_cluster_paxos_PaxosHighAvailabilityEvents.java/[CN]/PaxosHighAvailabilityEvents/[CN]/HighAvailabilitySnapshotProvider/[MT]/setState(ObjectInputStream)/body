{
  snapshot=HighAvailabilitySnapshot.class.cast(input.readObject());
  Listeners.notifyListeners(listeners,new Listeners.Notification<HighAvailabilityListener>(){
    @Override public void notify(    HighAvailabilityListener listener){
      for (      MemberIsAvailable memberIsAvailable : snapshot.getCurrentAvailableMembers()) {
        listener.memberIsAvailable(memberIsAvailable.getRole(),memberIsAvailable.getClusterUri(),memberIsAvailable.getInstanceUris());
      }
    }
  }
);
}
