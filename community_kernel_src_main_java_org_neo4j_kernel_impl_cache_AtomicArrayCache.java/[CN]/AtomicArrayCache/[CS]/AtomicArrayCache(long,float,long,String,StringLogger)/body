{
  this.minLogInterval=minLogInterval;
  if (arrayHeapFraction < 1 || arrayHeapFraction > 10) {
    throw new IllegalArgumentException("The heap fraction used by an array cache must be between 1% and 10%, not " + arrayHeapFraction + "%");
  }
  long memToUse=(long)(((double)arrayHeapFraction) * Runtime.getRuntime().maxMemory() / 100);
  long maxElementCount=(int)(memToUse / 8);
  if (memToUse > Integer.MAX_VALUE) {
    maxElementCount=Integer.MAX_VALUE;
  }
  if (maxSizeInBytes < MIN_SIZE) {
    throw new IllegalArgumentException("Max size can not be " + maxSizeInBytes);
  }
  this.cache=new AtomicReferenceArray<E>((int)maxElementCount);
  this.maxSize=maxSizeInBytes;
  this.name=name == null ? super.toString() : name;
  this.logger=logger == null ? StringLogger.SYSTEM : logger;
}
