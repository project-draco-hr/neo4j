{
  long id=record.getId();
  cursor.setOffset((int)(id * RECORD_SIZE % storeFile.pageSize()));
  if (record.inUse()) {
    short prevModifier=record.getPrevProp() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((record.getPrevProp() & 0xF00000000L) >> 28);
    short nextModifier=record.getNextProp() == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((record.getNextProp() & 0xF00000000L) >> 32);
    byte modifiers=(byte)(prevModifier | nextModifier);
    cursor.putByte(modifiers);
    cursor.putInt((int)record.getPrevProp());
    cursor.putInt((int)record.getNextProp());
    int longsAppended=0;
    for (    PropertyBlock block : record) {
      long[] propBlockValues=block.getValueBlocks();
      for (      long propBlockValue : propBlockValues) {
        cursor.putLong(propBlockValue);
      }
      longsAppended+=propBlockValues.length;
    }
    if (longsAppended < PropertyType.getPayloadSizeLongs()) {
      cursor.putLong(0);
    }
  }
 else {
    cursor.setOffset(cursor.getOffset() + 9);
    cursor.putLong(0);
  }
}
