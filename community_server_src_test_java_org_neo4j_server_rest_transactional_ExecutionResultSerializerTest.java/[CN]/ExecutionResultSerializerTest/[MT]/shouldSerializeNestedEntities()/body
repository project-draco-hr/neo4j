{
  ByteArrayOutputStream output=new ByteArrayOutputStream();
  ExecutionResultSerializer serializer=getSerializerWith(output);
  Node a=node(1,properties(property("foo",12)));
  Node b=node(2,properties(property("bar",false)));
  Relationship r=relationship(1,properties(property("baz","quux")),a,"FRAZZLE",b);
  Result executionResult=mockExecutionResult(map("nested",new TreeMap<>(map("node",a,"edge",r,"path",path(a,link(r,b))))));
  serializer.statementResult(executionResult,false);
  serializer.finish();
  String result=output.toString(UTF_8.name());
  assertEquals("{\"results\":[{\"columns\":[\"nested\"]," + "\"data\":[{\"row\":[{\"edge\":{\"baz\":\"quux\"},\"node\":{\"foo\":12},\"path\":[{\"foo\":12},{\"baz\":\"quux\"},{\"bar\":false}]}]," + "\"meta\":[{\"id\":1,\"type\":\"relationship\",\"deleted\":false},{\"id\":1,\"type\":\"node\",\"deleted\":false},[{\"id\":1,\"type\":\"node\",\"deleted\":false},{\"id\":1,\"type\":\"relationship\",\"deleted\":false},{\"id\":2,\"type\":\"node\",\"deleted\":false}]]}]}],"+ "\"errors\":[]}",result);
}
