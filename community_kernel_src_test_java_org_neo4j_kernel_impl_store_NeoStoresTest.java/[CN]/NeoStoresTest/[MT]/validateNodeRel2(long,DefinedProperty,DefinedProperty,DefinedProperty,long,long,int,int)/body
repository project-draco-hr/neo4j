{
  assertTrue(nodeExists(node));
  ArrayMap<Integer,Pair<DefinedProperty,Long>> props=new ArrayMap<>();
  propertyLoader.nodeLoadProperties(node,newPropertyReceiver(props));
  int count=0;
  for (  int keyId : props.keySet()) {
    long id=props.get(keyId).other();
    PropertyRecord record=getRecord(pStore,id);
    PropertyBlock block=record.getPropertyBlock(props.get(keyId).first().propertyKeyId());
    DefinedProperty data=block.newPropertyData(pStore);
    if (data.propertyKeyId() == prop1.propertyKeyId()) {
      assertEquals("prop1",MyPropertyKeyToken.getIndexFor(keyId).name());
      assertEquals("string2",data.value());
      nodeAddProperty(node,prop1.propertyKeyId(),"-string2");
    }
 else     if (data.propertyKeyId() == prop2.propertyKeyId()) {
      assertEquals("prop2",MyPropertyKeyToken.getIndexFor(keyId).name());
      assertEquals(2,data.value());
      nodeAddProperty(node,prop2.propertyKeyId(),-2);
    }
 else     if (data.propertyKeyId() == prop3.propertyKeyId()) {
      assertEquals("prop3",MyPropertyKeyToken.getIndexFor(keyId).name());
      assertEquals(false,data.value());
      nodeAddProperty(node,prop3.propertyKeyId(),true);
    }
 else {
      throw new IOException();
    }
    count++;
  }
  assertEquals(3,count);
  count=0;
  try (KernelStatement statement=(KernelStatement)tx.acquireStatement();Cursor<NodeItem> nodeCursor=statement.getStoreStatement().acquireSingleNodeCursor(node)){
    nodeCursor.next();
    try (Cursor<RelationshipItem> relationships=nodeCursor.get().relationships(Direction.BOTH)){
      while (relationships.next()) {
        long rel=relationships.get().id();
        if (rel == rel1) {
          assertEquals(node,relationships.get().endNode());
          assertEquals(relType1,relationships.get().type());
        }
 else         if (rel == rel2) {
          assertEquals(node,relationships.get().startNode());
          assertEquals(relType2,relationships.get().type());
        }
 else {
          throw new IOException();
        }
        count++;
      }
    }
   }
   assertEquals(2,count);
}
