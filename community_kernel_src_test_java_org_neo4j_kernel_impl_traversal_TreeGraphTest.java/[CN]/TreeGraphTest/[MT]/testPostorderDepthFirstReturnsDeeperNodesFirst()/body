{
  Traverser traverser=Traversal.description().order(Traversal.postorderDepthFirst()).traverse(node("1"));
  int i=0;
  List<String> encounteredNodes=new ArrayList<String>();
  for (  Path pos : traverser) {
    encounteredNodes.add((String)pos.endNode().getProperty("name"));
    assertEquals(expectedDepth((12 - i++)),pos.length());
  }
  assertEquals(13,i);
  assertTrue(encounteredNodes.indexOf("5") < encounteredNodes.indexOf("2"));
  assertTrue(encounteredNodes.indexOf("6") < encounteredNodes.indexOf("2"));
  assertTrue(encounteredNodes.indexOf("7") < encounteredNodes.indexOf("2"));
  assertTrue(encounteredNodes.indexOf("8") < encounteredNodes.indexOf("3"));
  assertTrue(encounteredNodes.indexOf("9") < encounteredNodes.indexOf("3"));
  assertTrue(encounteredNodes.indexOf("A") < encounteredNodes.indexOf("3"));
  assertTrue(encounteredNodes.indexOf("B") < encounteredNodes.indexOf("4"));
  assertTrue(encounteredNodes.indexOf("C") < encounteredNodes.indexOf("4"));
  assertTrue(encounteredNodes.indexOf("D") < encounteredNodes.indexOf("4"));
  assertTrue(encounteredNodes.indexOf("2") < encounteredNodes.indexOf("1"));
  assertTrue(encounteredNodes.indexOf("3") < encounteredNodes.indexOf("1"));
  assertTrue(encounteredNodes.indexOf("4") < encounteredNodes.indexOf("1"));
}
