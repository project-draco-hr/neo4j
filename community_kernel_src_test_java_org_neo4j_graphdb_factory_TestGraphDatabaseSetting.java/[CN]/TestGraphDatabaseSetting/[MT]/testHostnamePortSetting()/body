{
  GraphDatabaseSetting.HostnamePortSetting setting=new GraphDatabaseSetting.HostnamePortSetting("myfile");
  assertValidationPasses(setting,"192.168.0.1");
  assertValidationPasses(setting,"192.168.0.1:5000");
  assertValidationPasses(setting,"192.168.0.1:5000-5005");
  assertValidationPasses(setting,":5000");
  assertValidationPasses(setting,":5000-5005");
  assertValidationFails(setting,"hostname:xyz");
  assertThat(setting.getAddress(stringMap(setting.name(),"192.168.0.1")),equalTo("192.168.0.1"));
  assertThat(setting.getAddress(stringMap(setting.name(),"192.168.0.1:5000")),equalTo("192.168.0.1"));
  assertThat(setting.getAddress(stringMap(setting.name(),":5000")),CoreMatchers.nullValue());
  assertThat(setting.getPort(stringMap(setting.name(),":5000")),equalTo(5000));
  assertThat(setting.getPorts(stringMap(setting.name(),":5000-5005")),equalTo(new int[]{5000,5005}));
  assertThat(setting.getAddress(stringMap(setting.name(),":5000"),"1.2.3.4"),equalTo("1.2.3.4"));
  assertThat(setting.getAddressWithLocalhostDefault(stringMap(setting.name(),":5000")),equalTo(InetAddress.getLocalHost().getHostAddress()));
  assertThat(setting.getAddressAndPortWithLocalhostDefault(stringMap(setting.name(),":5000")),equalTo(InetAddress.getLocalHost().getHostAddress() + ":5000"));
  try {
    setting.getAddress(stringMap(setting.name(),":5000"),"1.2.3.4:1234");
    fail("Default value shouldn't be able to contain port");
  }
 catch (  IllegalArgumentException e) {
  }
}
