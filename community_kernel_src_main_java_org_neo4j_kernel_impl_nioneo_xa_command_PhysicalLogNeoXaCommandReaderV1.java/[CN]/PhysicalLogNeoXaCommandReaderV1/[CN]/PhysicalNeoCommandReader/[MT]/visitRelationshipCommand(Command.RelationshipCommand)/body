{
  if (!readAndFlip(byteChannel,scratch,9)) {
    return false;
  }
  long id=scratch.getLong();
  byte inUseFlag=scratch.get();
  boolean inUse=false;
  if ((inUseFlag & Record.IN_USE.byteValue()) == Record.IN_USE.byteValue()) {
    inUse=true;
  }
 else   if ((inUseFlag & Record.IN_USE.byteValue()) != Record.NOT_IN_USE.byteValue()) {
    throw new IOException("Illegal in use flag: " + inUseFlag);
  }
  RelationshipRecord record;
  if (inUse) {
    if (!readAndFlip(byteChannel,scratch,61)) {
      return false;
    }
    record=new RelationshipRecord(id,scratch.getLong(),scratch.getLong(),scratch.getInt());
    record.setInUse(inUse);
    record.setFirstPrevRel(scratch.getLong());
    record.setFirstNextRel(scratch.getLong());
    record.setSecondPrevRel(scratch.getLong());
    record.setSecondNextRel(scratch.getLong());
    record.setNextProp(scratch.getLong());
    byte extraByte=scratch.get();
    record.setFirstInFirstChain((extraByte & 0x1) > 0);
    record.setFirstInSecondChain((extraByte & 0x2) > 0);
  }
 else {
    record=new RelationshipRecord(id,-1,-1,-1);
    record.setInUse(false);
  }
  command.init(record);
  return true;
}
