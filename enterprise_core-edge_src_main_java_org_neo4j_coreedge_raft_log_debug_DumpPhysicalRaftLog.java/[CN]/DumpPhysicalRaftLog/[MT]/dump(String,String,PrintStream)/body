{
  int logsFound=0;
  for (  String fileName : filenamesOf(filenameOrDirectory,logPrefix)) {
    logsFound++;
    out.println("=== " + fileName + " ===");
    StoreChannel fileChannel=fileSystem.open(new File(fileName),"r");
    LogHeader logHeader;
    try {
      logHeader=readLogHeader(ByteBuffer.allocateDirect(LOG_HEADER_SIZE),fileChannel,false);
    }
 catch (    IOException ex) {
      out.println("Unable to read timestamp information, no records in logical log.");
      out.println(ex.getMessage());
      fileChannel.close();
      throw ex;
    }
    out.println("Logical log format:" + logHeader.logFormatVersion + "version: "+ logHeader.logVersion+ " with prev committed tx["+ logHeader.lastCommittedTxId+ "]");
    PhysicalLogVersionedStoreChannel channel=new PhysicalLogVersionedStoreChannel(fileChannel,logHeader.logVersion,logHeader.logFormatVersion);
    ReadableLogChannel logChannel=new ReadAheadLogChannel(channel,NO_MORE_CHANNELS);
    try (PhysicalRaftLogEntryCursor cursor=new PhysicalRaftLogEntryCursor(new RaftRecordCursor<>(logChannel,marshal))){
      while (cursor.next()) {
        out.println(cursor.get().toString());
      }
    }
   }
  return logsFound;
}
