{
  newDb(2);
  Node node;
  Relationship rel1, rel2, rel3, rel4, rel5, rel6;
  try (Transaction tx=db.beginTx()){
    node=db.createNode();
    rel1=node.createRelationshipTo(db.createNode(),MyRelTypes.TEST);
    rel2=node.createRelationshipTo(db.createNode(),MyRelTypes.TEST);
    rel3=node.createRelationshipTo(db.createNode(),MyRelTypes.TEST);
    rel4=node.createRelationshipTo(db.createNode(),MyRelTypes.TEST2);
    rel5=node.createRelationshipTo(db.createNode(),MyRelTypes.TEST2);
    rel6=node.createRelationshipTo(db.createNode(),MyRelTypes.TEST2);
    tx.success();
  }
   NeoStore neoStore=db.getDependencyResolver().resolveDependency(XaDataSourceManager.class).getNeoStoreDataSource().getNeoStore();
  NodeStore nodeStore=neoStore.getNodeStore();
  NodeRecord nodeRecord=nodeStore.getRecord(node.getId());
  long group=nodeRecord.getNextRel();
  RelationshipGroupStore groupStore=neoStore.getRelationshipGroupStore();
  RelationshipGroupRecord groupRecord=groupStore.getRecord(group);
  assertFalse(groupRecord.getNext() == -1);
  assertRelationshipChain(neoStore.getRelationshipStore(),node,groupRecord.getFirstOut(),rel1.getId(),rel2.getId(),rel3.getId());
  RelationshipGroupRecord otherGroupRecord=groupStore.getRecord(groupRecord.getNext());
  assertEquals(-1,otherGroupRecord.getNext());
  assertRelationshipChain(neoStore.getRelationshipStore(),node,otherGroupRecord.getFirstOut(),rel4.getId(),rel5.getId(),rel6.getId());
}
