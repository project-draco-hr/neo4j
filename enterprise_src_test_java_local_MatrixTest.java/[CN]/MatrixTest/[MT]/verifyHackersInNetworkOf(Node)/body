{
  Traverser traverser=thomas.traverse(Order.BREADTH_FIRST,StopEvaluator.END_OF_GRAPH,new ReturnableEvaluator(){
    public boolean isReturnableNode(    TraversalPosition pos){
      return pos.notStartNode() && pos.lastRelationshipTraversed().isType(MatrixRelation.CODED_BY);
    }
  }
,MatrixRelation.CODED_BY,Direction.OUTGOING,MatrixRelation.KNOWS,Direction.OUTGOING);
  Map<String,Integer> actual=new HashMap<String,Integer>();
  for (  Node hacker : traverser) {
    Assert.assertNull("Same hacker found twice.",actual.put((String)hacker.getProperty("name"),traverser.currentPosition().depth()));
  }
  Assert.assertEquals("",new HashMap<String,Integer>(){
{
      put("The Architect",4);
    }
  }
,actual);
}
