def main():
    args = docopt(__doc__, version='Mordor 1.0')
    trello_key = args['--trellokey']
    trello_token = args['--trellotoken']
    config = load_config()
    if ((trello_key == 'None') or (trello_token == 'None')):
        if (config is None):
            print 'Please provide trello token and key options (via config or command line, see usage) if you want me to connect to Trello.'
            exit(1)
        else:
            trello_key = config.trello_api_key
            trello_token = config.trello_user_token
    trello = TrelloClient(trello_key, trello_token)
    if args['trello']:
        if args['boards']:
            list_boards(trello)
        elif args['lists']:
            if args.has_key('<board_id>'):
                list_lists(trello, args['<board_id>'])
            else:
                list_lists(trello)
    elif args['mordor']:
        if (args.has_key('<mordor_board_id>') and (args['<mordor_board_id>'] != None)):
            mordor_board = args['<mordor_board_id>']
            track_lists = args['<track_list_id>']
        elif hasattr(config, 'mordor'):
            mordor_board = config.mordor.board
            track_lists = config.mordor.lists
        else:
            print 'Please provide mordor config (mordor board and lists to track) either on the command line or in .mordor config file'
            exit(1)
        refresh_mordor(trello, mordor_board, track_lists)
    elif args['deprecations']:
        if args['after']:
            for (filename, line) in list_deprecated_after(args['<git_tag>']):
                print '{0}:{1}'.format(filename, line)
        elif args['before']:
            for (filename, line) in list_deprecated_before(args['<git_tag>']):
                print '{0}:{1}'.format(filename, line)
        elif args['removed']:
            list_removed_deprecations_between(args['<one_git_tag>'], args['<second_git_tag>'])
        else:
            update_deprecated_card(trello, 2, args['<github_repo_url>'], args['<board_id>'], args['<list_id>'])
