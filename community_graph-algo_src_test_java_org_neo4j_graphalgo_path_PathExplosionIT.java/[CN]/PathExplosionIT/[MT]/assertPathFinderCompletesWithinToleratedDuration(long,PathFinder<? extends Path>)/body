{
  for (int pathWidth=MIN_PATH_WIDTH; pathWidth <= MAX_PATH_WIDTH; pathWidth++) {
    for (int pathLength=MIN_PATH_LENGTH; pathLength <= MAX_PATH_LENGTH; pathLength++) {
      FileUtils.deleteRecursively(testDir.directory());
      GraphDatabaseService db=new TestGraphDatabaseFactory().newImpermanentDatabase();
      try {
        long[] startEndNodeIds=createPathGraphAndReturnStartAndEnd(pathLength,pathWidth,db);
        long runTime=findPath(startEndNodeIds[0],startEndNodeIds[1],db,pathFinder,WARMUP_RUNS);
        System.out.println(String.format("Runtime[pathWidth:%s, pathLength:%s] = %s",pathWidth,pathLength,runTime));
        assertTrue(runTime < toleratedRuntime);
      }
  finally {
        db.shutdown();
      }
    }
  }
}
