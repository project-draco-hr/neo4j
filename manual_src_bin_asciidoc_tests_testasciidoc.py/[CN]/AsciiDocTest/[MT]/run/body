def run(self, backend=None):
    '\n        Execute test.\n        Return True if test passes.\n        '
    if (backend is None):
        backends = self.backends
    else:
        backends = [backend]
    result = True
    self.passed = self.failed = self.skipped = 0
    print ('%d: %s' % (self.number, self.title))
    if (self.source and os.path.isfile(self.source)):
        print ('SOURCE: asciidoc: %s' % self.source)
        for backend in backends:
            fromfile = self.backend_filename(backend)
            if (not self.is_missing(backend)):
                expected = self.get_expected(backend)
                strip_end(expected)
                got = self.generate_expected(backend)
                strip_end(got)
                lines = []
                for line in difflib.unified_diff(got, expected, n=0):
                    lines.append(line)
                if lines:
                    result = False
                    self.failed += 1
                    lines = lines[3:]
                    print ('FAILED: %s: %s' % (backend, fromfile))
                    message(('+++ %s' % fromfile))
                    message('--- got')
                    for line in lines:
                        message(line)
                    message()
                else:
                    self.passed += 1
                    print ('PASSED: %s: %s' % (backend, fromfile))
            else:
                self.skipped += 1
                print ('SKIPPED: %s: %s' % (backend, fromfile))
    else:
        self.skipped += len(backends)
        if self.source:
            msg = ('MISSING: %s' % self.source)
        else:
            msg = 'NO ASCIIDOC SOURCE FILE SPECIFIED'
        print msg
    print ''
    return result
