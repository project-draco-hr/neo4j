def parse(self, lines, confdir, datadir):
    '\n        Parse conf file test section from list of text lines.\n        '
    self.__init__()
    self.confdir = confdir
    self.datadir = datadir
    lines = Lines(lines)
    while (not lines.eol()):
        l = lines.read_until('^%')
        if l:
            if (not l[0].startswith('%')):
                if (l[0][0] == '!'):
                    self.disabled = True
                    self.title = l[0][1:]
                else:
                    self.title = l[0]
                self.description = l[1:]
                continue
            reo = re.match('^%\\s*(?P<directive>[\\w_-]+)', l[0])
            if (not reo):
                raise (ValueError, ('illegal directive: %s' % l[0]))
            directive = reo.groupdict()['directive']
            data = normalize_data(l[1:])
            if (directive == 'source'):
                if data:
                    self.source = os.path.normpath(os.path.join(self.confdir, os.path.normpath(data[0])))
            elif (directive == 'options'):
                self.options = eval(' '.join(data))
                for (i, v) in enumerate(self.options):
                    if isinstance(v, basestring):
                        self.options[i] = (v, None)
            elif (directive == 'attributes'):
                self.attributes = eval(' '.join(data))
            elif (directive == 'backends'):
                self.backends = eval(' '.join(data))
            elif (directive == 'name'):
                self.name = data[0].strip()
            else:
                raise (ValueError, ('illegal directive: %s' % l[0]))
    if (not self.title):
        self.title = self.source
    if (not self.name):
        self.name = os.path.basename(os.path.splitext(self.source)[0])
