{
  executor=Executors.newCachedThreadPool();
  startLogRotationLatch=new CountDownLatch(1);
  completeLogRotationLatch=new CountDownLatch(1);
  writerStopped=new AtomicBoolean();
  monitors=db.getDependencyResolver().resolveDependency(Monitors.class);
  rotationListener=new LogRotation.Monitor(){
    @Override public void startedRotating(    long currentVersion){
      startLogRotationLatch.countDown();
      try {
        completeLogRotationLatch.await();
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
    @Override public void finishedRotating(    long currentVersion){
    }
  }
;
  monitors.addMonitorListener(rotationListener);
  label=Label.label("Label");
  rotationFuture=t2.execute(forceLogRotation(db));
  startLogRotationLatch.await();
}
