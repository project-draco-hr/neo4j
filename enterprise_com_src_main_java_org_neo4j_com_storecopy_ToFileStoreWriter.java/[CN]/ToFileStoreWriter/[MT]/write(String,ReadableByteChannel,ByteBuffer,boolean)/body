{
  try {
    temporaryBuffer.clear();
    File file=new File(basePath,path);
    file.getParentFile().mkdirs();
    String filename=file.getName();
    final Optional<StoreType> storeType=isStoreType(filename);
    final Optional<PagedFile> existingMapping=pageCache.getExistingMapping(file);
    monitor.startReceivingStoreFile(file);
    try {
      if (existingMapping.isPresent()) {
        try (PagedFile pagedFile=existingMapping.get()){
          return writeDataThroughPageCache(file,data,temporaryBuffer,hasData,pagedFile);
        }
       }
 else       if (storeType.isPresent() && storeType.get().isRecordStore()) {
        try (PagedFile pagedFile=pageCache.map(file,pageCache.pageSize(),CREATE,WRITE)){
          return writeDataThroughPageCache(file,data,temporaryBuffer,hasData,pagedFile);
        }
       }
 else {
        return writeDataThroughFileSystem(file,data,temporaryBuffer,hasData);
      }
    }
  finally {
      monitor.finishReceivingStoreFile(file);
    }
  }
 catch (  Throwable t) {
    throw new IOException(t);
  }
}
