{
  if (nodes == null || nodes.length == 0) {
    throw new IllegalArgumentException("No nodes supplied");
  }
  final PatternNode requested=new PatternNode();
  PatternNode anchor=null;
  for (  Node node : nodes) {
    PatternNode pattern=new PatternNode();
    pattern.setAssociation(node);
    pattern.createRelationshipTo(requested,type);
    if (anchor == null) {
      anchor=pattern;
    }
  }
  PatternMatcher matcher=PatternMatcher.getMatcher();
  Iterable<PatternMatch> matches=matcher.match(anchor,nodes[0]);
  return new IterableWrapper<Node,PatternMatch>(matches){
    @Override protected Node underlyingObjectToObject(    PatternMatch match){
      return match.getNodeFor(requested);
    }
  }
;
}
