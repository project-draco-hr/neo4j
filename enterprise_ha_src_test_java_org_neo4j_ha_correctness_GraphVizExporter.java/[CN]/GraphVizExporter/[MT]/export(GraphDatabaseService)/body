{
  FileOutputStream stream=new FileOutputStream(target);
  PrintWriter out=new PrintWriter(stream);
  out.println("digraph G {");
  out.println("    rankdir=LR;");
  try (Transaction tx=db.beginTx()){
    Set<Node> seen=new HashSet<>();
    Queue<Node> toExplore=new LinkedList<>();
    toExplore.add(db.getNodeById(0));
    while (toExplore.size() > 0) {
      Node current=toExplore.poll();
      out.println("    " + current.getId() + " [shape=box,label=\""+ current.getProperty("description")+ "\"];");
      for (      Relationship relationship : current.getRelationships()) {
        out.println("    " + current.getId() + " -> "+ relationship.getEndNode().getId()+ " [label=\""+ relationship.getProperty("description")+ "\"];");
        if (!seen.contains(relationship.getEndNode())) {
          toExplore.offer(relationship.getEndNode());
          seen.add(relationship.getEndNode());
        }
      }
    }
    tx.success();
  }
   out.println("}");
  out.flush();
  stream.close();
}
