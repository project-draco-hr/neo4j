{
  assumeTrue(machineIsOkToRunThisTest(requiredHeapMb));
  Node refNode=createReferenceNode(db);
  setHighIds(startId - 1000);
  byte[] bytes=new byte[45];
  bytes[2]=5;
  bytes[10]=42;
  Map<String,Object> properties=map("number",11,"short string","test","long string","This is a long value, long enough","array",bytes);
  Transaction tx=db.beginTx();
  int count=10000;
  for (int i=0; i < count; i++) {
    Node node=db.createNode();
    setProperties(node,properties);
    Relationship rel1=refNode.createRelationshipTo(node,this);
    setProperties(rel1,properties);
    Node highNode=db.createNode();
    Relationship rel2=node.createRelationshipTo(highNode,OTHER_TYPE);
    setProperties(rel2,properties);
    setProperties(highNode,properties);
    if (i % 100 == 0 && i > 0) {
      tx.success();
      tx.close();
      tx=db.beginTx();
    }
  }
  tx.success();
  tx.close();
  db=dbRule.restartDatabase();
  int verified=0;
  try (Transaction transaction=db.beginTx()){
    refNode=db.getNodeById(refNode.getId());
    for (    Relationship rel : refNode.getRelationships(Direction.OUTGOING)) {
      Node node=rel.getEndNode();
      assertProperties(properties,node);
      assertProperties(properties,rel);
      Node highNode=node.getSingleRelationship(OTHER_TYPE,Direction.OUTGOING).getEndNode();
      assertProperties(properties,highNode);
      verified++;
    }
    transaction.success();
  }
   assertEquals(count,verified);
}
