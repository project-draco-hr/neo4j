{
  for (  long nodeId : element.nodes.keySet()) {
    CowNodeElement nodeElement=element.nodes.get(nodeId);
    NodeProxy node=new NodeProxy(nodeId,nodeManager);
    NodeImpl nodeImpl=nodeManager.getNodeForProxy(nodeId);
    if (nodeElement.deleted) {
      if (nodeManager.nodeCreated(nodeId)) {
        continue;
      }
      result.deleted(node);
    }
    if (nodeElement.relationshipAddMap != null && !nodeElement.deleted) {
      for (      String type : nodeElement.relationshipAddMap.keySet()) {
        RelIdArray createdRels=nodeElement.relationshipAddMap.get(type);
        populateNodeRelEvent(element,result,nodeId,createdRels);
      }
    }
    if (nodeElement.relationshipRemoveMap != null) {
      for (      String type : nodeElement.relationshipRemoveMap.keySet()) {
        RelIdArray deletedRels=nodeElement.relationshipRemoveMap.get(type);
        for (RelIdIterator iterator=deletedRels.iterator(DirectionWrapper.BOTH); iterator.hasNext(); ) {
          long relId=iterator.next();
          if (nodeManager.relCreated(relId)) {
            continue;
          }
          RelationshipProxy rel=new RelationshipProxy(relId,nodeManager);
          if (rel.getStartNode().getId() == nodeId) {
            result.deleted(new RelationshipProxy(relId,nodeManager));
          }
        }
      }
    }
    if (nodeElement.propertyAddMap != null && !nodeElement.deleted) {
      for (      PropertyData data : nodeElement.propertyAddMap.values()) {
        String key=nodeManager.getKeyForProperty(data.getId());
        Object oldValue=nodeImpl.getCommittedPropertyValue(nodeManager,key);
        Object newValue=data.getValue();
        result.assignedProperty(node,key,newValue,oldValue);
      }
    }
    if (nodeElement.propertyRemoveMap != null) {
      for (      PropertyData data : nodeElement.propertyRemoveMap.values()) {
        String key=nodeManager.getKeyForProperty(data.getId());
        Object oldValue=data.getValue();
        if (oldValue == null && !nodeElement.deleted) {
          nodeImpl.getCommittedPropertyValue(nodeManager,key);
        }
        result.removedProperty(node,key,oldValue);
      }
    }
  }
}
