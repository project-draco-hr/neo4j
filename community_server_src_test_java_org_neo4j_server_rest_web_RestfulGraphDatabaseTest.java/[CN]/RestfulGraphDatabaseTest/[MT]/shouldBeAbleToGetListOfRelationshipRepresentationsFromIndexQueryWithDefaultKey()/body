{
  String key="key_get";
  String value="value";
  long startNodeId=helper.createNode();
  long endNodeId=helper.createNode();
  String relationshipType1="KNOWS";
  long relationshipId1=helper.createRelationship(relationshipType1,startNodeId,endNodeId);
  String relationshipType2="PLAYS-NICE-WITH";
  long relationshipId2=helper.createRelationship(relationshipType2,startNodeId,endNodeId);
  String indexName="matrixal-relationships";
  helper.createRelationshipIndex(indexName);
  helper.addRelationshipToIndex(indexName,key,value,relationshipId1);
  helper.addRelationshipToIndex(indexName,key,value,relationshipId2);
  Response response=service.getIndexedRelationshipsByQuery(indexName,key,value.substring(0,1) + "*","");
  assertEquals(Status.OK.getStatusCode(),response.getStatus());
  Collection<?> items=(Collection<?>)JsonHelper.readJson(entityAsString(response));
  int counter=0;
  for (  Object item : items) {
    Map<?,?> map=(Map<?,?>)item;
    String indexedUri=(String)map.get("indexed");
    assertNull(indexedUri);
    String selfUri=(String)map.get("self");
    assertNotNull(selfUri);
    assertTrue(selfUri.endsWith(Long.toString(relationshipId1)) || selfUri.endsWith(Long.toString(relationshipId2)));
    counter++;
  }
  assertThat(counter,is(greaterThanOrEqualTo(2)));
}
