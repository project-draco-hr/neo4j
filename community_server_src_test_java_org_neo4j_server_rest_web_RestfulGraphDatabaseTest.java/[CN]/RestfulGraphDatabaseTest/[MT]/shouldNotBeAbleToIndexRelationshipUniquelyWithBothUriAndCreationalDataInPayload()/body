{
  URI start=(URI)service.createNode(null).getMetadata().getFirst("Location");
  URI end=(URI)service.createNode(null).getMetadata().getFirst("Location");
  String path=start.getPath();
  URI rel=(URI)service.createRelationship(parseLong(path.substring(path.lastIndexOf('/') + 1)),"{\"to\":\"" + end + "\",\"type\":\"knows\"}").getMetadata().getFirst("Location");
  Map<String,Object> unwanted=new HashMap<>();
  unwanted.put("properties",new HashMap());
  unwanted.put("start",start.toString());
  unwanted.put("end",end.toString());
  unwanted.put("type","friend");
  for (  Map.Entry<String,Object> bad : unwanted.entrySet()) {
    Map<String,Object> postBody=new HashMap<>();
    postBody.put("key","mykey");
    postBody.put("value","my/key");
    postBody.put("uri",rel.toString());
    postBody.put(bad.getKey(),bad.getValue());
    Response response=service.addToRelationshipIndex("unique-relationships","","",JsonHelper.createJsonFrom(postBody));
    assertEquals("unexpected response code with \"" + bad.getKey() + "\".",400,response.getStatus());
  }
}
