{
  long nodeId=helper.createNode();
  helper.createRelationship("LIKES",nodeId,helper.createNode());
  helper.createRelationship("LIKES",helper.createNode(),nodeId);
  helper.createRelationship("HATES",nodeId,helper.createNode());
  Response response=service.getNodeRelationships(nodeId,RelationshipDirection.all,new AmpersandSeparatedCollection(""));
  assertEquals(200,response.getStatus());
  checkContentTypeCharsetUtf8(response);
  verifyRelReps(3,entityAsString(response));
  response=service.getNodeRelationships(nodeId,RelationshipDirection.in,new AmpersandSeparatedCollection(""));
  assertEquals(200,response.getStatus());
  verifyRelReps(1,entityAsString(response));
  response=service.getNodeRelationships(nodeId,RelationshipDirection.out,new AmpersandSeparatedCollection(""));
  assertEquals(200,response.getStatus());
  verifyRelReps(2,entityAsString(response));
  response=service.getNodeRelationships(nodeId,RelationshipDirection.out,new AmpersandSeparatedCollection("LIKES&HATES"));
  assertEquals(200,response.getStatus());
  verifyRelReps(2,entityAsString(response));
  response=service.getNodeRelationships(nodeId,RelationshipDirection.all,new AmpersandSeparatedCollection("LIKES"));
  assertEquals(200,response.getStatus());
  verifyRelReps(2,entityAsString(response));
}
