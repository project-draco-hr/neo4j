{
  try {
    DuplicateCheckingCollector collector=new DuplicateCheckingCollector(accessor,propKeyId);
    IndexSearcher searcher=indexSearcher();
    for (    LeafReaderContext leafReaderContext : searcher.getIndexReader().leaves()) {
      Fields fields=leafReaderContext.reader().fields();
      for (      String field : fields) {
        if (LuceneDocumentStructure.NODE_ID_KEY.equals(field)) {
          continue;
        }
        TermsEnum terms=fields.terms(field).iterator();
        BytesRef termsRef;
        while ((termsRef=terms.next()) != null) {
          if (terms.docFreq() > 1) {
            collector.reset();
            searcher.search(new TermQuery(new Term(field,termsRef)),collector);
          }
        }
      }
    }
  }
 catch (  IOException e) {
    Throwable cause=e.getCause();
    if (cause instanceof IndexEntryConflictException) {
      throw (IndexEntryConflictException)cause;
    }
    throw e;
  }
}
