{
  if (op1 == null || op2 == null) {
    return null;
  }
  if (op1 instanceof String || op2 instanceof String) {
    return String.valueOf(op1) + String.valueOf(op2);
  }
  Class<?> op1Class=op1.getClass();
  Class<?> op2Class=op2.getClass();
  if (op1Class.isArray() && op2Class.isArray()) {
    return addArrays(op1,op2);
  }
 else   if (op1Class.isArray()) {
    return addArrayWithObject(op1,op2);
  }
 else   if (op2Class.isArray()) {
    return addObjectWithArray(op1,op2);
  }
  if (!(op1 instanceof Number) || !(op2 instanceof Number)) {
    throw new CypherTypeException("Cannot add " + op1.getClass().getSimpleName() + " and "+ op2.getClass().getSimpleName(),null);
  }
  if (op1 instanceof Long || op2 instanceof Long) {
    return ((Number)op1).longValue() + ((Number)op2).longValue();
  }
  if (op1 instanceof Double || op2 instanceof Double) {
    return ((Number)op1).doubleValue() + ((Number)op2).doubleValue();
  }
  if (op1 instanceof Float || op2 instanceof Float) {
    return ((Number)op1).floatValue() + ((Number)op2).floatValue();
  }
  if (op1 instanceof Integer || op2 instanceof Integer) {
    return ((Number)op1).intValue() + ((Number)op2).intValue();
  }
  throw new CypherTypeException("Cannot add " + op1.getClass().getSimpleName() + " and "+ op2.getClass().getSimpleName(),null);
}
