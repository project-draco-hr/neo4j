{
  CachedNodeEntity cachedNode=new CachedNodeEntity(nodeId);
  Set<Long> initialLabels=new HashSet<Long>(asList(1L,2L,3L));
  cachedNode.addLabels(initialLabels);
  when(loader.loadById(nodeId)).thenReturn(cachedNode);
  @SuppressWarnings("unchecked") DiffSets<Long> diff=mock(DiffSets.class);
  when(diff.getAdded()).thenReturn(initialLabels);
  when(state.getNodeStateLabelDiffSets(nodeId)).thenReturn(diff);
  Set<Long> removedLabels=new HashSet<Long>(asList(2L));
  nodeState.getLabelDiffSets().removeAll(removedLabels.iterator());
  when(state.getNodeStates()).thenReturn(asList(nodeState));
  cache.getLabels(nodeId);
  cache.apply(state);
  Set<Long> expectedLabels=new HashSet<Long>(initialLabels);
  expectedLabels.removeAll(removedLabels);
  assertEquals(expectedLabels,cache.getLabels(nodeId));
}
