{
  long nodeId=5;
  LockStripedCache.Loader<PersistenceCache.CachedNodeEntity> loader=mock(LockStripedCache.Loader.class);
  PersistenceCache.CachedNodeEntity cachedNode=new PersistenceCache.CachedNodeEntity(nodeId);
  Set<Long> initialLabels=new HashSet<Long>(asList(1L,2L,3L));
  cachedNode.addLabels(initialLabels);
  when(loader.loadById(nodeId)).thenReturn(cachedNode);
  PersistenceCache cache=new PersistenceCache(loader);
  TxState state=mock(TxState.class);
  when(state.getAddedLabels(eq(nodeId),anyBoolean())).thenReturn(initialLabels);
  TxState.NodeState nodeState=new TxState.NodeState(nodeId);
  Set<Long> removedLabels=new HashSet<Long>(asList(2L));
  nodeState.getRemovedLabels().addAll(removedLabels);
  when(state.getNodes()).thenReturn(asList(nodeState));
  cache.getLabels(nodeId);
  cache.apply(state);
  Set<Long> expectedLabels=new HashSet<Long>(initialLabels);
  expectedLabels.removeAll(removedLabels);
  assertEquals(expectedLabels,cache.getLabels(nodeId));
}
