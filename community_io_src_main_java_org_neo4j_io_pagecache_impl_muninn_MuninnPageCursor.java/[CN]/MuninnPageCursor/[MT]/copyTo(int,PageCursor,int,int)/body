{
  int sourcePageSize=getCurrentPageSize();
  int targetPageSize=targetCursor.getCurrentPageSize();
  if (targetCursor.getClass() == MuninnWritePageCursor.class & sourceOffset >= 0 & targetOffset >= 0 & sourceOffset < sourcePageSize & targetOffset < targetPageSize & lengthInBytes > 0) {
    MuninnPageCursor cursor=(MuninnPageCursor)targetCursor;
    int remainingSource=sourcePageSize - sourceOffset;
    int remainingTarget=targetPageSize - targetOffset;
    int bytes=Math.min(lengthInBytes,Math.min(remainingSource,remainingTarget));
    UnsafeUtil.copyMemory(pointer + sourceOffset,cursor.pointer + targetOffset,bytes);
    return bytes;
  }
  return illegalCopyToArgs(sourceOffset,sourcePageSize,targetOffset,targetPageSize,lengthInBytes);
}
