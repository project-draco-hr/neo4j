{
  if (req instanceof HttpServletRequest && res instanceof HttpServletResponse) {
    HttpServletRequest request=(HttpServletRequest)req;
    HttpServletResponse response=(HttpServletResponse)res;
    int timeLimit=getTimeLimit(request);
    if (timeLimit <= 0) {
      chain.doFilter(req,res);
    }
 else {
      final long valid=currentTimeMillis() + timeLimit;
      guard.startTimeout(valid);
      final TimerTask timerTask=new TimerTask(){
        @Override public void run(){
          LOG.warn("request canceled");
          LOG.error("TODO: restarting the server is not proper implemented, request was not canceled");
        }
      }
;
      timer.schedule(timerTask,valid + 5000);
      try {
        chain.doFilter(req,res);
      }
 catch (      GuardException e) {
        response.setStatus(SC_REQUEST_TIMEOUT);
      }
 finally {
        timerTask.cancel();
        guard.stop();
      }
    }
  }
 else {
    chain.doFilter(req,res);
  }
}
