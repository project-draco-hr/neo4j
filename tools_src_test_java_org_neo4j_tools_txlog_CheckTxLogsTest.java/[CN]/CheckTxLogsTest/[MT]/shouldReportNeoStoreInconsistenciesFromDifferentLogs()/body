{
  File log1=logFile(1);
  File log2=logFile(2);
  File log3=logFile(3);
  writeTxContent(log1,0,new Command.NeoStoreCommand(new NeoStoreRecord(),createNeoStoreRecord(42)),new Command.PropertyCommand(propertyRecord(5,false,-1,-1),propertyRecord(5,true,-1,-1,777)),new Command.NeoStoreCommand(createNeoStoreRecord(42),createNeoStoreRecord(21)));
  writeTxContent(log2,0,new Command.NeoStoreCommand(createNeoStoreRecord(12),createNeoStoreRecord(21)));
  writeTxContent(log3,0,new Command.NeoStoreCommand(createNeoStoreRecord(13),createNeoStoreRecord(21)));
  CapturingInconsistenciesHandler handler=new CapturingInconsistenciesHandler();
  CheckTxLogs checker=new CheckTxLogs(fsRule.get());
  checker.scan(new File[]{log1,log2,log3},handler,NEO_STORE);
  assertEquals(2,handler.recordInconsistencies.size());
  NeoStoreRecord seenRecord1=(NeoStoreRecord)handler.recordInconsistencies.get(0).committed.record();
  NeoStoreRecord currentRecord1=(NeoStoreRecord)handler.recordInconsistencies.get(0).current.record();
  assertEquals(21,seenRecord1.getNextProp());
  assertEquals(12,currentRecord1.getNextProp());
  NeoStoreRecord seenRecord2=(NeoStoreRecord)handler.recordInconsistencies.get(1).committed.record();
  NeoStoreRecord currentRecord2=(NeoStoreRecord)handler.recordInconsistencies.get(1).current.record();
  assertEquals(21,seenRecord2.getNextProp());
  assertEquals(13,currentRecord2.getNextProp());
}
