{
  File log1=logFile(1);
  File log2=logFile(2);
  File log3=logFile(3);
  writeTxContent(log1,new Command.NodeCommand(new NodeRecord(42,false,false,-1,-1,1),new NodeRecord(42,true,false,42,-1,1)),new Command.PropertyCommand(propertyRecord(5,true,-1,-1,777),propertyRecord(5,true,-1,-1,777,888)),new Command.NodeCommand(new NodeRecord(1,true,true,2,-1,1),new NodeRecord(1,true,false,-1,-1,1)));
  writeTxContent(log2,new Command.NodeCommand(new NodeRecord(2,false,false,-1,-1,1),new NodeRecord(2,true,false,-1,-1,1)));
  writeTxContent(log3,new Command.NodeCommand(new NodeRecord(42,true,true,42,-1,1),new NodeRecord(42,true,true,42,10,1)),new Command.NodeCommand(new NodeRecord(2,true,false,-1,-1,5),new NodeRecord(2,false,false,-1,-1,5)));
  CapturingInconsistenciesHandler handler=new CapturingInconsistenciesHandler();
  CheckTxLogs checker=new CheckTxLogs(fsRule.get());
  checker.scan(new File[]{log1,log2,log3},handler,NODE);
  assertEquals(2,handler.inconsistencies.size());
  NodeRecord seenRecord1=(NodeRecord)handler.inconsistencies.get(0).committed.record();
  NodeRecord currentRecord1=(NodeRecord)handler.inconsistencies.get(0).current.record();
  assertEquals(42,seenRecord1.getId());
  assertFalse(seenRecord1.isDense());
  assertEquals(42,currentRecord1.getId());
  assertTrue(currentRecord1.isDense());
  NodeRecord seenRecord2=(NodeRecord)handler.inconsistencies.get(1).committed.record();
  NodeRecord currentRecord2=(NodeRecord)handler.inconsistencies.get(1).current.record();
  assertEquals(2,seenRecord2.getId());
  assertEquals(1,seenRecord2.getLabelField());
  assertEquals(2,currentRecord2.getId());
  assertEquals(5,currentRecord2.getLabelField());
}
