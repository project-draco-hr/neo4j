{
  File log=logFile(1);
  writeTxContent(log,new Command.RelationshipCommand(new RelationshipRecord(42,false,-1,-1,-1,-1,-1,-1,-1,false,false),new RelationshipRecord(42,true,1,2,3,4,5,6,7,true,true)),new Command.PropertyCommand(propertyRecord(5,false,-1,-1),propertyRecord(5,true,-1,-1,777)),new Command.RelationshipCommand(new RelationshipRecord(21,true,1,2,3,4,5,6,7,true,true),new RelationshipRecord(21,false,-1,-1,-1,-1,-1,-1,-1,false,false)));
  writeTxContent(log,new Command.RelationshipCommand(new RelationshipRecord(53,true,1,2,3,4,5,6,7,true,true),new RelationshipRecord(53,true,1,2,30,4,14,6,7,true,true)),new Command.RelationshipCommand(new RelationshipRecord(42,true,1,2,3,9,5,6,7,true,true),new RelationshipRecord(42,true,1,2,3,4,5,6,7,true,true)));
  CapturingInconsistenciesHandler handler=new CapturingInconsistenciesHandler();
  CheckTxLogs checker=new CheckTxLogs(fsRule.get());
  checker.scan(new File[]{log},handler,RELATIONSHIP);
  assertEquals(1,handler.inconsistencies.size());
  RelationshipRecord seenRecord=(RelationshipRecord)handler.inconsistencies.get(0).committed.record();
  RelationshipRecord currentRecord=(RelationshipRecord)handler.inconsistencies.get(0).current.record();
  assertEquals(42,seenRecord.getId());
  assertEquals(4,seenRecord.getFirstPrevRel());
  assertEquals(42,currentRecord.getId());
  assertEquals(9,currentRecord.getFirstPrevRel());
}
