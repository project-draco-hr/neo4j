{
  long startPageId=pageIdForRecord(0);
  long currentPageId=startPageId;
  long endPageId=pageIdForRecord(getHighestPossibleIdInUse());
  long currentRecordId=0;
  NodeRecord record=new NodeRecord(-1);
  int recordsPerPage=storeFile.pageSize() / getRecordSize();
  try (PageCursor cursor=storeFile.io(startPageId,PF_SHARED_READ_LOCK | PF_READ_AHEAD)){
    while (currentPageId <= endPageId && cursor.next()) {
      for (int i=0; i < recordsPerPage; i++) {
        record.setId(currentRecordId);
        int offset=offsetForId(currentRecordId);
        do {
          cursor.setOffset(offset);
          byte inUseByte=cursor.getByte();
          boolean isInUse=isInUse(inUseByte);
          readIntoRecord(cursor,record,inUseByte,isInUse);
        }
 while (cursor.shouldRetry());
        if (record.inUse()) {
          if (visitor.visit(record)) {
            return;
          }
        }
        currentRecordId++;
      }
      currentPageId++;
    }
  }
 }
