{
  @SuppressWarnings("deprecation") final GraphDatabaseAPI db=(GraphDatabaseAPI)dbBuilder.newGraphDatabase();
  try (Transaction tx=db.beginTx()){
    db.createNode(DynamicLabel.label("A"));
    db.createNode(DynamicLabel.label("C"));
    Node node=db.createNode(DynamicLabel.label("D"));
    db.createNode();
    node.delete();
    tx.success();
  }
   final CountsRecordState countsState=CountsComputer.computeCounts(db);
  long lastCommittedTransactionId=getLastTxId(db);
  db.shutdown();
  cleanupCountsForRebuilding();
  rebuildCounts(countsState,lastCommittedTransactionId);
  try (Lifespan life=new Lifespan()){
    CountsTracker store=life.add(new CountsTracker(StringLogger.DEV_NULL,fs,pageCache,new File(dir,COUNTS_STORE_BASE)));
    assertEquals(BASE_TX_ID + 1 + 1+ 1+ 1,store.txId());
    assertEquals(3,store.totalEntriesStored());
    assertEquals(3,get(store,nodeKey(-1)));
    assertEquals(1,get(store,nodeKey(0)));
    assertEquals(1,get(store,nodeKey(1)));
    assertEquals(0,get(store,nodeKey(2)));
    assertEquals(0,get(store,nodeKey(3)));
  }
 }
