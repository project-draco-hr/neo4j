{
  final GraphDatabaseAPI db=(GraphDatabaseAPI)dbBuilder.newGraphDatabase();
  try (Transaction tx=db.beginTx()){
    db.createNode(DynamicLabel.label("A"));
    db.createNode(DynamicLabel.label("C"));
    db.createNode(DynamicLabel.label("D"));
    db.createNode();
    tx.success();
  }
   final CountsState countsState=CountsComputer.computeCounts(db);
  long lastCommittedTransactionId=getLastTxId(db);
  db.shutdown();
  cleanupCountsForRebuilding();
  rebuildCounts(countsState,lastCommittedTransactionId);
  try (CountsStore store=CountsStore.open(fs,pageCache,betaStoreFile())){
    assertEquals(BASE_TX_ID + 1 + 1+ 1+ 1,store.lastTxId());
    assertEquals(4,store.totalRecordsStored());
    assertEquals(4,store.get(CountsKey.nodeKey(-1)));
    assertEquals(1,store.get(CountsKey.nodeKey(0)));
    assertEquals(1,store.get(CountsKey.nodeKey(1)));
    assertEquals(1,store.get(CountsKey.nodeKey(2)));
    assertEquals(0,store.get(CountsKey.nodeKey(3)));
  }
 }
