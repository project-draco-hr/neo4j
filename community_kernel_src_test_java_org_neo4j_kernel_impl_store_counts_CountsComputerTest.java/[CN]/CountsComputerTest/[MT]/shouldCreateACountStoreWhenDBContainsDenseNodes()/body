{
  @SuppressWarnings("deprecation") final GraphDatabaseAPI db=(GraphDatabaseAPI)dbBuilder.setConfig(GraphDatabaseSettings.dense_node_threshold,"2").newGraphDatabase();
  try (Transaction tx=db.beginTx()){
    Node nodeA=db.createNode(Label.label("A"));
    Node nodeC=db.createNode(Label.label("C"));
    Node nodeD=db.createNode(Label.label("D"));
    nodeA.createRelationshipTo(nodeA,RelationshipType.withName("TYPE1"));
    nodeA.createRelationshipTo(nodeC,RelationshipType.withName("TYPE2"));
    nodeA.createRelationshipTo(nodeD,RelationshipType.withName("TYPE3"));
    nodeD.createRelationshipTo(nodeC,RelationshipType.withName("TYPE4"));
    tx.success();
  }
   long lastCommittedTransactionId=getLastTxId(db);
  db.shutdown();
  rebuildCounts(lastCommittedTransactionId);
  try (Lifespan life=new Lifespan()){
    CountsTracker store=life.add(createCountsTracker());
    assertEquals(BASE_TX_ID + 1 + 1+ 1+ 1+ 1+ 1+ 1+ 1,store.txId());
    assertEquals(22,store.totalEntriesStored());
    assertEquals(3,get(store,nodeKey(-1)));
    assertEquals(1,get(store,nodeKey(0)));
    assertEquals(1,get(store,nodeKey(1)));
    assertEquals(1,get(store,nodeKey(2)));
    assertEquals(0,get(store,nodeKey(3)));
    assertEquals(4,get(store,relationshipKey(-1,-1,-1)));
    assertEquals(1,get(store,relationshipKey(-1,0,-1)));
    assertEquals(1,get(store,relationshipKey(-1,1,-1)));
    assertEquals(1,get(store,relationshipKey(-1,2,-1)));
    assertEquals(1,get(store,relationshipKey(-1,3,-1)));
    assertEquals(0,get(store,relationshipKey(-1,4,-1)));
    assertEquals(1,get(store,relationshipKey(-1,1,1)));
    assertEquals(2,get(store,relationshipKey(-1,-1,1)));
    assertEquals(3,get(store,relationshipKey(0,-1,-1)));
  }
 }
