{
  lockGroup.add(lockService.acquireNodeLock(command.getKey(),LockService.LockType.WRITE_LOCK));
  NodeStore nodeStore=neoStore.getNodeStore();
  highIdTracker.track(nodeStore,command.getAfter().getId());
  nodeStore.updateRecord(command.getAfter());
  Collection<DynamicRecord> toUpdate=new ArrayList<>(command.getAfter().getDynamicLabelRecords());
  Set<Long> idsToRemove=new HashSet<>();
  for (  DynamicRecord record : command.getBefore().getDynamicLabelRecords()) {
    idsToRemove.add(record.getId());
  }
  for (  DynamicRecord record : command.getAfter().getDynamicLabelRecords()) {
    idsToRemove.remove(record.getId());
  }
  for (  long id : idsToRemove) {
    toUpdate.add(new DynamicRecord(id));
  }
  trackHighIds(nodeStore.getDynamicLabelStore(),toUpdate);
  nodeStore.updateDynamicLabelRecords(toUpdate);
  invalidateCache(command,nodeHasBeenUpgradedToDense(command));
  return true;
}
