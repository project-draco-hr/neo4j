{
  long startNode=helper.createNode();
  long child1_l1=helper.createNode();
  helper.createRelationship("knows",startNode,child1_l1);
  long child2_l1=helper.createNode();
  helper.createRelationship("knows",startNode,child2_l1);
  long child1_l2=helper.createNode();
  helper.createRelationship("knows",child2_l1,child1_l2);
  Response response=service.jsonTraverse(startNode,TraverserReturnType.node,"");
  String entity=entityAsString(response);
  assertTrue(entity.contains("/node/" + child1_l1));
  assertTrue(entity.contains("/node/" + child2_l1));
  assertFalse(entity.contains("/node/" + child1_l2));
  assertEquals(response.getMetadata().getFirst(HttpHeaders.CONTENT_ENCODING),"UTF-8");
}
