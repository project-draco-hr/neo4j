{
  life.start();
  Listeners.notifyListeners(bindingListeners,new Listeners.Notification<BindingListener>(){
    @Override public void notify(    BindingListener listener){
      listener.listeningAt(URI.create(client.getClusterServer()));
    }
  }
);
  client.refreshMasterFromZooKeeper();
  Listeners.notifyListeners(haListeners,new Listeners.Notification<ClusterMemberListener>(){
    @Override public void notify(    ClusterMemberListener listener){
      listener.masterIsElected(URI.create("cluster://" + client.getCachedMaster().getServerAsString()));
    }
  }
);
  Listeners.notifyListeners(haListeners,new Listeners.Notification<ClusterMemberListener>(){
    @Override public void notify(    ClusterMemberListener listener){
      listener.memberIsAvailable(HighAvailabilityModeSwitcher.MASTER,URI.create("cluster://" + client.getCachedMaster().getServerAsString()),URI.create("ha://" + client.getCachedMaster().getServerAsString()));
    }
  }
);
}
