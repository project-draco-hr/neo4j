def test_aggregate_queries(self):
    db = self.graphdb
    with db.transaction:
        result = db.query('CREATE p=node-[:Depends_on]->port<-[:Has]-parent1<-[:Has]-parent2,\n                                                                port<-[:Has]-parent3 \n                                   RETURN node,p')
        for row in result:
            node = row['node']
    result = db.query('\n                START n=node({node})\n                MATCH p=n-[:Depends_on]->port<-[:Has]-parent\n                RETURN COLLECT(p) AS end_points', node=node)
    end_points = result['end_points'].single
    count = 0
    for path in end_points:
        count += 1
    self.assertEquals(count, 2)
