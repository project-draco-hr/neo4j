{
  ObjectName beanName=new ObjectName("org.neo4j:chevyMakesTheTruck=bobMcCoshMakesTheDifference");
  when(jmxServer.queryNames(new ObjectName("*:*"),null)).thenReturn(asSet(beanName));
  when(jmxServer.getMBeanInfo(beanName)).thenReturn(new MBeanInfo("org.neo4j.SomeMBean","This is a description",new MBeanAttributeInfo[]{new MBeanAttributeInfo("name","differenceMaker","Who makes the difference?",true,false,false)},null,null,null));
  when(jmxServer.getAttribute(beanName,"name")).thenReturn(new CompositeDataSupport(new CompositeType("myComposite","Composite description",new String[]{"key1","key2"},new String[]{"Can't be empty","Also can't be empty"},new OpenType<?>[]{SimpleType.STRING,SimpleType.INTEGER}),map("key1","Hello","key2",123)));
  JmxQueryProcedure procedure=new JmxQueryProcedure(ProcedureSignature.procedureName("bob"),jmxServer);
  RawIterator<Object[],ProcedureException> result=procedure.apply(null,new Object[]{"*:*"});
  assertThat(asList(result),contains(equalTo(new Object[]{"org.neo4j:chevyMakesTheTruck=bobMcCoshMakesTheDifference","This is a description",map(attributeName,map("description","Who makes the difference?","value",map("description","Composite description","properties",map("key1","Hello","key2",123))))})));
}
