{
  File root=TargetDirectory.forTest(getClass()).directory("pullUpdatesShellAppPullsUpdates",true);
  Map<Integer,Map<String,String>> instanceConfig=new HashMap<Integer,Map<String,String>>();
  for (int i=1; i <= 2; i++) {
    Map<String,String> thisInstance=MapUtil.stringMap(ShellSettings.remote_shell_port.name(),"" + (SHELL_PORT + i));
    instanceConfig.put(i,thisInstance);
  }
  ClusterManager clusterManager=new ClusterManager(clusterOfSize(2),root,MapUtil.stringMap(HaSettings.pull_interval.name(),"0",HaSettings.tx_push_factor.name(),"0",ShellSettings.remote_shell_enabled.name(),"true"),instanceConfig);
  clusterManager.start();
  cluster=clusterManager.getDefaultCluster();
  long commonNodeId=createNodeOnMaster();
  setProperty(cluster.getMaster(),commonNodeId,1);
  callPullUpdatesViaShell(2);
  HighlyAvailableGraphDatabase slave=cluster.getAnySlave();
  Transaction transaction=slave.beginTx();
  try {
    assertEquals(1,slave.getNodeById(commonNodeId).getProperty("i"));
  }
  finally {
    transaction.finish();
  }
}
