{
  ClusterManager.ManagedCluster cluster=clusterRule.withProvider(clusterOfSize(2)).withSharedSetting(HaSettings.pull_interval,"0").withSharedSetting(HaSettings.tx_push_factor,"0").withSharedSetting(ShellSettings.remote_shell_enabled,Settings.TRUE).withInstanceSetting(ShellSettings.remote_shell_port,new IntFunction<String>(){
    @Override public String apply(    int oneBasedServerId){
      return oneBasedServerId >= 1 && oneBasedServerId <= 2 ? "" + (SHELL_PORT + oneBasedServerId) : null;
    }
  }
).startCluster();
  long commonNodeId=createNodeOnMaster(cluster);
  setProperty(cluster.getMaster(),commonNodeId,1);
  callPullUpdatesViaShell(2);
  HighlyAvailableGraphDatabase slave=cluster.getAnySlave();
  try (Transaction tx=slave.beginTx()){
    assertEquals(1,slave.getNodeById(commonNodeId).getProperty("i"));
    tx.success();
  }
 }
