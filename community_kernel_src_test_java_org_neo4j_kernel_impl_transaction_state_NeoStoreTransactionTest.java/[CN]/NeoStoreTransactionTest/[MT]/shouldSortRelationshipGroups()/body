{
  resetFileSystem();
  instantiateNeoStore(1);
  int type5=5, type10=10, type15=15;
  try (LockGroup locks=new LockGroup()){
    TransactionRecordState tx=newWriteTransaction().first();
    neoStore.getRelationshipTypeTokenStore().setHighId(16);
    tx.createRelationshipTypeToken("5",type5);
    tx.createRelationshipTypeToken("10",type10);
    tx.createRelationshipTypeToken("15",type15);
    commitProcess().commit(transactionRepresentationOf(tx),locks);
  }
   long nodeId=neoStore.getNodeStore().nextId();
  try (LockGroup locks=new LockGroup()){
    TransactionRecordState tx=newWriteTransaction().first();
    long otherNode1Id=neoStore.getNodeStore().nextId();
    long otherNode2Id=neoStore.getNodeStore().nextId();
    tx.nodeCreate(nodeId);
    tx.nodeCreate(otherNode1Id);
    tx.nodeCreate(otherNode2Id);
    tx.relCreate(neoStore.getRelationshipStore().nextId(),type10,nodeId,otherNode1Id);
    tx.relCreate(neoStore.getRelationshipStore().nextId(),type10,nodeId,otherNode2Id);
    commitProcess().commit(transactionRepresentationOf(tx),locks);
    assertRelationshipGroupsInOrder(nodeId,type10);
  }
   try (LockGroup locks=new LockGroup()){
    TransactionRecordState tx=newWriteTransaction().first();
    long otherNodeId=neoStore.getNodeStore().nextId();
    tx.nodeCreate(otherNodeId);
    tx.relCreate(neoStore.getRelationshipStore().nextId(),type5,nodeId,otherNodeId);
    commitProcess().commit(transactionRepresentationOf(tx),locks);
  }
   assertRelationshipGroupsInOrder(nodeId,type5,type10);
  try (LockGroup locks=new LockGroup()){
    TransactionRecordState tx=newWriteTransaction().first();
    long otherNodeId=neoStore.getNodeStore().nextId();
    tx.nodeCreate(otherNodeId);
    tx.relCreate(neoStore.getRelationshipStore().nextId(),type15,nodeId,otherNodeId);
    commitProcess().commit(transactionRepresentationOf(tx),locks);
  }
   assertRelationshipGroupsInOrder(nodeId,type5,type10,type15);
}
