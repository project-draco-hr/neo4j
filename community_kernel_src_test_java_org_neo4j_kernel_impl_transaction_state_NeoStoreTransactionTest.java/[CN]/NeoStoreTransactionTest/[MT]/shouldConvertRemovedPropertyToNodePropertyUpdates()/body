{
  int nodeId=0;
  TransactionRecordState writeTransaction=newWriteTransaction().first();
  int propertyKey1=1, propertyKey2=2;
  int labelId=3;
  Object value1="first", value2=4;
  writeTransaction.nodeCreate(nodeId);
  writeTransaction.addLabelToNode(labelId,nodeId);
  DefinedProperty property1=writeTransaction.nodeAddProperty(nodeId,propertyKey1,value1);
  DefinedProperty property2=writeTransaction.nodeAddProperty(nodeId,propertyKey2,value2);
  PhysicalTransactionRepresentation transactionCommands=transactionRepresentationOf(writeTransaction);
  try (LockGroup locks=new LockGroup()){
    commitProcess().commit(transactionCommands,locks);
  }
   CapturingIndexingService indexingService=createCapturingIndexingService();
  writeTransaction=newWriteTransaction(indexingService).first();
  writeTransaction.nodeRemoveProperty(nodeId,property1.propertyKeyId());
  writeTransaction.nodeRemoveProperty(nodeId,property2.propertyKeyId());
  transactionCommands=transactionRepresentationOf(writeTransaction);
  try (LockGroup locks=new LockGroup()){
    commitProcess(indexingService).commit(transactionCommands,locks);
  }
   assertEquals(asSet(remove(nodeId,propertyKey1,value1,new long[]{labelId}),remove(nodeId,propertyKey2,value2,new long[]{labelId})),indexingService.updates);
}
