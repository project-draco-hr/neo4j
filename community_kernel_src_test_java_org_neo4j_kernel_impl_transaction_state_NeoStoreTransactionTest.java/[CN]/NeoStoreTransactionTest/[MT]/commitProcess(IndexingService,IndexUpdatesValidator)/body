{
  TransactionAppender appenderMock=mock(TransactionAppender.class);
  when(appenderMock.append(Matchers.<TransactionRepresentation>any(),any(LogAppendEvent.class))).thenReturn(new FakeCommitment(nextTxId++,neoStores.getMetaDataStore()));
  @SuppressWarnings("unchecked") Supplier<LabelScanWriter> labelScanStore=mock(Supplier.class);
  when(labelScanStore.get()).thenReturn(mock(LabelScanWriter.class));
  StorageEngine storageEngine=mock(StorageEngine.class);
  when(storageEngine.neoStores()).thenReturn(neoStores);
  when(storageEngine.cacheAccess()).thenReturn(cacheAccessBackDoor);
  when(storageEngine.indexingService()).thenReturn(indexing);
  TransactionRepresentationStoreApplier applier=new TransactionRepresentationStoreApplier(labelScanStore,locks,null,null,storageEngine);
  neoStores.getMetaDataStore().nextCommittingTransactionId();
  return new TransactionRepresentationCommitProcess(appenderMock,applier,indexUpdatesValidator);
}
