{
  super(fileName,conf,IdType.NEOSTORE_BLOCK,idGeneratorFactory,windowPoolFactory,fileSystemAbstraction,stringLogger,versionMismatchHandler,monitors);
  this.relTypeStore=relTypeStore;
  this.labelTokenStore=labelTokenStore;
  this.propStore=propStore;
  this.relStore=relStore;
  this.nodeStore=nodeStore;
  this.schemaStore=schemaStore;
  this.relGroupStore=relGroupStore;
  REL_GRAB_SIZE=conf.get(Configuration.relationship_grab_size);
  this.txHook=txHook;
  pageCache=new WindowPoolPageCache(windowPoolFactory,fileSystemAbstraction);
  try {
    storeFile=pageCache.map(fileName,RECORD_SIZE * 128,RECORD_SIZE);
  }
 catch (  IOException e) {
    throw new UnderlyingStorageException(e);
  }
  pageSize=storeFile.pageSize();
  setRecovered();
  try {
    if (getCreationTime() != 0 && getStoreVersion() == 0) {
      setStoreVersion(versionStringToLong(CommonAbstractStore.ALL_STORES_VERSION));
      updateHighId();
    }
  }
  finally {
    unsetRecovered();
  }
}
