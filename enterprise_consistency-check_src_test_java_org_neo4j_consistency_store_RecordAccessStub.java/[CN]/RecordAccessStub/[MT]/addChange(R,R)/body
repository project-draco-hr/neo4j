{
  if (newRecord instanceof NodeRecord) {
    add(nodes,(NodeRecord)oldRecord,(NodeRecord)newRecord);
  }
 else   if (newRecord instanceof RelationshipRecord) {
    add(relationships,(RelationshipRecord)oldRecord,(RelationshipRecord)newRecord);
  }
 else   if (newRecord instanceof PropertyRecord) {
    add(properties,(PropertyRecord)oldRecord,(PropertyRecord)newRecord);
  }
 else   if (newRecord instanceof DynamicRecord) {
    DynamicRecord dyn=(DynamicRecord)newRecord;
    if (dyn.getType() == PropertyType.STRING.intValue()) {
      add(strings,(DynamicRecord)oldRecord,dyn);
    }
 else     if (dyn.getType() == PropertyType.ARRAY.intValue()) {
      add(arrays,(DynamicRecord)oldRecord,dyn);
    }
 else     if (dyn.getType() == SCHEMA_RECORD_TYPE) {
      add(schemata,(DynamicRecord)oldRecord,dyn);
    }
 else {
      throw new IllegalArgumentException("Invalid dynamic record type");
    }
  }
 else   if (newRecord instanceof RelationshipTypeTokenRecord) {
    add(relationshipTypeTokens,(RelationshipTypeTokenRecord)oldRecord,(RelationshipTypeTokenRecord)newRecord);
  }
 else   if (newRecord instanceof PropertyKeyTokenRecord) {
    add(propertyKeyTokens,(PropertyKeyTokenRecord)oldRecord,(PropertyKeyTokenRecord)newRecord);
  }
 else   if (newRecord instanceof NeoStoreRecord) {
    this.graph=new Delta<NeoStoreRecord>((NeoStoreRecord)oldRecord,(NeoStoreRecord)newRecord);
  }
 else {
    throw new IllegalArgumentException("Invalid record type");
  }
  return newRecord;
}
