{
  try {
    Node[] nodeSpace=new Node[]{null,getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode(),getNeo().createNode()};
    String key="node.test.id";
    for (int i=1; i < nodeSpace.length; i++) {
      nodeSpace[i].setProperty(key,"" + i);
    }
    RelationshipType ise=MyRelTypes.TEST;
    RelationshipType clone=MyRelTypes.TEST_TRAVERSAL;
    nodeSpace[1].createRelationshipTo(nodeSpace[2],ise);
    nodeSpace[2].createRelationshipTo(nodeSpace[5],ise);
    nodeSpace[5].createRelationshipTo(nodeSpace[10],ise);
    nodeSpace[5].createRelationshipTo(nodeSpace[11],ise);
    nodeSpace[5].createRelationshipTo(nodeSpace[12],ise);
    nodeSpace[5].createRelationshipTo(nodeSpace[13],ise);
    nodeSpace[2].createRelationshipTo(nodeSpace[6],ise);
    nodeSpace[1].createRelationshipTo(nodeSpace[3],ise);
    nodeSpace[1].createRelationshipTo(nodeSpace[4],ise);
    nodeSpace[3].createRelationshipTo(nodeSpace[7],ise);
    nodeSpace[6].createRelationshipTo(nodeSpace[7],clone);
    nodeSpace[4].createRelationshipTo(nodeSpace[8],clone);
    nodeSpace[4].createRelationshipTo(nodeSpace[9],clone);
    nodeSpace[9].createRelationshipTo(nodeSpace[14],clone);
    return nodeSpace[1];
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to create population",e);
  }
}
