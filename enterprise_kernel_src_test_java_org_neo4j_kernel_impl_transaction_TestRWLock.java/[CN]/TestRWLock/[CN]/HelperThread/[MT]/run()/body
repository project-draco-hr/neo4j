{
  try {
    while (nextTask != QUIT_TASK) {
switch (nextTask) {
case DO_NOTHING_TASK:
synchronized (this) {
          wait(15);
        }
      break;
case GET_READLOCK_TASK:
    lm.getReadLock(resource);
  taskCompleted=true;
nextTask=DO_NOTHING_TASK;
break;
case RELEASE_READLOCK_TASK:
lm.releaseReadLock(resource);
taskCompleted=true;
nextTask=DO_NOTHING_TASK;
break;
case GET_WRITELOCK_TASK:
lm.getWriteLock(resource);
taskCompleted=true;
nextTask=DO_NOTHING_TASK;
break;
case RELEASE_WRITELOCK_TASK:
lm.releaseWriteLock(resource);
taskCompleted=true;
nextTask=DO_NOTHING_TASK;
break;
default :
throw new RuntimeException("Argh");
}
}
}
 catch (Exception e) {
taskCompleted=true;
System.out.println("" + this + " unable to execute task, "+ e);
e.printStackTrace();
throw new RuntimeException(e);
}
}
