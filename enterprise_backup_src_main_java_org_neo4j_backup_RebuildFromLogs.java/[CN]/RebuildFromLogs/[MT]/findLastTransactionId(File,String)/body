{
  final AtomicLong txId=new AtomicLong();
  try {
    FileChannel channel=new RandomAccessFile(new File(storeDir,logFileName),"r").getChannel();
    try {
      ByteBuffer buffer=ByteBuffer.allocateDirect(9 + Xid.MAXGTRIDSIZE + Xid.MAXBQUALSIZE * 10);
      txId.set(VersionAwareLogEntryReader.readLogHeader(buffer,channel,true)[1]);
      LogDeserializer deserializer=new LogDeserializer(buffer,XaCommandReaderFactory.DEFAULT);
      Cursor<LogEntry,IOException> cursor=deserializer.cursor(channel);
      Consumer<LogEntry,IOException> consumer=new Consumer<LogEntry,IOException>(){
        @Override public boolean accept(        LogEntry entry) throws IOException {
          if (entry instanceof LogEntry.Commit) {
            txId.set(((LogEntry.Commit)entry).getTxId());
          }
          return true;
        }
      }
;
      while (cursor.next(consumer))       ;
    }
  finally {
      if (channel != null) {
        channel.close();
      }
    }
  }
 catch (  IOException e) {
    return -1;
  }
  return txId.get();
}
