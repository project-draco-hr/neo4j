{
  clusterMembersSnapshot=ClusterMembersSnapshot.class.cast(input.readObject());
  Listeners.notifyListeners(listeners,executor,new Listeners.Notification<ClusterMemberListener>(){
    @Override public void notify(    ClusterMemberListener listener){
      for (      MemberIsAvailable memberIsAvailable : clusterMembersSnapshot.getCurrentAvailableMembers()) {
        listener.memberIsAvailable(memberIsAvailable.getRole(),memberIsAvailable.getClusterUri(),memberIsAvailable.getRoleUri());
      }
    }
  }
);
}
