{
  Args args=Args.parse(arguments);
  int nodeCount=args.getNumber("nodes",null).intValue();
  int relationshipCount=args.getNumber("relationships",null).intValue();
  Configuration config=Configuration.COMMAS;
  Extractors extractors=new Extractors(config.arrayDelimiter());
  Header nodeHeader=new Header(new Entry[]{new Entry(null,Type.ID,extractors.string()),new Entry("name",Type.PROPERTY,extractors.string()),new Entry("age",Type.PROPERTY,extractors.int_()),new Entry("something",Type.PROPERTY,extractors.string()),new Entry(null,Type.LABEL,extractors.stringArray())});
  Header relationshipHeader=new Header(new Entry[]{new Entry(null,Type.START_ID,extractors.string()),new Entry(null,Type.END_ID,extractors.string()),new Entry(null,Type.TYPE,extractors.string())});
  ProgressListener progress=textual(System.out).singlePart("Generating",nodeCount + relationshipCount);
  CsvDataGenerator generator=new CsvDataGenerator(nodeHeader,relationshipHeader,config);
  writeData(generator.serializeNodeHeader(),generator.pullNodeData(),new File("target","nodes.csv"),progress,nodeCount);
  writeData(generator.serializeRelationshipHeader(),generator.pullRelationshipData(),new File("target","relationships.csv"),progress,relationshipCount);
  progress.done();
}
