{
  if (end - start < pivotChoice.length) {
    return randomIndex;
  }
  int low=Math.max(start,randomIndex - 5);
  int high=Utils.safeCastLongToInt(Math.min(low + 10,end));
  int length=high - low;
  for (int i=low, j=0; i < high; i++, j++) {
    pivotChoice[j]=clearCollision(dataCache.get(tracker.get(i)));
  }
  Arrays.sort(pivotChoice,0,length);
  long middle=pivotChoice[length / 2];
  for (int i=low; i <= high; i++) {
    if (clearCollision(dataCache.get(tracker.get(i))) == middle) {
      return i;
    }
  }
  throw new IllegalStateException("The middle value somehow disappeared in front of our eyes");
}
