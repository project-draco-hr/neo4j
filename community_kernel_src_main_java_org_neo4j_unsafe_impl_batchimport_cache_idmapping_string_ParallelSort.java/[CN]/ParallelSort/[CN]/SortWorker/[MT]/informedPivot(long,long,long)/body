{
  if (end - start < pivotChoice.length) {
    return randomIndex;
  }
  long low=Math.max(start,randomIndex - 5);
  long high=Math.min(low + 10,end);
  int length=Utils.safeCastLongToInt(high - low);
  int j=0;
  for (long i=low; i < high; i++, j++) {
    pivotChoice[j]=clearCollision(dataCache.get(tracker.get(i)));
  }
  Arrays.sort(pivotChoice,0,length);
  long middle=pivotChoice[length / 2];
  for (long i=low; i <= high; i++) {
    if (clearCollision(dataCache.get(tracker.get(i))) == middle) {
      return i;
    }
  }
  throw new ThisShouldNotHappenError("Mattias and Raghu","The middle value somehow dissappeared in front of our eyes");
}
