{
  int li=leftIndex, ri=rightIndex - 2, pi=pivotIndex;
  long pivot=StringIdMapper.clearCollision(dataCache.get(tracker.get(pi)));
  swapElement(tracker,pi,rightIndex - 1);
  long left=0, right=0;
  while (li < ri) {
    left=StringIdMapper.clearCollision(dataCache.get(tracker.get(li)));
    right=StringIdMapper.clearCollision(dataCache.get(tracker.get(ri)));
    if (Utils.unsignedCompare(left,pivot,CompareType.LT)) {
      li++;
    }
 else     if (Utils.unsignedCompare(right,pivot,CompareType.GE)) {
      ri--;
    }
 else {
      swapElement(tracker,li,ri);
    }
  }
  int partingIndex=ri;
  right=StringIdMapper.clearCollision(dataCache.get(tracker.get(ri)));
  if (Utils.unsignedCompare(right,pivot,CompareType.LT)) {
    partingIndex++;
  }
  swapElement(tracker,rightIndex - 1,partingIndex);
  return partingIndex;
}
