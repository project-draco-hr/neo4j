{
  DirectNetworking net=new DirectNetworking();
  final CoreMember leader1=member(0);
  final CoreMember leader2=member(1);
  final CoreMember stable1=member(2);
  final CoreMember stable2=member(3);
  final CoreMember[] allMembers={leader1,leader2,stable1,stable2};
  final CoreMember[] fewerMembers={leader2,stable1,stable2};
  RaftTestFixture fixture=new RaftTestFixture(net,3,allMembers);
  fixture.members().withId(leader1).raftInstance().bootstrapWithInitialMembers(new RaftTestGroup(allMembers));
  fixture.members().withId(leader1).timeoutService().invokeTimeout(ELECTION);
  net.processMessages();
  fixture.members().withId(leader1).raftInstance().setTargetMembershipSet(new RaftTestGroup(fewerMembers).getMembers());
  net.processMessages();
  fixture.members().withId(leader2).timeoutService().invokeTimeout(ELECTION);
  net.processMessages();
  fixture.members().withId(leader2).raftInstance().setTargetMembershipSet(new RaftTestGroup(allMembers).getMembers());
  net.processMessages();
  fixture.members().withId(leader2).timeoutService().invokeTimeout(HEARTBEAT);
  net.processMessages();
  assertTrue(fixture.members().withId(leader2).raftInstance().isLeader());
  assertThat(fixture.members().withIds(allMembers),hasCurrentMembers(new RaftTestGroup(allMembers)));
}
