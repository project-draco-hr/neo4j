{
  DirectNetworking net=new DirectNetworking();
  final CoreMember leader=member(0);
  final CoreMember stable=member(1);
  final CoreMember toBeRemoved=member(2);
  final CoreMember[] initialMembers={leader,stable,toBeRemoved};
  final CoreMember[] finalMembers={leader,stable};
  RaftTestFixture fixture=new RaftTestFixture(net,2,initialMembers);
  fixture.members().withId(leader).raftInstance().bootstrapWithInitialMembers(new RaftTestGroup(initialMembers));
  fixture.members().withId(leader).timeoutService().invokeTimeout(ELECTION);
  fixture.members().setTargetMembershipSet(new RaftTestGroup(finalMembers).getMembers());
  net.processMessages();
  assertThat(fixture.members().withIds(finalMembers),hasCurrentMembers(new RaftTestGroup(finalMembers)));
  assertEquals(1,fixture.members().withIds(finalMembers).withRole(LEADER).size());
  assertEquals(1,fixture.members().withIds(finalMembers).withRole(FOLLOWER).size());
}
