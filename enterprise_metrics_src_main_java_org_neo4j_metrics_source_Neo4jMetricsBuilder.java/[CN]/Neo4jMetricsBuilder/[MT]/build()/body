{
  boolean result=false;
  if (config.get(MetricsSettings.neoTxEnabled)) {
    life.add(new TransactionMetrics(registry,deps.dataSourceManager(),deps.transactionCounters()));
    result=true;
  }
  if (config.get(MetricsSettings.neoPageCacheEnabled)) {
    life.add(new PageCacheMetrics(registry,deps.pageCacheCounters()));
    result=true;
  }
  if (config.get(MetricsSettings.neoCheckPointingEnabled)) {
    life.add(new CheckPointingMetrics(reporter,registry,deps.monitors(),deps.checkPointerMonitor()));
    result=true;
  }
  if (config.get(MetricsSettings.neoLogRotationEnabled)) {
    life.add(new LogRotationMetrics(reporter,registry,deps.monitors(),deps.logRotationMonitor()));
    result=true;
  }
  if (config.get(MetricsSettings.neoCountsEnabled)) {
    life.add(new EntityCountMetrics(registry,deps.idGeneratorFactory()));
    result=true;
  }
  if (config.get(MetricsSettings.neoNetworkEnabled)) {
    life.add(new NetworkMetrics(registry,deps.monitors()));
    result=true;
  }
  if (config.get(MetricsSettings.neoClusterEnabled)) {
    final ClusterMembers clusterMembers=resolveClusterMembersOrNull(deps.getDependencyResolver(),logService);
    if (clusterMembers != null) {
      life.add(new ClusterMetrics(deps.monitors(),registry,clusterMembers));
      result=true;
    }
  }
  if (config.get(MetricsSettings.cypherPlanningEnabled)) {
    life.add(new CypherMetrics(registry,deps.monitors()));
    result=true;
  }
  if (config.get(MetricsSettings.jvmGcEnabled)) {
    life.add(new GCMetrics(registry));
    result=true;
  }
  if (config.get(MetricsSettings.jvmThreadsEnabled)) {
    life.add(new ThreadMetrics(registry));
    result=true;
  }
  if (config.get(MetricsSettings.jvmMemoryEnabled)) {
    life.add(new MemoryPoolMetrics(registry));
    result=true;
  }
  if (config.get(MetricsSettings.jvmBuffersEnabled)) {
    life.add(new MemoryBuffersMetrics(registry));
    result=true;
  }
  if (config.get(MetricsSettings.coreEdgeEnabled)) {
    life.add(new CoreEdgeMetrics(deps.monitors(),registry));
    result=true;
  }
  return result;
}
