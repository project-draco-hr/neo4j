{
  if (newPosition < 0) {
    throw new IllegalArgumentException("Position must be non-negative, was " + newPosition);
  }
  int previousPosition=position;
  boolean overTheEdge=false;
  while (visited.size() < newPosition) {
    T next=source.hasNext() ? source.next() : null;
    if (next != null) {
      visited.add(next);
    }
 else {
      if (!overTheEdge) {
        overTheEdge=true;
      }
 else {
        throw new NoSuchElementException("Requested position " + newPosition + ", but didn't get further than to "+ visited.size());
      }
    }
  }
  current=null;
  position=newPosition;
  return previousPosition;
}
