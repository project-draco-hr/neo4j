{
  do {
    creationTimeField=getRecordValue(cursor,Position.TIME);
    randomNumberField=getRecordValue(cursor,Position.RANDOM_NUMBER);
    versionField=getRecordValue(cursor,Position.LOG_VERSION);
    upgradeTxIdField=getRecordValue(cursor,Position.UPGRADE_TRANSACTION_ID);
    upgradeTimeField=getRecordValue(cursor,Position.UPGRADE_TIME);
    long lastCommittedTxId=getRecordValue(cursor,Position.LAST_TRANSACTION_ID);
    lastCommittingTxField.set(lastCommittedTxId);
    storeVersionField=getRecordValue(cursor,Position.STORE_VERSION);
    graphNextPropField=getRecordValue(cursor,Position.FIRST_GRAPH_PROPERTY);
    latestConstraintIntroducingTxField=getRecordValue(cursor,Position.LAST_CONSTRAINT_TRANSACTION);
    lastTransactionChecksum=getRecordValue(cursor,Position.LAST_TRANSACTION_CHECKSUM);
    lastClosedTransactionLogVersion=getRecordValue(cursor,Position.LAST_CLOSED_TRANSACTION_LOG_VERSION);
    lastClosedTransactionLogByteOffset=getRecordValue(cursor,Position.LAST_CLOSED_TRANSACTION_LOG_BYTE_OFFSET);
    lastClosedTx.set(lastCommittedTxId,new long[]{lastClosedTransactionLogVersion,lastClosedTransactionLogByteOffset});
    lastCommittedTx.set(lastCommittedTxId,new long[]{lastTransactionChecksum});
    upgradeTxChecksumField=getRecordValue(cursor,Position.UPGRADE_TRANSACTION_CHECKSUM);
  }
 while (cursor.shouldRetry());
}
