{
  if (value instanceof String) {
    return Property.stringProperty(propertyKeyId,(String)value);
  }
  if (value instanceof Object[]) {
    return arrayProperty(propertyKeyId,(Object[])value);
  }
  if (value instanceof Long) {
    return Property.longProperty(propertyKeyId,(Long)value);
  }
  if (value instanceof Integer) {
    return Property.intProperty(propertyKeyId,(Integer)value);
  }
  if (value instanceof Boolean) {
    return Property.booleanProperty(propertyKeyId,(Boolean)value);
  }
  if (value instanceof Double) {
    return Property.doubleProperty(propertyKeyId,(Double)value);
  }
  if (value instanceof Float) {
    return Property.floatProperty(propertyKeyId,(Float)value);
  }
  if (value instanceof Short) {
    return Property.shortProperty(propertyKeyId,(Short)value);
  }
  if (value instanceof Byte) {
    return Property.byteProperty(propertyKeyId,(Byte)value);
  }
  if (value instanceof Character) {
    return Property.charProperty(propertyKeyId,(Character)value);
  }
  if (value instanceof byte[]) {
    return Property.byteArrayProperty(propertyKeyId,((byte[])value).clone());
  }
  if (value instanceof long[]) {
    return Property.longArrayProperty(propertyKeyId,((long[])value).clone());
  }
  if (value instanceof int[]) {
    return Property.intArrayProperty(propertyKeyId,((int[])value).clone());
  }
  if (value instanceof double[]) {
    return Property.doubleArrayProperty(propertyKeyId,((double[])value).clone());
  }
  if (value instanceof float[]) {
    return Property.floatArrayProperty(propertyKeyId,((float[])value).clone());
  }
  if (value instanceof boolean[]) {
    return Property.booleanArrayProperty(propertyKeyId,((boolean[])value).clone());
  }
  if (value instanceof char[]) {
    return Property.charArrayProperty(propertyKeyId,((char[])value).clone());
  }
  if (value instanceof short[]) {
    return Property.shortArrayProperty(propertyKeyId,((short[])value).clone());
  }
  if (value == null) {
    throw new IllegalArgumentException("[null] is not a supported property value");
  }
 else {
    throw new IllegalArgumentException(String.format("[%s:%s] is not a supported property value",value,value.getClass().getName()));
  }
}
