{
  try (LuceneLabelScanIndex labelScanIndex=LuceneLabelScanIndexBuilder.create().withIndexIdentifier("partitionedIndex").withIndexRootFolder(testDir.directory("partitionedIndexFolder")).build()){
    labelScanIndex.open();
    int numberOfUpdates=100;
    generateLabelChanges(labelScanIndex,numberOfUpdates);
    try (LabelScanReader labelScanReader=labelScanIndex.getLabelScanReader()){
      for (int i=0; i < numberOfUpdates; i++) {
        List<Long> labels=Iterables.toList(labelScanReader.labelsForNode(i));
        assertEquals("Should have only one label",1,labels.size());
        assertEquals("Label id should be equal to node id",i,labels.get(0).intValue());
      }
      for (int i=0; i < numberOfUpdates; i++) {
        long[] nodes=PrimitiveLongCollections.asArray(labelScanReader.nodesWithLabel(i));
        assertEquals("Should have only one node for each label",1,nodes.length);
        assertEquals("Label id should be equal to node id",i,nodes[0]);
      }
    }
   }
 }
