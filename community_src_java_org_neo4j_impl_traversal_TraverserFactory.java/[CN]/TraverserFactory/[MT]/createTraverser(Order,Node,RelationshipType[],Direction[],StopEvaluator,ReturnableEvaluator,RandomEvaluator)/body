{
  if (traversableRels == null || traversableDirs == null) {
    throw new IllegalArgumentException("Using this constructor requires that traversable " + "relationships array and traversable directions array " + "isn't null: travRels[" + traversableRels + "] "+ "travDirs["+ traversableDirs+ "]");
  }
  if (traversableRels.length != traversableDirs.length) {
    throw new IllegalArgumentException("Length of traversable relationships array isn't equal to " + "length of traversable directions array: " + "travRels.length[" + traversableRels.length + "] != "+ "travDirs.length["+ traversableDirs.length+ "]");
  }
  if (traversalOrder == Order.BREADTH_FIRST) {
    return new BreadthFirstTraverser(startNode,traversableRels,traversableDirs,null,null,stopEvaluator,returnableEvaluator,randomEvaluator);
  }
 else   if (traversalOrder == Order.DEPTH_FIRST) {
    return new DepthFirstTraverser(startNode,traversableRels,traversableDirs,null,null,stopEvaluator,returnableEvaluator,randomEvaluator);
  }
 else {
    throw new IllegalArgumentException("Unknown traverser type: " + traversalOrder);
  }
}
