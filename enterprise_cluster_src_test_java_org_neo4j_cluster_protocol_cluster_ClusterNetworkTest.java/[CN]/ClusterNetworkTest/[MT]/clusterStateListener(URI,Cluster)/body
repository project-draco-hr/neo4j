{
  final AtomicReference<ClusterConfiguration> config=new AtomicReference<ClusterConfiguration>();
  cluster.addClusterListener(new ClusterListener(){
    @Override public void enteredCluster(    ClusterConfiguration clusterConfiguration){
      logger.getLogger().info(uri + " entered cluster:" + clusterConfiguration.getMembers());
      config.set(new ClusterConfiguration(clusterConfiguration));
      in.add(cluster);
    }
    @Override public void joinedCluster(    URI member){
      logger.getLogger().info(uri + " sees a join:" + member.toString());
      config.get().joined(member);
    }
    @Override public void leftCluster(    URI member){
      logger.getLogger().info(uri + " sees a leave:" + member.toString());
      config.get().left(member);
    }
    @Override public void leftCluster(){
      out.add(cluster);
      config.set(null);
    }
    @Override public void elected(    String role,    URI electedMember){
      logger.getLogger().info(uri + " sees an election:" + electedMember+ " as "+ role);
    }
  }
);
  return config;
}
