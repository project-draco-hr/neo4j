{
  BatchInserter graphDb=newBatchInserter();
  long startNode=graphDb.createNode(properties);
  long otherNode=graphDb.createNode(properties);
  long selfRelationship=graphDb.createRelationship(startNode,startNode,relTypeArray[0],properties);
  long relationship=graphDb.createRelationship(startNode,otherNode,relTypeArray[0],properties);
  for (  SimpleRelationship rel : graphDb.getRelationships(startNode)) {
    if (rel.getId() == selfRelationship) {
      assertEquals(startNode,rel.getStartNode());
      assertEquals(startNode,rel.getEndNode());
    }
 else     if (rel.getId() == relationship) {
      assertEquals(startNode,rel.getStartNode());
      assertEquals(otherNode,rel.getEndNode());
    }
 else {
      fail("Unexpected relationship " + rel.getId());
    }
  }
  String storeDir=((BatchInserterImpl)graphDb).getStore();
  graphDb.shutdown();
  GraphDatabaseService db=new GraphDatabaseFactory().newEmbeddedDatabaseBuilder(storeDir).newGraphDatabase();
  Node realStartNode=db.getNodeById(startNode);
  Relationship realSelfRelationship=db.getRelationshipById(selfRelationship);
  Relationship realRelationship=db.getRelationshipById(relationship);
  assertEquals(realSelfRelationship,realStartNode.getSingleRelationship(RelTypes.REL_TYPE1,Direction.INCOMING));
  assertEquals(asSet(realSelfRelationship,realRelationship),asSet(realStartNode.getRelationships(Direction.OUTGOING)));
  assertEquals(asSet(realSelfRelationship,realRelationship),asSet(realStartNode.getRelationships()));
  db.shutdown();
}
