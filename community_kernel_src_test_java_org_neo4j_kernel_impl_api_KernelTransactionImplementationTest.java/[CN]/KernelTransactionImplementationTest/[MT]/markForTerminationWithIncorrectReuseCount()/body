{
  int reuseCount=13;
  int nextReuseCount=reuseCount + 2;
  Status.Transaction terminationReason=Status.Transaction.Terminated;
  KernelTransactionImplementation tx=newNotInitializedTransaction(true);
  initializeAndClose(tx,reuseCount);
  Locks.Client locksClient=mock(Locks.Client.class);
  SimpleStatementLocks statementLocks=new SimpleStatementLocks(locksClient);
  tx.initialize(42,42,statementLocks,KernelTransaction.Type.implicit,accessMode(),0L);
  tx.markForTermination(nextReuseCount,terminationReason);
  assertNull(tx.getReasonIfTerminated());
  verify(locksClient,never()).stop();
}
