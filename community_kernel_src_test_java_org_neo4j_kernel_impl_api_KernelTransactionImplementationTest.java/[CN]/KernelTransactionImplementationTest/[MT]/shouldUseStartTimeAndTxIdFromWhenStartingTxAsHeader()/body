{
  long startingTime=clock.currentTimeMillis();
  when(recordState.hasChanges()).thenReturn(true);
  doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocationOnMock) throws Throwable {
      Collection<Command> commands=(Collection<Command>)invocationOnMock.getArguments()[0];
      commands.add(new Command.NodeCommand());
      return null;
    }
  }
).when(recordState).extractCommands(anyListOf(Command.class));
  try (KernelTransactionImplementation transaction=newInitializedTransaction()){
    transaction.initialize(5L,BASE_TX_COMMIT_TIMESTAMP,newStatementLocks());
    clock.forward(5,MILLISECONDS);
    when(metaDataStore.getLastCommittedTransactionId()).thenReturn(7L);
    transaction.success();
  }
   assertEquals(5L,commitProcess.transaction.getLatestCommittedTxWhenStarted());
  assertEquals(startingTime,commitProcess.transaction.getTimeStarted());
  assertEquals(startingTime + 5,commitProcess.transaction.getTimeCommitted());
}
