{
  int reuseCount=10;
  Status.Transaction terminationReason=Status.Transaction.Terminated;
  KernelTransactionImplementation tx=newNotInitializedTransaction(true);
  initializeAndClose(tx,reuseCount);
  Locks.Client locksClient=mock(Locks.Client.class);
  tx.initialize(42,42,locksClient,KernelTransaction.Type.implicit,accessMode());
  tx.markForTermination(reuseCount,terminationReason);
  assertEquals(terminationReason,tx.getReasonIfTerminated());
  verify(locksClient).stop();
}
