{
  final DoubleLatch latch=new DoubleLatch(1);
  final KernelTransaction transaction=newInitializedTransaction();
  Future<?> terminationFuture=Executors.newSingleThreadExecutor().submit(new Runnable(){
    @Override public void run(){
      latch.awaitStart();
      transaction.markForTermination();
      latch.finish();
    }
  }
);
  transaction.success();
  latch.startAndAwaitFinish();
  assertNull(terminationFuture.get(1,TimeUnit.MINUTES));
  try {
    transaction.close();
    fail("Exception expected");
  }
 catch (  Exception e) {
    assertThat(e,instanceOf(TransactionTerminatedException.class));
  }
  verify(transactionMonitor,times(1)).transactionFinished(false);
  verify(transactionMonitor,times(1)).transactionTerminated();
  verifyNoMoreInteractions(transactionMonitor);
}
