{
  if (depth > 100) {
    throw new DeleteException("Recursive guard: depth = " + depth);
  }
  if (currentNode == null) {
    return;
  }
  Iterable<Relationship> rels=currentNode.getRelationships();
  for (  Relationship rel : rels) {
    if (!rel.getStartNode().equals(currentNode)) {
      continue;
    }
    Node endNode=rel.getEndNode();
    try {
      rel.delete();
    }
 catch (    DeleteException de) {
      System.err.println("Unable to delete rel: " + rel);
    }
    this.deleteNodeTreeRecursively(endNode,depth + 1);
  }
  try {
    try {
      String msg="Deleting " + currentNode + "\t[";
      String id=(String)currentNode.getProperty("node.test.id");
      msg+=id + "]";
    }
 catch (    Exception e) {
      System.err.println("Err gen msg: " + e);
    }
    Iterable<Relationship> allRels=currentNode.getRelationships();
    for (    Relationship rel : allRels) {
      rel.delete();
    }
    currentNode.delete();
  }
 catch (  DeleteException de) {
    System.err.println("Unable to delete node " + currentNode + ": "+ de);
  }
}
