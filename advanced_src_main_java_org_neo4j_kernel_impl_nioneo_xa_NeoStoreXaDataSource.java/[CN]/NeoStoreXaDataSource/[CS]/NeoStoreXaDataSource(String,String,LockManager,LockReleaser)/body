{
  super(null);
  this.lockManager=lockManager;
  this.lockReleaser=lockReleaser;
  storeDir=logicalLogPath;
  msgLog=StringLogger.getLogger(storeDir + "/messages.log");
  neoStore=new NeoStore(neoStoreFileName);
  Map<Object,Object> config=new HashMap<Object,Object>();
  config.put("store_dir",storeDir);
  xaContainer=XaContainer.create(logicalLogPath + "/nioneo_logical.log",new CommandFactory(neoStore),new TransactionFactory(),config);
  xaContainer.openLogicalLog();
  if (!xaContainer.getResourceManager().hasRecoveredTransactions()) {
    neoStore.makeStoreOk();
  }
 else {
    logger.info("Waiting for TM to take care of recovered " + "transactions.");
  }
  idGenerators=new ArrayMap<Class<?>,Store>(5,false,false);
  this.idGenerators.put(Node.class,neoStore.getNodeStore());
  this.idGenerators.put(Relationship.class,neoStore.getRelationshipStore());
  this.idGenerators.put(RelationshipType.class,neoStore.getRelationshipTypeStore());
  this.idGenerators.put(PropertyStore.class,neoStore.getPropertyStore());
  this.idGenerators.put(PropertyIndex.class,neoStore.getPropertyStore().getIndexStore());
}
