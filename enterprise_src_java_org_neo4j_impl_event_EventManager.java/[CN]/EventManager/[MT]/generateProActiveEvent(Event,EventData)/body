{
  checkIfDestroyed();
  List<ProActiveEventListener> listenerList=proActiveEventListeners.get(event);
  if (listenerList != null) {
    Iterator<ProActiveEventListener> listItr=listenerList.iterator();
    boolean result=true;
    while (listItr.hasNext() && result) {
      ProActiveEventListener listener=listItr.next();
      try {
        if (!listener.proActiveEventReceived(event,data)) {
          result=false;
        }
      }
 catch (      Throwable t) {
        t.printStackTrace();
        log.severe("Exception sending pro-active event to " + listener);
        result=false;
      }
    }
    return result;
  }
  return true;
}
