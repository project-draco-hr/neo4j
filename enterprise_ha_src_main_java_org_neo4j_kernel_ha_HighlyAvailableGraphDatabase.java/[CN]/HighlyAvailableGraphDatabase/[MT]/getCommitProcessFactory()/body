{
  final DelegateInvocationHandler<CommitProcessFactory> commitProcessFactoryDelegate=new DelegateInvocationHandler<>(CommitProcessFactory.class);
  final CommitProcessFactory commitProcessFactory=(CommitProcessFactory)Proxy.newProxyInstance(CommitProcessFactory.class.getClassLoader(),new Class[]{CommitProcessFactory.class},commitProcessFactoryDelegate);
  slaves=life.add(new HighAvailabilitySlaves(members,clusterClient,this.slaveFactory=new DefaultSlaveFactory(logging,monitors,config.get(HaSettings.com_chunk_size).intValue())));
  final TransactionPropagator pusher=life.add(new TransactionPropagator(TransactionPropagator.from(config),msgLog,slaves,new CommitPusher(jobScheduler)));
  new CommitProcessFactorySwitcher(pusher,master,commitProcessFactoryDelegate,requestContextFactory,memberStateMachine,unpacker);
  return commitProcessFactory;
}
