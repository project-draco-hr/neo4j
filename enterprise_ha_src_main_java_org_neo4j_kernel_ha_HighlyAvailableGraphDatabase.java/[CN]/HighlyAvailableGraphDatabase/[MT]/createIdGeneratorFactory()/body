{
  idGeneratorFactory=new HaIdGeneratorFactory(masterDelegateInvocationHandler,logging,requestContextFactory);
  ConsoleLogger consoleLog=logging.getConsoleLog(HighAvailabilityModeSwitcher.class);
  SwitchToSlave switchToSlaveInstance=new SwitchToSlave(consoleLog,config,getDependencyResolver(),(HaIdGeneratorFactory)idGeneratorFactory,logging,masterDelegateInvocationHandler,clusterMemberAvailability,requestContextFactory,kernelExtensions.listFactories(),responseUnpacker,monitors.newMonitor(ByteCounterMonitor.class,SlaveServer.class),monitors.newMonitor(RequestMonitor.class,SlaveServer.class),monitors.newMonitor(SwitchToSlave.Monitor.class));
  SwitchToMaster switchToMasterInstance=new SwitchToMaster(logging,consoleLog,this,(HaIdGeneratorFactory)idGeneratorFactory,config,dependencies.provideDependency(SlaveFactory.class),masterDelegateInvocationHandler,clusterMemberAvailability,dataSourceManager,monitors.newMonitor(ByteCounterMonitor.class,MasterServer.class),monitors.newMonitor(RequestMonitor.class,MasterServer.class),monitors.newMonitor(MasterImpl.Monitor.class,MasterImpl.class));
  HighAvailabilityModeSwitcher highAvailabilityModeSwitcher=new HighAvailabilityModeSwitcher(switchToSlaveInstance,switchToMasterInstance,clusterClient,clusterMemberAvailability,getDependencyResolver(),logging);
  clusterClient.addBindingListener(highAvailabilityModeSwitcher);
  memberStateMachine.addHighAvailabilityMemberListener(highAvailabilityModeSwitcher);
  paxosLife.add(highAvailabilityModeSwitcher);
  ((HaIdGeneratorFactory)idGeneratorFactory).switchToMaster();
  return idGeneratorFactory;
}
