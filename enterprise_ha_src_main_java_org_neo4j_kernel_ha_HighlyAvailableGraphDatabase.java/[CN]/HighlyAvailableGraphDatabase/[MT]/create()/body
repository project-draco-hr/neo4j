{
  life.add(new BranchedDataMigrator(storeDir));
  masterDelegateInvocationHandler=new DelegateInvocationHandler(Master.class);
  master=(Master)Proxy.newProxyInstance(Master.class.getClassLoader(),new Class[]{Master.class},masterDelegateInvocationHandler);
  requestContextFactory=new RequestContextFactory(config.get(ClusterSettings.server_id).toIntegerIndex(),getDependencyResolver());
  super.create();
  life.add(requestContextFactory);
  kernelEventHandlers.registerKernelEventHandler(new HaKernelPanicHandler(availabilityGuard,logging,masterDelegateInvocationHandler));
  life.add(updatePuller=new UpdatePuller(memberStateMachine,master,requestContextFactory,availabilityGuard,lastUpdateTime,config,jobScheduler,msgLog));
  stateSwitchTimeoutMillis=config.get(HaSettings.state_switch_timeout);
  life.add(paxosLife);
  life.add(new DatabaseAvailability(availabilityGuard,transactionMonitor));
  life.add(new StartupWaiter());
  diagnosticsManager.appendProvider(new HighAvailabilityDiagnostics(memberStateMachine,clusterClient));
}
