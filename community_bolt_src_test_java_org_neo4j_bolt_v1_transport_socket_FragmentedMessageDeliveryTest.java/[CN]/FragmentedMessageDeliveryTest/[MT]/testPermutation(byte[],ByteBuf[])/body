{
  Session sess=mock(Session.class);
  Channel ch=mock(Channel.class);
  when(ch.alloc()).thenReturn(UnpooledByteBufAllocator.DEFAULT);
  ChannelHandlerContext ctx=mock(ChannelHandlerContext.class);
  when(ctx.channel()).thenReturn(ch);
  ChunkedOutput output=new ChunkedOutput(ch,8192);
  BoltProtocolV1 protocol=new BoltProtocolV1(NullLogService.getInstance(),sess,new PackStreamMessageFormatV1.Writer(new Neo4jPack.Packer(output),output));
  for (  ByteBuf fragment : fragments) {
    fragment.readerIndex(0).retain();
    protocol.handle(ctx,fragment);
  }
  try {
    verify(sess).run(eq("Mj??lnir"),any(Map.class),any(),any(Session.Callback.class));
  }
 catch (  AssertionError e) {
    throw new AssertionError("Failed to handle fragmented delivery.\n" + "Messages: " + Arrays.toString(messages) + "\n"+ "Chunk size: "+ chunkSize+ "\n"+ "Serialized data delivered in fragments: "+ describeFragments(fragments)+ "\n"+ "Unfragmented data: "+ HexPrinter.hex(unfragmented)+ "\n",e);
  }
 finally {
    protocol.close();
  }
}
