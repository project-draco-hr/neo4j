{
  BoltStateMachine machine=mock(BoltStateMachine.class);
  Channel ch=mock(Channel.class);
  when(ch.alloc()).thenReturn(UnpooledByteBufAllocator.DEFAULT);
  ChannelHandlerContext ctx=mock(ChannelHandlerContext.class);
  when(ctx.channel()).thenReturn(ch);
  BoltProtocolV1 protocol=new BoltProtocolV1(new SynchronousBoltWorker(machine),ch,NullLogService.getInstance());
  for (  ByteBuf fragment : fragments) {
    fragment.readerIndex(0).retain();
    protocol.handle(ctx,fragment);
  }
  try {
    verify(machine).run(eq("Mj??lnir"),anyMapOf(String.class,Object.class),any(BoltResponseHandler.class));
  }
 catch (  AssertionError e) {
    throw new AssertionError("Failed to handle fragmented delivery.\n" + "Messages: " + Arrays.toString(messages) + "\n"+ "Chunk size: "+ chunkSize+ "\n"+ "Serialized data delivered in fragments: "+ describeFragments(fragments)+ "\n"+ "Unfragmented data: "+ HexPrinter.hex(unfragmented)+ "\n",e);
  }
 finally {
    protocol.close();
  }
}
