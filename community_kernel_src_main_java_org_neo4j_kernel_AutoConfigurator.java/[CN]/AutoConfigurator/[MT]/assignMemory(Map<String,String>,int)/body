{
  int nodeStore=getFileSizeMb("nodestore.db");
  int relStore=getFileSizeMb("relationshipstore.db");
  int propStore=getFileSizeMb("propertystore.db");
  int stringStore=getFileSizeMb("propertystore.db.strings");
  int arrayStore=getFileSizeMb("propertyStore.db.arrays");
  int totalSize=nodeStore + relStore + propStore+ stringStore+ arrayStore;
  boolean expand=false;
  if (totalSize * 1.15f < availableMem) {
    expand=true;
  }
  int memLeft=availableMem;
  relStore=calculate(memLeft,relStore,0.75f,1.1f,expand);
  memLeft-=relStore;
  nodeStore=calculate(memLeft,nodeStore,0.2f,1.1f,expand);
  memLeft-=nodeStore;
  propStore=calculate(memLeft,propStore,0.75f,1.1f,expand);
  memLeft-=propStore;
  stringStore=calculate(memLeft,stringStore,0.75f,1.1f,expand);
  memLeft-=stringStore;
  arrayStore=calculate(memLeft,arrayStore,1.0f,1.1f,expand);
  memLeft-=arrayStore;
  configPut(config,"nodestore.db",nodeStore);
  configPut(config,"relationshipstore.db",relStore);
  configPut(config,"propertystore.db",propStore);
  configPut(config,"propertystore.db.strings",stringStore);
  configPut(config,"propertystore.db.arrays",arrayStore);
}
