{
  final Title title=description.getAnnotation(Title.class);
  final Documented doc=description.getAnnotation(Documented.class);
  GraphDescription.Graph g=description.getAnnotation(GraphDescription.Graph.class);
  if (g == null)   g=description.getTestClass().getAnnotation(GraphDescription.Graph.class);
  final GraphDescription graph=GraphDescription.create(g);
  return new Statement(){
    @Override public void evaluate() throws Throwable {
      product.set(create(graph,title == null ? null : title.value(),doc == null ? null : doc.value(),description.getMethodName()));
      try {
        try {
          base.evaluate();
        }
 catch (        Throwable err) {
          try {
            destroy(get(false),false);
          }
 catch (          Throwable sub) {
            List<Throwable> failures=new ArrayList<Throwable>();
            if (err instanceof MultipleFailureException) {
              failures.addAll(((MultipleFailureException)err).getFailures());
            }
 else {
              failures.add(err);
            }
            failures.add(sub);
            throw new MultipleFailureException(failures);
          }
          throw err;
        }
        destroy(get(false),false);
      }
  finally {
        product.set(null);
      }
    }
  }
;
}
