{
  return new Callback<R>(){
    private final long start=clock.millis();
    private long queueTime=0;
    @Override public void started(){
      queueTime=clock.millis() - start;
      monitor.processingStarted(queueTime);
      callback.started();
    }
    @Override public void result(    R result) throws Exception {
      callback.result(result);
    }
    @Override public void failure(    Neo4jError err){
      callback.failure(err);
      callMonitorDone();
    }
    @Override public void completed(){
      callback.completed();
      callMonitorDone();
    }
    @Override public void ignored(){
      callback.ignored();
      callMonitorDone();
    }
    private void callMonitorDone(){
      monitor.processingDone((clock.millis() - start) - queueTime);
    }
  }
;
}
