{
  return new Callback<R,A>(){
    private final long start=clock.millis();
    private long queueTime=0;
    @Override public void started(    A attachment){
      queueTime=clock.millis() - start;
      monitor.processingStarted(queueTime);
      callback.started(attachment);
    }
    @Override public void result(    R result,    A attachment) throws Exception {
      callback.result(result,attachment);
    }
    @Override public void failure(    Neo4jError err,    A attachment){
      callback.failure(err,attachment);
      callMonitorDone();
    }
    @Override public void completed(    A attachment){
      callback.completed(attachment);
      callMonitorDone();
    }
    @Override public void ignored(    A attachment){
      callback.ignored(attachment);
      callMonitorDone();
    }
    private void callMonitorDone(){
      monitor.processingDone((clock.millis() - start) - queueTime);
    }
  }
;
}
