{
  try {
    IdGeneratorImpl.createGenerator(idGeneratorFile());
    IdGenerator idGenerator=new IdGeneratorImpl(idGeneratorFile(),2,1000,false);
    idGenerator.close();
    try {
      idGenerator.nextId();
      fail("nextId after close should throw exception");
    }
 catch (    IllegalStateException e) {
    }
    try {
      idGenerator.freeId(0);
      fail("freeId after close should throw exception");
    }
 catch (    IllegalStateException e) {
    }
    idGenerator=new IdGeneratorImpl(idGeneratorFile(),2,1000,false);
    assertEquals(0l,idGenerator.nextId());
    assertEquals(1l,idGenerator.nextId());
    assertEquals(2l,idGenerator.nextId());
    idGenerator.close();
    try {
      idGenerator.nextId();
      fail("nextId after close should throw exception");
    }
 catch (    IllegalStateException e) {
    }
    try {
      idGenerator.freeId(0);
      fail("freeId after close should throw exception");
    }
 catch (    IllegalStateException e) {
    }
  }
  finally {
    File file=new File(idGeneratorFile());
    if (file.exists()) {
      assertTrue(file.delete());
    }
  }
}
