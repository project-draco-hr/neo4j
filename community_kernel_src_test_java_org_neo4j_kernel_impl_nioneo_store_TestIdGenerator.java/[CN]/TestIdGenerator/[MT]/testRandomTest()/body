{
  int numberOfCloses=0;
  java.util.Random random=new java.util.Random(System.currentTimeMillis());
  int capacity=random.nextInt(1024) + 1024;
  int grabSize=random.nextInt(128) + 128;
  IdGeneratorImpl.createGenerator(fs,idGeneratorFile());
  IdGenerator idGenerator=new IdGeneratorImpl(fs,idGeneratorFile(),grabSize,capacity * 2,false,0);
  List<Long> idsTaken=new ArrayList<Long>();
  float releaseIndex=0.25f;
  float closeIndex=0.05f;
  int currentIdCount=0;
  try {
    while (currentIdCount < capacity) {
      float rIndex=random.nextFloat();
      if (rIndex < releaseIndex && currentIdCount > 0) {
        idGenerator.freeId(idsTaken.remove(random.nextInt(currentIdCount)).intValue());
        currentIdCount--;
      }
 else {
        idsTaken.add(idGenerator.nextId());
        currentIdCount++;
      }
      if (rIndex > (1.0f - closeIndex) || rIndex < closeIndex) {
        closeIdGenerator(idGenerator);
        grabSize=random.nextInt(128) + 128;
        idGenerator=new IdGeneratorImpl(fs,idGeneratorFile(),grabSize,capacity * 2,false,0);
        numberOfCloses++;
      }
    }
    closeIdGenerator(idGenerator);
  }
  finally {
    File file=idGeneratorFile();
    if (file.exists()) {
      assertTrue(file.delete());
    }
  }
}
