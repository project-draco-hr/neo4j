{
  File dir=new File("dir");
  fs.get().mkdirs(dir);
  StoreFactory storeFactory=new StoreFactory(fs.get(),dir,pageCache.getPageCache(fs.get()),StandardV3_0.RECORD_FORMATS,NullLogProvider.getInstance());
  try (NeoStores stores=storeFactory.openNeoStores(true,StoreType.RELATIONSHIP_GROUP)){
    RecordStore<RelationshipGroupRecord> store=spy(stores.getRelationshipGroupStore());
    RelationshipGroupRecord group_2=group(0,2);
    RelationshipGroupRecord group_4=group(1,4);
    RelationshipGroupRecord group_10=group(2,10);
    RelationshipGroupRecord group_23=group(3,23);
    link(group_2,group_4,group_10,group_23);
    store.updateRecord(group_2);
    store.updateRecord(group_4);
    store.updateRecord(group_10);
    store.updateRecord(group_23);
    RelationshipGroupGetter groupGetter=new RelationshipGroupGetter(store);
    NodeRecord node=new NodeRecord(0,true,group_2.getId(),-1);
    RecordAccess<Long,RelationshipGroupRecord,Integer> access=new DirectRecordAccess<>(store,Loaders.relationshipGroupLoader(store));
    RelationshipGroupPosition result=groupGetter.getRelationshipGroup(node,7,access);
    InOrder verification=inOrder(store);
    verification.verify(store).getRecord(eq(group_2.getId()),any(RelationshipGroupRecord.class),any(RecordLoad.class));
    verification.verify(store).getRecord(eq(group_4.getId()),any(RelationshipGroupRecord.class),any(RecordLoad.class));
    verification.verify(store).getRecord(eq(group_10.getId()),any(RelationshipGroupRecord.class),any(RecordLoad.class));
    verification.verify(store,times(0)).getRecord(eq(group_23.getId()),any(RelationshipGroupRecord.class),any(RecordLoad.class));
    assertNull(result.group());
    assertEquals(group_4,result.closestPrevious().forReadingData());
  }
 }
