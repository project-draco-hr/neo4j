{
  PhysicalLogNeoCommandReaderV0_20 reader=new PhysicalLogNeoCommandReaderV0_20();
  RelationshipRecord writtenRecord=new RelationshipRecord(1,2,3,4);
  writtenRecord.setInUse(true);
  writtenRecord.setSecondPrevRel(3);
  writtenRecord.setFirstPrevRel(Record.NO_PREV_RELATIONSHIP.intValue());
  writtenRecord.setFirstInSecondChain(false);
  ReadableLogChannel mockChannel=mock(ReadableLogChannel.class);
  when(mockChannel.get()).thenReturn(NeoCommandType.REL_COMMAND).thenReturn((byte)1);
  when(mockChannel.getLong()).thenReturn(writtenRecord.getId()).thenReturn(writtenRecord.getFirstNode()).thenReturn(writtenRecord.getSecondNode()).thenReturn(writtenRecord.getFirstPrevRel()).thenReturn(writtenRecord.getFirstNextRel()).thenReturn(writtenRecord.getSecondPrevRel()).thenReturn(writtenRecord.getSecondNextRel()).thenReturn(writtenRecord.getNextProp());
  when(mockChannel.getInt()).thenReturn(writtenRecord.getType());
  Command result=reader.read(mockChannel);
  assertTrue(result instanceof Command.RelationshipCommand);
  Command.RelationshipCommand relCommand=(Command.RelationshipCommand)result;
  RelationshipRecord readRecord=relCommand.getRecord();
  assertTrue(readRecord.isFirstInFirstChain());
  assertFalse(readRecord.isFirstInSecondChain());
}
