{
  this.file=file;
  this.random=new Random(System.currentTimeMillis());
  StoreChannel channel=null;
  boolean success=false;
  try {
    if (!fileSystem.fileExists(file) || fileSystem.getFileSize(file) == 0)     create(file,fileSystem,expectedVersion);
    channel=fileSystem.open(file,"rw");
    Long[] records=readRecordsWithNullDefaults(channel,RECORD_COUNT,allowUpgrade);
    creationTime=records[0].longValue();
    randomIdentifier=records[1].longValue();
    version=records[2].longValue();
    lastCommittedTx=records[3].longValue();
    Long readIndexVersion=records[4];
    fileChannel=channel;
    boolean versionDiffers=compareExpectedVersionWithStoreVersion(expectedVersion,allowUpgrade,readIndexVersion);
    indexVersion=expectedVersion;
    if (versionDiffers)     writeOut();
    success=true;
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (!success && channel != null) {
      try {
        channel.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
