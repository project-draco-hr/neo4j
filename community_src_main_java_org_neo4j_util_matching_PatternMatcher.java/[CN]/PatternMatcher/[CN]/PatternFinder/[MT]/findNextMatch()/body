{
  if (callStack.isEmpty() && currentPosition != null) {
    if (traverse(currentPosition,true)) {
      currentPosition=null;
      HashMap<PatternNode,PatternElement> filteredElements=new HashMap<PatternNode,PatternElement>();
      for (      PatternElement element : foundElements) {
        filteredElements.put(element.getPatternNode(),element);
      }
      PatternMatch patternMatch=new PatternMatch(filteredElements);
      foundElements.pop();
      return patternMatch;
    }
    currentPosition=null;
  }
 else   if (!callStack.isEmpty()) {
    boolean matchFound=false;
    do {
      CallPosition callStackInformation=callStack.peek();
      matchFound=traverse(callStackInformation);
    }
 while (!callStack.isEmpty() && !matchFound);
    if (matchFound) {
      HashMap<PatternNode,PatternElement> filteredElements=new HashMap<PatternNode,PatternElement>();
      for (      PatternElement element : foundElements) {
        filteredElements.put(element.getPatternNode(),element);
      }
      PatternMatch patternMatch=new PatternMatch(filteredElements);
      foundElements.pop();
      return patternMatch;
    }
  }
  return null;
}
