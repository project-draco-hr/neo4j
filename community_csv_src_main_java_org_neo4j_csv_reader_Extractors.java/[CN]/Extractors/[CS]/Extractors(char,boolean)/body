{
  try {
    for (    Field field : getClass().getDeclaredFields()) {
      if (isStatic(field.getModifiers())) {
        Object value=field.get(null);
        if (value instanceof Extractor) {
          instances.put(field.getName(),(Extractor<?>)value);
        }
      }
    }
    add(string=new StringExtractor(emptyStringsAsNull));
    add(long_=new LongExtractor());
    add(int_=new IntExtractor());
    add(char_=new CharExtractor());
    add(short_=new ShortExtractor());
    add(byte_=new ByteExtractor());
    add(boolean_=new BooleanExtractor());
    add(float_=new FloatExtractor());
    add(double_=new DoubleExtractor());
    add(stringArray=new StringArrayExtractor(arrayDelimiter));
    add(booleanArray=new BooleanArrayExtractor(arrayDelimiter));
    add(byteArray=new ByteArrayExtractor(arrayDelimiter));
    add(shortArray=new ShortArrayExtractor(arrayDelimiter));
    add(intArray=new IntArrayExtractor(arrayDelimiter));
    add(longArray=new LongArrayExtractor(arrayDelimiter));
    add(floatArray=new FloatArrayExtractor(arrayDelimiter));
    add(doubleArray=new DoubleArrayExtractor(arrayDelimiter));
  }
 catch (  IllegalAccessException e) {
    throw new Error("Bug in reflection code gathering all extractors");
  }
}
