{
  int pos=0;
  while (pos < s.length()) {
    char c=s.charAt(pos);
    int closing;
switch (c) {
case ' ':
      ++pos;
    break;
case '\'':
  closing=s.lastIndexOf('\'');
if (closing < 0) {
  throw new IllegalArgumentException("Did not find a matching end quote, '");
}
return s.substring(pos + 1,closing);
case '\"':
closing=s.lastIndexOf('\"');
if (closing < 0) {
throw new IllegalArgumentException("Did not find a matching end quote, \"");
}
return s.substring(pos + 1,closing);
case '{':
return parseMap(s.substring(pos));
case '[':
if (type instanceof ParameterizedType) {
return parseList(s.substring(pos),((ParameterizedType)type).getActualTypeArguments()[0]);
}
 else {
return parseList(s.substring(pos),Object.class);
}
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
String number=s.substring(pos);
try {
return Long.parseLong(number);
}
 catch (NumberFormatException e) {
return Double.parseDouble(number);
}
case 'n':
if (s.charAt(pos + 1) == 'u' && s.charAt(pos + 2) == 'l' && s.charAt(pos + 3) == 'l') {
return null;
}
case 't':
if (s.charAt(pos + 1) == 'r' && s.charAt(pos + 2) == 'u' && s.charAt(pos + 3) == 'e') {
return true;
}
case 'f':
if (s.charAt(pos + 1) == 'a' && s.charAt(pos + 2) == 'l' && s.charAt(pos + 3) == 's' && s.charAt(pos + 4) == 'e') {
return false;
}
default :
throw new IllegalArgumentException(String.format("%s is not a valid value",s));
}
}
throw new IllegalArgumentException(String.format("%s is not a valid value",s));
}
