{
  if (position < 0) {
    return null;
  }
  if (first && anyMatchFound()) {
    first=false;
    return PatternMatch.merge(currentMatches);
  }
  boolean found=false;
  for (; position >= 0; position--) {
    if (optionalFinders.get(position).hasNext()) {
      currentMatches.set(position,optionalFinders.get(position).next());
      if (position < currentMatches.size() - 1) {
        position++;
        reset(position);
      }
      found=true;
      break;
    }
  }
  if (!found) {
    return null;
  }
  return PatternMatch.merge(currentMatches);
}
