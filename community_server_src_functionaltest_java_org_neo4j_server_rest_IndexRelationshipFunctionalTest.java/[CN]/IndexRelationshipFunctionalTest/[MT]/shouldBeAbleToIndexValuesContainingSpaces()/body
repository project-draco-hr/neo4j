{
  long startNodeId=helper.createNode();
  long endNodeId=helper.createNode();
  String relationshiptype="tested-together";
  long relationshipId=helper.createRelationship(relationshiptype,startNodeId,endNodeId);
  String key="key";
  String value="value with   spaces  in it";
  value=URIHelper.encode(value);
  String indexName="spacey-values";
  helper.createRelationshipIndex(indexName);
  String entity=JsonHelper.createJsonFrom(functionalTestHelper.relationshipUri(relationshipId));
  JaxRsResponse response=httpPostIndexRelationshipNameKeyValue(indexName,key,value,entity,MediaType.APPLICATION_JSON_TYPE,MediaType.APPLICATION_JSON_TYPE);
  assertEquals(Status.CREATED.getStatusCode(),response.getStatus());
  URI location=response.getLocation();
  response.close();
  response=httpGetIndexRelationshipNameKeyValue(indexName,key,value,MediaType.APPLICATION_JSON_TYPE);
  assertEquals(Status.OK.getStatusCode(),response.getStatus());
  String responseEntity=response.getEntity(String.class);
  Collection<?> hits=(Collection<?>)JsonHelper.jsonToSingleValue(responseEntity);
  assertEquals(1,hits.size());
  response.close();
  Client.create().resource(location).delete();
  response=httpGetIndexRelationshipNameKeyValue(indexName,key,value,MediaType.APPLICATION_JSON_TYPE);
  assertEquals(200,response.getStatus());
  responseEntity=response.getEntity(String.class);
  hits=(Collection<?>)JsonHelper.jsonToSingleValue(responseEntity);
  assertEquals(0,hits.size());
  response.close();
}
