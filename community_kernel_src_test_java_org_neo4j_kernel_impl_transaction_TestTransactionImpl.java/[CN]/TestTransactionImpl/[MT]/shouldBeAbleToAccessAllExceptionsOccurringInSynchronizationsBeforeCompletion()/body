{
  TxManager mockedTxManager=mock(TxManager.class);
  TransactionImpl tx=new TransactionImpl(getNewGlobalId(DEFAULT_SEED,0),mockedTxManager,ForceMode.forced,TransactionStateFactory.noStateFactory(new DevNullLoggingService()),new SystemOutLogging().getMessagesLog(TxManager.class));
  final RuntimeException firstException=new RuntimeException("Ex1");
  Synchronization meanSync1=new Synchronization(){
    @Override public void beforeCompletion(){
      throw firstException;
    }
    @Override public void afterCompletion(    int status){
    }
  }
;
  final RuntimeException secondException=new RuntimeException("Ex1");
  Synchronization meanSync2=new Synchronization(){
    @Override public void beforeCompletion(){
      throw secondException;
    }
    @Override public void afterCompletion(    int status){
    }
  }
;
  tx.registerSynchronization(meanSync1);
  tx.registerSynchronization(meanSync2);
  tx.doBeforeCompletion();
  assertThat(tx.getRollbackCause(),is(instanceOf(MultipleCauseException.class)));
  MultipleCauseException error=(MultipleCauseException)tx.getRollbackCause();
  assertThat(error.getCause(),is((Throwable)firstException));
  assertThat(error.getCauses().size(),is(2));
  assertThat(error.getCauses().get(0),is((Throwable)firstException));
  assertThat(error.getCauses().get(1),is((Throwable)secondException));
}
