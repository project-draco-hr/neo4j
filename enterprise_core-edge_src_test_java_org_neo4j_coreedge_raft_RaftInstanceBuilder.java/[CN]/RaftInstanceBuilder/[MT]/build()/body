{
  LeaderOnlyReplicator<MEMBER,MEMBER> leaderOnlyReplicator=new LeaderOnlyReplicator<>(member,member,outbound);
  RaftMembershipManager<MEMBER> membershipManager=new RaftMembershipManager<>(leaderOnlyReplicator,memberSetBuilder,raftLog,logProvider,expectedClusterSize,electionTimeout,clock,catchupTimeout,raftMembership);
  RaftLogShippingManager<MEMBER> logShipping=new RaftLogShippingManager<>(outbound,logProvider,raftLog,clock,member,membershipManager,retryTimeMillis,catchupBatchSize,maxAllowedShippingLag);
  return new RaftInstance<>(member,termState,voteState,raftLog,raftStateMachine,electionTimeout,heartbeatInterval,renewableTimeoutService,inbound,outbound,logProvider,membershipManager,logShipping,databaseHealthSupplier,monitors);
}
