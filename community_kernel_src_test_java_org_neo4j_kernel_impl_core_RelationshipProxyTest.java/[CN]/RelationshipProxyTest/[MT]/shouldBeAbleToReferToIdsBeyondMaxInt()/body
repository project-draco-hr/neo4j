{
  RelationshipActions actions=mock(RelationshipActions.class);
  when(actions.newNodeProxy(anyLong())).then(new Answer<Node>(){
    @Override public Node answer(    InvocationOnMock invocation) throws Throwable {
      return nodeWithId((Long)invocation.getArguments()[0]);
    }
  }
);
  when(actions.getRelationshipTypeById(anyInt())).then(new Answer<RelationshipType>(){
    @Override public RelationshipType answer(    InvocationOnMock invocation) throws Throwable {
      return new RelationshipTypeToken("whatever",(Integer)invocation.getArguments()[0]);
    }
  }
);
  long[] ids=new long[]{1437589437,2047587483,2147496246L,2147342921,3276473721L,4762746373L,57587348738L,59892898932L};
  int[] types=new int[]{0,10,101,3024,20123,45008};
  for (int i=0; i < ids.length - 2; i++) {
    long id=ids[i];
    long nodeId1=ids[i + 1];
    long nodeId2=ids[i + 2];
    int type=types[i];
    verifyIds(actions,id,nodeId1,type,nodeId2);
    verifyIds(actions,id,nodeId2,type,nodeId1);
  }
}
