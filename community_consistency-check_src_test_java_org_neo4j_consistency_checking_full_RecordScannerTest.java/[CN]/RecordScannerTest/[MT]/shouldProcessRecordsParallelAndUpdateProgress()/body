{
  ProgressMonitorFactory.MultiPartBuilder progressBuilder=mock(ProgressMonitorFactory.MultiPartBuilder.class);
  ProgressListener progressListener=mock(ProgressListener.class);
  when(progressBuilder.progressForPart(anyString(),anyLong())).thenReturn(progressListener);
  @SuppressWarnings("unchecked") BoundedIterable<Integer> store=mock(BoundedIterable.class);
  when(store.iterator()).thenReturn(asList(42,75,192).iterator());
  @SuppressWarnings("unchecked") RecordProcessor<Integer> recordProcessor=mock(RecordProcessor.class);
  RecordScanner<Integer> scanner=new ParallelRecordScanner<>("our test task",Statistics.NONE,1,store,progressBuilder,recordProcessor,CacheAccess.EMPTY,QueueDistribution.ROUND_ROBIN);
  scanner.run();
  verifyProcessCloseAndDone(recordProcessor,store,progressListener);
}
