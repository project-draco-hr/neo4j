def subs_tag(tag, dict={}):
    'Perform attribute substitution and split tag string returning start, end\n    tag tuple (c.f. Config.tag()).'
    if (not tag):
        return [None, None]
    s = subs_attrs(tag, dict)
    if (not s):
        message.warning(("tag '%s' dropped: contains undefined attribute" % tag))
        return [None, None]
    result = s.split('|')
    if (len(result) == 1):
        return (result + [None])
    elif (len(result) == 2):
        return result
    else:
        raise EAsciiDoc, ('malformed tag: %s' % tag)
