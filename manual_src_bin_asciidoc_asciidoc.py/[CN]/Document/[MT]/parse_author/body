def parse_author(self, s):
    ' Return False if the author is malformed.'
    attrs = self.attributes
    s = s.strip()
    mo = re.match('^(?P<name1>[^<>\\s]+)(\\s+(?P<name2>[^<>\\s]+))?(\\s+(?P<name3>[^<>\\s]+))?(\\s+<(?P<email>\\S+)>)?$', s)
    if (not mo):
        if s:
            attrs['firstname'] = s
        return
    firstname = mo.group('name1')
    if mo.group('name3'):
        middlename = mo.group('name2')
        lastname = mo.group('name3')
    else:
        middlename = None
        lastname = mo.group('name2')
    firstname = firstname.replace('_', ' ')
    if middlename:
        middlename = middlename.replace('_', ' ')
    if lastname:
        lastname = lastname.replace('_', ' ')
    email = mo.group('email')
    if firstname:
        attrs['firstname'] = firstname
    if middlename:
        attrs['middlename'] = middlename
    if lastname:
        attrs['lastname'] = lastname
    if email:
        attrs['email'] = email
    return
