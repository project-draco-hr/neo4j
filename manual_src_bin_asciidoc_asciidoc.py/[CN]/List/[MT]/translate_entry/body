def translate_entry(self):
    assert (self.type == 'labeled')
    entrytag = subs_tag(self.tag.entry, self.attributes)
    labeltag = subs_tag(self.tag.label, self.attributes)
    writer.write(entrytag[0], trace='list entry open')
    writer.write(labeltag[0], trace='list label open')
    while (Lex.next() is self):
        reader.read()
        writer.write_tag(self.tag.term, [self.label], self.presubs, self.attributes, trace='list term')
        if self.text:
            break
    writer.write(labeltag[1], trace='list label close')
    self.translate_item()
    writer.write(entrytag[1], trace='list entry close')
