def dump(self):
    'Dump configuration to stdout.'
    hdr = ''
    hdr = ((hdr + '#') + writer.newline)
    hdr = (hdr + ('# Generated by AsciiDoc %s for %s %s.%s' % (VERSION, document.backend, document.doctype, writer.newline)))
    t = time.asctime(time.localtime(time.time()))
    hdr = (hdr + ('# %s%s' % (t, writer.newline)))
    hdr = ((hdr + '#') + writer.newline)
    sys.stdout.write(hdr)
    d = {}
    d.update(self.conf_attrs)
    d.update(self.cmd_attrs)
    dump_section('attributes', d)
    Title.dump()
    dump_section('quotes', self.quotes)
    dump_section('specialcharacters', self.specialchars)
    d = {}
    for (k, v) in self.specialwords.items():
        if (v in d):
            d[v] = ('%s "%s"' % (d[v], k))
        else:
            d[v] = ('"%s"' % k)
    dump_section('specialwords', d)
    dump_section('replacements', self.replacements)
    dump_section('replacements2', self.replacements2)
    dump_section('specialsections', self.specialsections)
    d = {}
    for (k, v) in self.tags.items():
        d[k] = ('%s|%s' % v)
    dump_section('tags', d)
    paragraphs.dump()
    lists.dump()
    blocks.dump()
    tables_OLD.dump()
    tables.dump()
    macros.dump()
    for k in self.sections.keys():
        if (not self.entries_section(k)):
            sys.stdout.write(('[%s]%s' % (k, writer.newline)))
            for line in self.sections[k]:
                sys.stdout.write(('%s%s' % (line, writer.newline)))
            sys.stdout.write(writer.newline)
