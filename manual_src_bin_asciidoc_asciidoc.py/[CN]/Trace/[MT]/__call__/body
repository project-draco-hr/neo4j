def __call__(self, name, before, after=None):
    "\n        Print trace message if tracing is on and the trace 'name' matches the\n        document 'trace' attribute (treated as a regexp).\n        'before' is the source text before substitution; 'after' text is the\n        source text after substitutuion.\n        The 'before' and 'after' messages are only printed if they differ.\n        "
    name_re = document.attributes.get('trace')
    if (name_re == 'subs'):
        name_re = '|'.join(self.SUBS_NAMES)
    self.name_re = name_re
    if (self.name_re is not None):
        msg = message.format(name, 'TRACE: ', self.linenos, offset=self.offset)
        if ((before != after) and re.match(self.name_re, name)):
            if is_array(before):
                before = '\n'.join(before)
            if (after is None):
                msg += ('\n%s\n' % before)
            else:
                if is_array(after):
                    after = '\n'.join(after)
                msg += ('\n<<<\n%s\n>>>\n%s\n' % (before, after))
            message.stderr(msg)
