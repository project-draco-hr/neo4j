def parse_rows(self, rows, rtag, dtag):
    'Parse rows list using the row and data tags. Returns a substituted\n        list of output lines.'
    result = []
    if (self.format == 'fixed'):
        rows = self.parse_fixed(rows)
    elif (self.format == 'csv'):
        rows = self.parse_csv(rows)
    elif (self.format == 'dsv'):
        rows = self.parse_dsv(rows)
    else:
        assert True, 'illegal table format'
    (stag, etag) = subs_tag(rtag, self.attributes)
    for row in rows:
        result.append(('  ' + stag))
        for data in self.subs_row(row, dtag):
            result.append(('    ' + data))
        result.append(('  ' + etag))
    return result
