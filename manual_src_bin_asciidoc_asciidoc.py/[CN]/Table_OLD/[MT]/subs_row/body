def subs_row(self, data, dtag):
    'Substitute the list of source row data elements using the data tag.\n        Returns a substituted list of output table data items.'
    result = []
    if (len(data) < len(self.columns)):
        message.warning('fewer row data items then table columns')
    if (len(data) > len(self.columns)):
        message.warning('more row data items than table columns')
    for i in range(len(self.columns)):
        if (i > (len(data) - 1)):
            d = ''
        else:
            d = data[i]
        c = self.columns[i]
        self.attributes['colalign'] = c.colalign
        self.attributes['colwidth'] = str(int(c.colwidth))
        self.attributes['colnumber'] = str((i + 1))
        (stag, etag) = subs_tag(dtag, self.attributes)
        subs = self.get_subs()[0]
        if ('replacements2' in subs):
            d = re.sub('(?m)\\n', ' +\\n', d)
            d = d.split('\n')
        else:
            d = [d]
        result = (((result + [stag]) + Lex.subs(d, subs)) + [etag])
    return result
