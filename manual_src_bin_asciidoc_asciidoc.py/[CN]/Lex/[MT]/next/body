@staticmethod
def next():
    'Returns class of next element on the input (None if EOF).  The\n        reader is assumed to be at the first line following a previous element,\n        end of file or line one.  Exits with the reader pointing to the first\n        line of the next element or EOF (leading blank lines are skipped).'
    reader.skip_blank_lines()
    if reader.eof():
        return None
    if (Lex.prev_element and (Lex.prev_cursor == reader.cursor)):
        return Lex.prev_element
    if AttributeEntry.isnext():
        result = AttributeEntry
    elif AttributeList.isnext():
        result = AttributeList
    elif (BlockTitle.isnext() and (not tables_OLD.isnext())):
        result = BlockTitle
    elif Title.isnext():
        if (AttributeList.style() == 'float'):
            result = FloatingTitle
        else:
            result = Title
    elif macros.isnext():
        result = macros.current
    elif lists.isnext():
        result = lists.current
    elif blocks.isnext():
        result = blocks.current
    elif tables_OLD.isnext():
        result = tables_OLD.current
    elif tables.isnext():
        result = tables.current
    else:
        if (not paragraphs.isnext()):
            raise EAsciiDoc, 'paragraph expected'
        result = paragraphs.current
    Lex.prev_cursor = reader.cursor
    Lex.prev_element = result
    return result
