@staticmethod
def subs_1(s, options):
    "Perform substitution specified in 'options' (in 'options' order)."
    if (not s):
        return s
    if (document.attributes.get('plaintext') is not None):
        options = ('specialcharacters',)
    result = s
    options = Lex.canonical_subs(options)
    for o in options:
        if (o == 'specialcharacters'):
            result = config.subs_specialchars(result)
        elif (o == 'attributes'):
            result = subs_attrs(result)
        elif (o == 'quotes'):
            result = subs_quotes(result)
        elif (o == 'specialwords'):
            result = config.subs_specialwords(result)
        elif (o in ('replacements', 'replacements2')):
            result = config.subs_replacements(result, o)
        elif (o == 'macros'):
            result = macros.subs(result)
        elif (o == 'callouts'):
            result = macros.subs(result, callouts=True)
        else:
            raise EAsciiDoc, ('illegal substitution option: %s' % o)
        trace(o, s, result)
        if (not result):
            break
    return result
