def dump(self):
    'Write block definition to stdout.'
    write = (lambda s: sys.stdout.write(('%s%s' % (s, writer.newline))))
    write((('[' + self.name) + ']'))
    if self.is_conf_entry('delimiter'):
        write(('delimiter=' + self.delimiter))
    if self.template:
        write(('template=' + self.template))
    if self.options:
        write(('options=' + ','.join(self.options)))
    if self.presubs:
        if self.postsubs:
            write(('presubs=' + ','.join(self.presubs)))
        else:
            write(('subs=' + ','.join(self.presubs)))
    if self.postsubs:
        write(('postsubs=' + ','.join(self.postsubs)))
    if self.filter:
        write(('filter=' + self.filter))
    if self.posattrs:
        write(('posattrs=' + ','.join(self.posattrs)))
    if self.style:
        write(('style=' + self.style))
    if self.styles:
        for (style, d) in self.styles.items():
            s = ''
            for (k, v) in d.items():
                s += ('%s=%r,' % (k, v))
            write(('%s-style=%s' % (style, s[:(-1)])))
