{
  super(conf.coordinators(),storeIdGetter,stringLogger,conf.read_timeout(Client.DEFAULT_READ_RESPONSE_TIMEOUT_SECONDS),conf.lock_read_timeout(conf.read_timeout(Client.DEFAULT_READ_RESPONSE_TIMEOUT_SECONDS)),conf.max_concurrent_channels_per_slave(Client.DEFAULT_MAX_NUMBER_OF_CONCURRENT_CHANNELS_PER_CLIENT),conf.zk_session_timeout(HaConfig.CONFIG_DEFAULT_ZK_SESSION_TIMEOUT));
  this.storeDir=storeDir;
  this.storeIdGetter=storeIdGetter;
  this.conf=conf;
  this.receiver=receiver;
  machineId=conf.server_id();
  backupPort=conf.online_backup_port(Server.DEFAULT_BACKUP_PORT);
  haServer=conf.server(defaultServer());
  writeLastCommittedTx=conf.slave_coordinator_update_mode(SlaveUpdateMode.async).syncWithZooKeeper;
  clusterName=conf.cluster_name(HaConfig.CONFIG_DEFAULT_HA_CLUSTER_NAME);
  sequenceNr="not initialized yet";
  allowCreateCluster=conf.allow_init_cluster(true);
  try {
    zooKeeper=new ZooKeeper(getServers(),getSessionTimeout(),new WatcherImpl());
  }
 catch (  IOException e) {
    throw new ZooKeeperException("Unable to create zoo keeper client",e);
  }
}
