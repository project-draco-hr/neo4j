{
  GraphDatabaseService db=new TestGraphDatabaseFactory().newEmbeddedDatabaseBuilder(testDir.graphDbDir()).setConfig(GraphDatabaseSettings.store_internal_debug_contexts,getClass().getName() + ",java.io").newGraphDatabase();
  LogService logService=((GraphDatabaseAPI)db).getDependencyResolver().resolveDependency(LogService.class);
  logService.getInternalLog(getClass()).debug("A debug entry");
  logService.getInternalLog(GraphDatabaseService.class).debug("A GDS debug entry");
  logService.getInternalLog(StringWriter.class).debug("A SW debug entry");
  db.shutdown();
  final File internalLog=new File(testDir.graphDbDir(),StoreLogService.INTERNAL_LOG_NAME);
  assertThat(internalLog.isFile(),is(true));
  assertThat(internalLog.length(),greaterThan(0L));
  assertThat(IteratorUtil.count(asIterable(internalLog,"UTF-8"),new Predicate<String>(){
    @Override public boolean test(    String line){
      return line.contains("A debug entry");
    }
  }
),is(1));
  assertThat(IteratorUtil.count(asIterable(internalLog,"UTF-8"),new Predicate<String>(){
    @Override public boolean test(    String line){
      return line.contains("A GDS debug entry");
    }
  }
),is(0));
  assertThat(IteratorUtil.count(asIterable(internalLog,"UTF-8"),new Predicate<String>(){
    @Override public boolean test(    String line){
      return line.contains("A SW debug entry");
    }
  }
),is(1));
}
