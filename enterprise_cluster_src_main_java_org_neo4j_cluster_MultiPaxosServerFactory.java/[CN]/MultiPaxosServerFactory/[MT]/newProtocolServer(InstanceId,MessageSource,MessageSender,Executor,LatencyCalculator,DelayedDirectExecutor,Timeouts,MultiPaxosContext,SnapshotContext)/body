{
  return constructSupportingInfrastructureFor(me,input,output,executor,timeouts,latencyCalculator,stateMachineExecutor,context,new StateMachine[]{new StateMachine(context.getAtomicBroadcastContext(),AtomicBroadcastMessage.class,AtomicBroadcastState.start,logging),new StateMachine(context.getAcceptorContext(),AcceptorMessage.class,AcceptorState.start,logging),new StateMachine(context.getProposerContext(),ProposerMessage.class,ProposerState.start,logging),new StateMachine(context.getLearnerContext(),LearnerMessage.class,LearnerState.start,logging),new StateMachine(context.getHeartbeatContext(),HeartbeatMessage.class,HeartbeatState.start,logging),new StateMachine(context.getElectionContext(),ElectionMessage.class,ElectionState.start,logging),new StateMachine(snapshotContext,SnapshotMessage.class,SnapshotState.start,logging),new StateMachine(context.getClusterContext(),ClusterMessage.class,ClusterState.start,logging)});
}
