{
  GraphDatabaseAPI db=createDb(storeDir,defaultBackupPortHostParams());
  for (int i=0; i < 100; i++) {
    createAndIndexNode(db,i);
  }
  File oldLog=db.getDependencyResolver().resolveDependency(LogFile.class).currentLogFile();
  db.getDependencyResolver().resolveDependency(PhysicalLogFile.class).forceRotate();
  for (int i=0; i < 1; i++) {
    createAndIndexNode(db,i);
  }
  db.getDependencyResolver().resolveDependency(PhysicalLogFile.class).forceRotate();
  long lastCommittedTxBefore=db.getDependencyResolver().resolveDependency(NeoStore.class).getLastCommittedTransactionId();
  db.shutdown();
  FileUtils.deleteFile(oldLog);
  db=createDb(storeDir,defaultBackupPortHostParams());
  long lastCommittedTxAfter=db.getDependencyResolver().resolveDependency(NeoStore.class).getLastCommittedTransactionId();
  BackupService backupService=new BackupService(fileSystem);
  BackupService.BackupOutcome outcome=backupService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsolutePath(),true,defaultConfig(),BackupClient.BIG_READ_TIMEOUT);
  db.shutdown();
  assertEquals(lastCommittedTxBefore,lastCommittedTxAfter);
  assertTrue(outcome.isConsistent());
  assertEquals(DbRepresentation.of(storeDir),DbRepresentation.of(backupDir));
}
