{
  defaultBackupPortHostParams();
  GraphDatabaseAPI db=dbRule.getGraphDatabaseAPI();
  for (int i=0; i < 100; i++) {
    createAndIndexNode(db,i);
  }
  final File oldLog=db.getDependencyResolver().resolveDependency(LogFile.class).currentLogFile();
  rotateAndCheckPoint(db);
  for (int i=0; i < 1; i++) {
    createAndIndexNode(db,i);
  }
  rotateAndCheckPoint(db);
  long lastCommittedTxBefore=db.getDependencyResolver().resolveDependency(NeoStore.class).getLastCommittedTransactionId();
  db=dbRule.restartDatabase(new DatabaseRule.RestartAction(){
    @Override public void run(    FileSystemAbstraction fs,    File storeDirectory) throws IOException {
      FileUtils.deleteFile(oldLog);
    }
  }
);
  long lastCommittedTxAfter=db.getDependencyResolver().resolveDependency(NeoStore.class).getLastCommittedTransactionId();
  BackupService backupService=backupService();
  BackupService.BackupOutcome outcome=backupService.doFullBackup(BACKUP_HOST,backupPort,backupDir.getAbsoluteFile(),true,dbRule.getConfigCopy(),BackupClient.BIG_READ_TIMEOUT,false);
  db.shutdown();
  assertEquals(lastCommittedTxBefore,lastCommittedTxAfter);
  assertTrue(outcome.isConsistent());
  assertEquals(DbRepresentation.of(storeDir),DbRepresentation.of(backupDir));
}
