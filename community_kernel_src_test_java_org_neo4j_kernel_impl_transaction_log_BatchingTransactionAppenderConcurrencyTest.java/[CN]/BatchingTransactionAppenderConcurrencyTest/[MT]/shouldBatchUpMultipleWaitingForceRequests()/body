{
  channelCommandQueue.put(ChannelCommand.dummy);
  final BatchingTransactionAppender appender=life.add(new BatchingTransactionAppender(logFile,logRotation,transactionMetadataCache,transactionIdStore,legacyIndexTransactionOrdering,databaseHealth));
  life.start();
  Runnable runnable=createForceAfterAppendRunnable(appender);
  Future<?> future=executor.submit(runnable);
  forceSemaphore.acquire();
  Thread[] otherThreads=new Thread[10];
  for (int i=0; i < otherThreads.length; i++) {
    otherThreads[i]=fork(runnable);
  }
  for (  Thread otherThread : otherThreads) {
    awaitThreadState(otherThread,5000,Thread.State.TIMED_WAITING);
  }
  assertThat(channelCommandQueue.take(),is(ChannelCommand.dummy));
  assertThat(channelCommandQueue.take(),is(ChannelCommand.emptyBufferIntoChannelAndClearIt));
  assertThat(channelCommandQueue.take(),is(ChannelCommand.force));
  assertThat(channelCommandQueue.take(),is(ChannelCommand.emptyBufferIntoChannelAndClearIt));
  assertThat(channelCommandQueue.take(),is(ChannelCommand.force));
  future.get();
  for (  Thread otherThread : otherThreads) {
    otherThread.join();
  }
  assertTrue(channelCommandQueue.isEmpty());
}
