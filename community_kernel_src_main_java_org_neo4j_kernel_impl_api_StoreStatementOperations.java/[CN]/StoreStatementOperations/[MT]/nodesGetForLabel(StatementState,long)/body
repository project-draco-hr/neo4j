{
  final NodeStore nodeStore=neoStore.getNodeStore();
  final long highestId=nodeStore.getHighestPossibleIdInUse();
  return new AbstractPrimitiveLongIterator(){
    private long id=0;
{
      computeNext();
    }
    @Override protected void computeNext(){
      while (id <= highestId) {
        NodeRecord node=nodeStore.forceGetRecord(id++);
        if (node.inUse()) {
          for (          long label : parseLabelsField(node).get(nodeStore)) {
            if (label == labelId) {
              nextValue=node.getId();
              hasNext=true;
              return;
            }
          }
        }
      }
      hasNext=false;
    }
  }
;
}
