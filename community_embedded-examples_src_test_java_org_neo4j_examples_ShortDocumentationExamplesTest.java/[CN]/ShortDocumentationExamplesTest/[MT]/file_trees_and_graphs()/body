{
  data.get();
  gen.get().addSnippet("graph1",createGraphViz("The Domain Structure",graphdb(),gen.get().getTitle()));
  String query="start root=(node_auto_index,'name:Dir0') match (root)-[:contains^0..10]->()-[:leaf]->(file) return file";
  gen.get().addSnippet("query1",createCypherSnippet(query));
  String result=engine.execute(parser.parse(query)).toString();
  assertTrue(result.contains("File1"));
  gen.get().addSnippet("result1",createOutputSnippet(result));
  query="start root=(node_auto_index,'name:Dir0') match (root)-[:contains^0..10]->()-[:leaf]->(file)<-[:owns]-(user) where user.name = 'User1' return file, user";
  gen.get().addSnippet("query2",createCypherSnippet(query));
  result=engine.execute(parser.parse(query)).toString();
  assertTrue(result.contains("File1"));
  assertFalse(result.contains("File2"));
  gen.get().addSnippet("result2",createOutputSnippet(result));
  query="START file=(node_auto_index,'name:File*') " + "MATCH " + "file<-[:leaf]-dir, "+ "file<-[:owns]-owner, "+ "path = dir<-[:contains^1..10]-parent,"+ "parent<-[?:canRead]-role2<-[:hasRole]-readUserMoreThan1DirUp, "+ "dir<-[?:canRead]-role1<-[:hasRole]-readUser1DirUp "+ "RETURN path, file, role1, readUser1DirUp, role2, readUserMoreThan1DirUp, owner";
  gen.get().addSnippet("query3",createCypherSnippet(query));
  result=engine.execute(parser.parse(query)).toString();
  assertTrue(result.contains("File1"));
  assertTrue(result.contains("File2"));
  assertTrue(result.contains("AdminUser3"));
  assertTrue(result.contains("AdminUser4"));
  gen.get().addSnippet("result3",createOutputSnippet(result));
}
