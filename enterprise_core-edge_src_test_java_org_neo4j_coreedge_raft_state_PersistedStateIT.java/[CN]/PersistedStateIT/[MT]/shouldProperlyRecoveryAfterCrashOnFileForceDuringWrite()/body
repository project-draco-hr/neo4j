{
  EphemeralFileSystemAbstraction normalFSA=new EphemeralFileSystemAbstraction();
  AdversarialFileSystemAbstraction breakingFSA=new AdversarialFileSystemAbstraction(new MethodGuardedAdversary(new CountingAdversary(40,true),StoreChannel.class.getMethod("force",boolean.class)),normalFSA);
  SelectiveFileSystemAbstraction combinedFSA=new SelectiveFileSystemAbstraction(new File(testDir.directory(),"long.A"),breakingFSA,normalFSA);
  LongState persistedState=new LongState(combinedFSA,testDir.directory(),14);
  long lastValue=0;
  try {
    while (true) {
      long tempValue=lastValue + 1;
      persistedState.setTheState(tempValue);
      lastValue=tempValue;
    }
  }
 catch (  Exception expected) {
    ensureStackTraceContainsExpectedMethod(expected.getStackTrace(),"force");
  }
  LongState restoredState=new LongState(normalFSA,testDir.directory(),14);
  assertThat(restoredState.getTheState(),greaterThanOrEqualTo(lastValue));
}
