{
  return new ReadableState<Key>(){
    @Override protected KeyFormat<Key> keyFormat(){
      return keys;
    }
    @Override protected Headers headers(){
      return store.headers();
    }
    @Override protected long version(){
      return keys.version(headers());
    }
    @Override protected boolean lookup(    Key key,    ValueSink sink) throws IOException {
      return store.scan(new KeyFormat.Searcher<>(keys,key),sink);
    }
    @Override protected DataProvider dataProvider() throws IOException {
      return store.dataProvider();
    }
    @Override protected int storedEntryCount(){
      return store.entryCount();
    }
    @Override void close() throws IOException {
      store.close();
    }
  }
;
}
