{
  assumeFalse(SystemUtils.IS_OS_WINDOWS);
  List<String> myQuery=Arrays.asList("[source, cypher]","----","LOAD CSV FROM \"my_file.csv\" AS line","RETURN line;","----");
  Block block=new Block(myQuery,BlockType.CYPHER);
  DocsExecutionEngine engine=mock(DocsExecutionEngine.class);
  InternalExecutionResult result=mock(InternalExecutionResult.class);
  ResourceIterator iterator=mock(ResourceIterator.class);
  ArgumentCaptor<String> fileQuery=ArgumentCaptor.forClass(String.class);
  ArgumentCaptor<String> httpQuery=ArgumentCaptor.forClass(String.class);
  when(engine.profile(fileQuery.capture(),Matchers.eq(Collections.<String,Object>emptyMap()))).thenReturn(result);
  when(result.javaIterator()).thenReturn(iterator);
  when(engine.prettify(httpQuery.capture())).thenReturn("apa");
  state=new State(engine,database,null,new File("/dev/null"),"http://myurl");
  state.knownFiles.add("my_file.csv");
  block.process(state);
  assertThat(fileQuery.getValue(),containsString("file:/dev/null/my_file.csv"));
  assertThat(httpQuery.getValue(),containsString("http://myurl/my_file.csv"));
}
