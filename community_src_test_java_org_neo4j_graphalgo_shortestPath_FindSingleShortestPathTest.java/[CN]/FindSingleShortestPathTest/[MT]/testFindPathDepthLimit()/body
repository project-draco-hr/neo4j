{
  graph.makeEdgeChain("a,b,c,d");
  FindSingleShortestPath findPath=getFindPath(graph,"a","d",3);
  assertTrue(findPath.getPathAsNodes() != null);
  assertTrue(findPath.getPathAsNodes().size() == 4);
  findPath=getFindPath(graph,"a","d",2);
  assertTrue(findPath.getPathAsNodes() == null);
  findPath=getFindPath(graph,"a","c",2);
  assertTrue(findPath.getPathAsNodes() != null);
  findPath=getFindPath(graph,"a","c",1);
  assertTrue(findPath.getPathAsNodes() == null);
  findPath=getFindPath(graph,"a","b",1);
  assertTrue(findPath.getPathAsNodes() != null);
  findPath=getFindPath(graph,"a","b",0);
  assertTrue(findPath.getPathAsNodes() == null);
  findPath=getFindPath(graph,"d","a",3);
  assertTrue(findPath.getPathAsNodes().size() == 4);
  findPath=getFindPath(graph,"d","b",2);
  assertTrue(findPath.getPathAsNodes().size() == 3);
  assertTrue(findPath.getPathAsRelationships().size() == 2);
  assertTrue(findPath.getPath().size() == 5);
}
