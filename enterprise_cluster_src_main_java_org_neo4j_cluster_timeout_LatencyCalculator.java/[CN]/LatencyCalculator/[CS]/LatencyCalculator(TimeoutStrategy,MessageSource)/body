{
  this.delegate=delegate;
  incoming.addMessageProcessor(new MessageProcessor(){
    @Override public boolean process(    Message<? extends MessageType> message){
synchronized (LatencyCalculator.this) {
        Long sent=conversations.get(message.getHeader(Message.CONVERSATION_ID));
        if (sent != null) {
          long received=now;
          String from=message.getHeader(Message.FROM);
          List<Long> hostLatencies=latencies.get(from);
          if (hostLatencies == null) {
            hostLatencies=new ArrayList<Long>();
            latencies.put(from,hostLatencies);
          }
          long latency=received - sent;
          if (latency < 0)           logger.warn("Negative latency!");
          hostLatencies.add(latency);
          if (hostLatencies.size() == latencyCount) {
            long latencySum=0;
            for (            Long hostLatency : hostLatencies) {
              latencySum+=hostLatency;
            }
            long latencyAvg=latencySum / latencyCount;
            hostLatencies.clear();
          }
        }
      }
      return true;
    }
  }
);
}
