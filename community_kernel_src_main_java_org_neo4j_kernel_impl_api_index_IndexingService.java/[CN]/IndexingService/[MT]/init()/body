{
  IndexMap indexMap=indexMapRef.indexMapSnapshot();
  for (  IndexRule indexRule : indexRules) {
    IndexProxy indexProxy;
    long indexId=indexRule.getId();
    IndexDescriptor descriptor=new IndexDescriptor(indexRule.getLabel(),indexRule.getPropertyKey());
    SchemaIndexProvider.Descriptor providerDescriptor=indexRule.getProviderDescriptor();
    SchemaIndexProvider provider=providerMap.apply(providerDescriptor);
    InternalIndexState initialState=provider.getInitialState(indexId);
    log.info(proxySetup.indexStateInfo("init",indexId,initialState,descriptor));
    boolean constraint=indexRule.isConstraintIndex();
switch (initialState) {
case ONLINE:
      indexProxy=proxySetup.createOnlineIndexProxy(indexId,descriptor,providerDescriptor,constraint);
    break;
case POPULATING:
  if (constraint && indexRule.getOwningConstraint() == null) {
    indexProxy=proxySetup.createFailedIndexProxy(indexId,descriptor,providerDescriptor,constraint,failure("Constraint for index was not committed."));
  }
 else {
    indexProxy=proxySetup.createRecoveringIndexProxy(descriptor,providerDescriptor,constraint);
  }
break;
case FAILED:
IndexPopulationFailure failure=failure(provider.getPopulationFailure(indexId));
indexProxy=proxySetup.createFailedIndexProxy(indexId,descriptor,providerDescriptor,constraint,failure);
break;
default :
throw new IllegalArgumentException("" + initialState);
}
indexMap.putIndexProxy(indexId,indexProxy);
}
indexMapRef.setIndexMap(indexMap);
}
