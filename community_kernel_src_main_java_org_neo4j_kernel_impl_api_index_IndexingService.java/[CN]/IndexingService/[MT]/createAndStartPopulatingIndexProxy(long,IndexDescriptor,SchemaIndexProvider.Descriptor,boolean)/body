{
  final FlippableIndexProxy flipper=new FlippableIndexProxy();
  IndexPopulator populator=getPopulatorFromProvider(providerDescriptor,ruleId,new IndexConfiguration(unique));
  PopulatingIndexProxy populatingIndex=new PopulatingIndexProxy(scheduler,descriptor,providerDescriptor,populator,flipper,storeView,indexUserDescription(descriptor,providerDescriptor),updateableSchemaState,logging);
  flipper.flipTo(populatingIndex);
  flipper.setFlipTarget(new IndexProxyFactory(){
    @Override public IndexProxy create(){
      try {
        OnlineIndexProxy onlineProxy=new OnlineIndexProxy(descriptor,providerDescriptor,getOnlineAccessorFromProvider(providerDescriptor,ruleId,new IndexConfiguration(unique)));
        if (unique) {
          return new TentativeConstraintIndexProxy(flipper,onlineProxy);
        }
        return onlineProxy;
      }
 catch (      IOException e) {
        return createAndStartFailedIndexProxy(ruleId,descriptor,providerDescriptor,unique,failure(e));
      }
    }
  }
);
  IndexProxy result=contractCheckedProxy(flipper,false);
  result=serviceDecoratedProxy(ruleId,result);
  result.start();
  return result;
}
