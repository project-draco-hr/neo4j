{
  final FlippableIndexProxy flipper=new FlippableIndexProxy();
  IndexPopulator populator=getPopulatorFromProvider(providerDescriptor,ruleId,new IndexConfiguration(unique));
  PopulatingIndexProxy populatingIndex=new PopulatingIndexProxy(scheduler,descriptor,providerDescriptor,populator,flipper,storeView,updateableSchemaState,logging);
  flipper.flipTo(populatingIndex);
  flipper.setFlipTarget(new IndexProxyFactory(){
    @Override public IndexProxy create(){
      OnlineIndexProxy onlineProxy=new OnlineIndexProxy(descriptor,providerDescriptor,getOnlineAccessorFromProvider(providerDescriptor,ruleId,new IndexConfiguration(unique)));
      if (unique) {
        return new TentativeConstraintIndexProxy(flipper,onlineProxy);
      }
      return onlineProxy;
    }
  }
);
  IndexProxy result=contractCheckedProxy(flipper,false);
  return serviceDecoratedProxy(ruleId,result);
}
