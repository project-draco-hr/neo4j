{
  int numberOfIndexes=updaterMap.numberOfIndexes();
  Map<IndexDescriptor,List<NodePropertyUpdate>> updatesByIndex=new HashMap<>(numberOfIndexes,1);
  for (  NodePropertyUpdate update : updates) {
    int propertyKeyId=update.getPropertyKeyId();
switch (update.getUpdateMode()) {
case ADDED:
      for (int len=update.getNumberOfLabelsAfter(), i=0; i < len; i++) {
        int labelAfter=update.getLabelAfter(i);
        storeUpdateIfIndexExists(updaterMap,update,propertyKeyId,labelAfter,updatesByIndex);
      }
    break;
case REMOVED:
  for (int len=update.getNumberOfLabelsBefore(), i=0; i < len; i++) {
    int labelBefore=update.getLabelBefore(i);
    storeUpdateIfIndexExists(updaterMap,update,propertyKeyId,labelBefore,updatesByIndex);
  }
break;
case CHANGED:
int lenBefore=update.getNumberOfLabelsBefore();
int lenAfter=update.getNumberOfLabelsAfter();
for (int i=0, j=0; i < lenBefore && j < lenAfter; ) {
int labelBefore=update.getLabelBefore(i);
int labelAfter=update.getLabelAfter(j);
if (labelBefore == labelAfter) {
storeUpdateIfIndexExists(updaterMap,update,propertyKeyId,labelAfter,updatesByIndex);
i++;
j++;
}
 else {
if (labelBefore < labelAfter) {
i++;
}
 else {
j++;
}
}
}
break;
}
}
return updatesByIndex;
}
