{
  this.scheduler=scheduler;
  this.providerMap=providerMap;
  this.storeView=storeView;
  this.logging=logging;
  this.logger=logging.getMessagesLog(getClass());
  this.updateableSchemaState=updateableSchemaState;
  this.tokenNameLookup=tokenNameLookup;
  if (providerMap == null || providerMap.getDefaultProvider() == null) {
    throw new IllegalStateException("You cannot run the database without an index provider, " + "please make sure that a valid provider (subclass of " + SchemaIndexProvider.class.getName() + ") is on your classpath.");
  }
}
