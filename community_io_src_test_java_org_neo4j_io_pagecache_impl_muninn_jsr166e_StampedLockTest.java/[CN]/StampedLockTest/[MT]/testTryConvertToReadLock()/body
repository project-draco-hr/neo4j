{
  try {
    StampedLock lock=new StampedLock();
    long s, p;
    s=0L;
    assertFalse((p=lock.tryConvertToReadLock(s)) != 0L);
    assertTrue((s=lock.tryOptimisticRead()) != 0L);
    assertTrue((p=lock.tryConvertToReadLock(s)) != 0L);
    lock.unlockRead(p);
    assertTrue((s=lock.writeLock()) != 0L);
    assertTrue((p=lock.tryConvertToReadLock(s)) != 0L);
    assertTrue(lock.validate(p));
    lock.unlockRead(p);
    assertTrue((s=lock.readLock()) != 0L);
    assertTrue(lock.validate(s));
    assertTrue((p=lock.tryConvertToReadLock(s)) != 0L);
    assertTrue(lock.validate(p));
    lock.unlockRead(p);
    assertTrue((s=lock.tryWriteLock()) != 0L);
    assertTrue(lock.validate(s));
    assertTrue((p=lock.tryConvertToReadLock(s)) != 0L);
    assertTrue(lock.validate(p));
    lock.unlockRead(p);
    assertTrue((s=lock.tryReadLock()) != 0L);
    assertTrue(lock.validate(s));
    assertTrue((p=lock.tryConvertToReadLock(s)) != 0L);
    assertTrue(lock.validate(p));
    lock.unlockRead(p);
    assertTrue((s=lock.tryWriteLock(100L,MILLISECONDS)) != 0L);
    assertTrue((p=lock.tryConvertToReadLock(s)) != 0L);
    assertTrue(lock.validate(p));
    lock.unlockRead(p);
    assertTrue((s=lock.tryReadLock(100L,MILLISECONDS)) != 0L);
    assertTrue(lock.validate(s));
    assertTrue((p=lock.tryConvertToReadLock(s)) != 0L);
    assertTrue(lock.validate(p));
    lock.unlockRead(p);
  }
 catch (  InterruptedException ie) {
    threadUnexpectedException(ie);
  }
}
