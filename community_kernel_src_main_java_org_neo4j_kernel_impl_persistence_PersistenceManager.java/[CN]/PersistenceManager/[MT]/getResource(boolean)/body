{
  Transaction tx=this.getCurrentTransaction();
  if (tx == null) {
    throw new NotInTransactionException();
  }
  NeoStoreTransaction con=txConnectionMap.get(tx);
  if (con == null) {
    try {
      XaConnection xaConnection=persistenceSource.getXaDataSource().getXaConnection();
      XAResource xaResource=xaConnection.getXaResource();
      if (!tx.enlistResource(xaResource)) {
        throw new ResourceAcquisitionFailedException("Unable to enlist '" + xaResource + "' in "+ "transaction");
      }
      con=persistenceSource.createTransaction(xaConnection);
      TransactionState state=transactionManager.getTransactionState();
      tx.registerSynchronization(new TxCommitHook(tx,state));
      if (registerEventHooks)       registerTransactionEventHookIfNeeded(tx);
      txConnectionMap.put(tx,con);
    }
 catch (    javax.transaction.RollbackException re) {
      String msg="The transaction is marked for rollback only.";
      throw new ResourceAcquisitionFailedException(msg,re);
    }
catch (    javax.transaction.SystemException se) {
      String msg="TM encountered an unexpected error condition.";
      throw new ResourceAcquisitionFailedException(msg,se);
    }
  }
  return con;
}
