{
  NodeManager nm=NodeManager.getManager();
  Node startNode=nm.createNode();
  Node endNode1=nm.createNode();
  Node endNode2=nm.createNode();
  Relationship rel1=nm.createRelationship(startNode,endNode1,MyRelTypes.TEST);
  Relationship rel2=nm.createRelationship(startNode,endNode2,MyRelTypes.TEST);
  Traverser trav=TraverserFactory.getFactory().createTraverser(BREADTH_FIRST,startNode,new RelationshipType[]{MyRelTypes.TEST},StopEvaluator.END_OF_NETWORK,ReturnableEvaluator.ALL);
  Iterator<Node> itr=trav.iterator();
  assertEquals(startNode,itr.next());
  Node node=itr.next();
  if (node.equals(endNode1)) {
    rel2.delete();
    assertTrue(!itr.hasNext());
    rel1.delete();
  }
 else   if (node.equals(endNode2)) {
    rel1.delete();
    assertTrue(!itr.hasNext());
    rel2.delete();
  }
 else {
    fail("unkown node");
  }
  startNode.delete();
  endNode1.delete();
  endNode2.delete();
}
