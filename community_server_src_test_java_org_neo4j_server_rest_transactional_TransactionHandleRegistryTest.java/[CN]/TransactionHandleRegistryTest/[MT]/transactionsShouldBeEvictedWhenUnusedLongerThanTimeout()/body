{
  FakeClock clock=new FakeClock();
  TestLogger log=new TestLogger();
  TransactionHandleRegistry registry=new TransactionHandleRegistry(clock,0,log);
  TransactionHandle oldTx=mock(TransactionHandle.class);
  TransactionHandle newTx=mock(TransactionHandle.class);
  long txId1=registry.begin();
  long txId2=registry.begin();
  registry.release(txId1,oldTx);
  clock.forward(1,TimeUnit.MINUTES);
  registry.release(txId2,newTx);
  registry.rollbackSuspendedTransactionsIdleSince(clock.currentTimeMillis() - 1000);
  assertThat(registry.acquire(txId2),equalTo(newTx));
  try {
    registry.acquire(txId1);
    fail("Should have thrown exception");
  }
 catch (  InvalidTransactionId e) {
  }
  log.assertExactly(info("Transaction with id 1 has been automatically rolled back."));
}
