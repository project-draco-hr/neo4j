{
  long existingLabelsField=node.getLabelField();
  long existingLabelsBits=parseLabelsBody(existingLabelsField);
  Collection<DynamicRecord> changedDynamicRecords=node.getDynamicLabelRecords();
  if (labelField != 0) {
    nodeStore.ensureHeavy(node,existingLabelsBits);
    changedDynamicRecords=node.getDynamicLabelRecords();
    setNotInUse(changedDynamicRecords);
  }
  if (!new InlineNodeLabels(labelField,node).tryInlineInNodeRecord(labelIds,changedDynamicRecords)) {
    Iterator<DynamicRecord> recycledRecords=changedDynamicRecords.iterator();
    Collection<DynamicRecord> allocatedRecords=NodeStore.allocateRecordsForDynamicLabels(node.getId(),labelIds,recycledRecords,allocator);
    while (recycledRecords.hasNext()) {
      DynamicRecord removedRecord=recycledRecords.next();
      removedRecord.setInUse(false);
      allocatedRecords.add(removedRecord);
    }
    node.setLabelField(dynamicPointer(allocatedRecords),allocatedRecords);
    changedDynamicRecords=allocatedRecords;
  }
  return changedDynamicRecords;
}
