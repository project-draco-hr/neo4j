{
  Map<String,String> storedConfig=indexStore.get(cls,indexName);
  if (storedConfig != null && suppliedConfig == null) {
    return Pair.of(storedConfig,Boolean.FALSE);
  }
  Map<String,String> configToUse=null;
  if (configToUse == null) {
    configToUse=suppliedConfig;
  }
  IndexProvider indexProvider=null;
  if (configToUse == null) {
    String provider=null;
    if (dbConfig != null) {
      provider=(String)dbConfig.get("index." + indexName);
      if (provider == null) {
        provider=(String)dbConfig.get("index");
      }
    }
    if (provider == null) {
      provider="lucene";
    }
    indexProvider=getIndexProvider(provider);
    configToUse=indexProvider.fillInDefaults(MapUtil.stringMap(KEY_INDEX_PROVIDER,provider));
  }
 else {
    indexProvider=getIndexProvider(configToUse.get(KEY_INDEX_PROVIDER));
  }
  if (storedConfig != null) {
    if (suppliedConfig != null && !indexProvider.configMatches(storedConfig,suppliedConfig)) {
      throw new IllegalArgumentException("Supplied index configuration:\n" + suppliedConfig + "\ndoesn't match stored config in a valid way:\n"+ storedConfig+ "\nfor '"+ indexName+ "'");
    }
    configToUse=storedConfig;
  }
  boolean created=indexStore.setIfNecessary(cls,indexName,configToUse);
  return new Pair<Map<String,String>,Boolean>(Collections.unmodifiableMap(configToUse),created);
}
