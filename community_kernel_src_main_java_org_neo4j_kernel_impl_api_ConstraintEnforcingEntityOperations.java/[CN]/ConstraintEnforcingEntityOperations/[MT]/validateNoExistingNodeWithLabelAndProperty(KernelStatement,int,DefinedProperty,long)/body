{
  try {
    Object value=property.value();
    int propertyKeyId=property.propertyKeyId();
    IndexDescriptor indexDescriptor=new IndexDescriptor(labelId,propertyKeyId);
    assertIndexOnline(state,indexDescriptor);
    state.locks().acquireExclusive(INDEX_ENTRY,indexEntryResourceId(labelId,propertyKeyId,property.valueAsString()));
    long existing=entityReadOperations.nodeGetFromUniqueIndexSeek(state,indexDescriptor,value);
    if (existing != NO_SUCH_NODE && existing != modifiedNode) {
      throw new UniquePropertyConstraintViolationKernelException(labelId,propertyKeyId,value,existing);
    }
  }
 catch (  IndexNotFoundKernelException|IndexBrokenKernelException e) {
    throw new UnableToValidateConstraintKernelException(e);
  }
}
