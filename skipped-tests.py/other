"\nProcesses JUnit XML files and reports skipped tests.\n\nA skipped test is a test marked as skipped in the JUnit XML, where the\nmessage does not start with 'not a test' (case insensitive), or a date\nin the format 'yyyy-mm-dd', and that date is less than the specified\nnumber of days (the '--days' command line argument) (default=30).\n\nCommand line arguments:\n--fail         - causes the program to exit with a non-zero exit code\n                 if there were any skipped tests.\n--days <days>  - the number of days ago that marks the limit for when\n                 a test is old and should be updated rather than\n                 skipped.\n"
import sys, getopt, os, re, datetime, xml.etree.ElementTree as ET
DATE = re.compile('^(?P<y>[\\d]{4})-(?P<m>[\\d]{2})-(?P<d>[\\d]{2})(?:| )')
if (__name__ == '__main__'):
    opts = parseOpts(sys.argv)
    expirationAge = datetime.timedelta(days=opts['days'])
    fail = False
    for skipped in skippedTests(os.curdir, expirationAge):
        fail = True
        if (skipped['test'] == skipped['class']):
            print ('Skipped test case %(test)s: %(message)s' % skipped)
        else:
            print ('Skipped test case %(class)s#%(test)s: %(message)s' % skipped)
    if (fail and opts['fail']):
        sys.exit((-1))
