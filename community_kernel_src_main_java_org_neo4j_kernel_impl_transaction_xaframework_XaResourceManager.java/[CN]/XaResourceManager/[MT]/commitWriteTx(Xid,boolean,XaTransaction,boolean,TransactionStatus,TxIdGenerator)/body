{
  checkStartWritten(txStatus,xaTransaction);
  if (onePhase) {
    txStatus.markAsPrepared();
    if (!readOnly && !xaTransaction.isRecovered()) {
      xaTransaction.prepare();
      long txId=txIdGenerator.generate(dataSource,xaTransaction.getIdentifier());
      xaTransaction.setCommitTxId(txId);
      log.commitOnePhase(xaTransaction.getIdentifier(),xaTransaction.getCommitTxId(),getForceMode());
    }
  }
  if (!txStatus.prepared() || txStatus.rollback()) {
    throw new XAException("Transaction not prepared or " + "(marked as) rolledbacked");
  }
  if (!readOnly) {
    if (!onePhase && !xaTransaction.isRecovered()) {
      long txId=txIdGenerator.generate(dataSource,xaTransaction.getIdentifier());
      xaTransaction.setCommitTxId(txId);
      log.commitTwoPhase(xaTransaction.getIdentifier(),xaTransaction.getCommitTxId(),getForceMode());
    }
    txStatus.markCommitStarted();
    if (xaTransaction.isRecovered() && xaTransaction.getCommitTxId() == -1) {
      boolean previousRecoveredValue=dataSource.setRecovered(true);
      try {
        xaTransaction.setCommitTxId(dataSource.getLastCommittedTxId() + 1);
      }
  finally {
        dataSource.setRecovered(previousRecoveredValue);
      }
    }
    xaTransaction.commit();
  }
  if (!xaTransaction.isRecovered()) {
    log.done(xaTransaction.getIdentifier());
  }
 else   if (!log.scanIsComplete() || recoveredTxCount > 0) {
    int identifier=xaTransaction.getIdentifier();
    Start startEntry=log.getStartEntry(identifier);
    recoveredTransactions.put(identifier,new TransactionInfo(identifier,onePhase,xaTransaction.getCommitTxId(),startEntry.getMasterId(),startEntry.getChecksum()));
  }
  xidMap.remove(xid);
  if (xaTransaction.isRecovered()) {
    recoveredTxCount--;
    checkIfRecoveryComplete();
  }
  transactionMonitor.transactionCommitted(xid,xaTransaction.isRecovered());
}
