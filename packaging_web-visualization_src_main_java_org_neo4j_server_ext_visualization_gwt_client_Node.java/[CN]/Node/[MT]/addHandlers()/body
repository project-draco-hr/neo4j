{
  widget.addDomHandler(new MouseDownHandler(){
    public void onMouseDown(    MouseDownEvent event){
      mouseDown=true;
      DOM.setCapture(widget.getElement());
      dragStartX=event.getX();
      dragStartY=event.getY();
      event.preventDefault();
    }
  }
,MouseDownEvent.getType());
  widget.addDomHandler(new MouseMoveHandler(){
    public void onMouseMove(    MouseMoveEvent event){
      if (mouseDown) {
        dragging=true;
        Element element=widget.getElement();
        int newX=event.getX() + element.getOffsetLeft() - dragStartX;
        int newY=event.getY() + element.getOffsetTop() - dragStartY;
        move(newX,newY);
        int clientX=event.getClientX();
        int clientY=event.getClientY();
        if (clientX < 0 || clientY < 0 || clientX > Window.getClientWidth() || clientY > Window.getClientHeight()) {
          dragging=false;
        }
      }
      event.preventDefault();
    }
  }
,MouseMoveEvent.getType());
  widget.addDomHandler(new MouseUpHandler(){
    public void onMouseUp(    MouseUpEvent event){
      if (!dragging && !explored) {
        explored=true;
        Style style=widget.getElement().getStyle();
        style.setBorderColor("black");
        style.setBorderStyle(Style.BorderStyle.SOLID);
        style.setBorderWidth(2,Unit.PX);
        do {
          parent.addNeighborTo(Node.this);
        }
 while (Random.nextBoolean());
      }
      dragging=false;
      mouseDown=false;
      DOM.releaseCapture(widget.getElement());
      event.preventDefault();
    }
  }
,MouseUpEvent.getType());
}
