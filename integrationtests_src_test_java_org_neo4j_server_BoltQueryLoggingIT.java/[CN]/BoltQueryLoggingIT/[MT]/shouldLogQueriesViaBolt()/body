{
  Socket socket=new Socket("localhost",8776);
  DataInputStream dataIn=new DataInputStream(socket.getInputStream());
  DataOutputStream dataOut=new DataOutputStream(socket.getOutputStream());
  send(dataOut,new byte[]{(byte)0x60,(byte)0x60,(byte)0xB0,(byte)0x17,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0});
  receive(dataIn,new byte[]{0,0,0,1});
  send(dataOut,"00 40 B1 01  8C 4D 79 43  6C 69 65 6E  74 2F 31 2E\n" + "30 A3 86 73  63 68 65 6D  65 85 62 61  73 69 63 89\n" + "70 72 69 6E  63 69 70 61  6C 85 6E 65  6F 34 6A 8B\n"+ "63 72 65 64  65 6E 74 69  61 6C 73 86  73 65 63 72\n"+ "65 74 00 00");
  receiveSuccess(dataIn);
  for (int i=0; i < 5; i++) {
    send(dataOut,"00 13 b2 10  8f 52 45 54  55 52 4e 20  31 20 41 53 20 6e 75 6d  a0 00 00");
    receiveSuccess(dataIn);
    send(dataOut,"00 02 B0 3F  00 00");
    receive(dataIn,"00 04 b1 71  91 01 00 00");
    receiveSuccess(dataIn);
  }
  Path queriesLog=neo4j.getConfig().get(GraphDatabaseSettings.log_queries_filename).toPath();
  List<String> lines=Files.readAllLines(queriesLog);
  assertThat(lines,hasSize(5));
  for (  String line : lines) {
    assertTrue(line.contains("INFO"));
    assertTrue(line.contains("ms: bolt-session\tbolt\tneo4j\tMyClient/1.0"));
    assertTrue(line.contains("client/127.0.0.1:"));
    assertTrue(line.contains("client/127.0.0.1:"));
    assertTrue(line.contains("server/127.0.0.1:8776"));
    assertTrue(line.contains(" - RETURN 1 AS num - {}"));
  }
  send(dataOut,"00 02 b0 0f 00 00");
  receive(dataIn,"00 03 b1 70  a0 00 00");
  socket.close();
}
