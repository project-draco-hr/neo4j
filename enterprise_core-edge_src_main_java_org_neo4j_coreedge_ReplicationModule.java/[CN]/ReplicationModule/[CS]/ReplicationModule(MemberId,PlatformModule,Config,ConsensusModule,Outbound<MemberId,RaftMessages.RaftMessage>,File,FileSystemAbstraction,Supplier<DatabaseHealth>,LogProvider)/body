{
  LifeSupport life=platformModule.life;
  DurableStateStorage<GlobalSessionTrackerState> sessionTrackerStorage;
  try {
    sessionTrackerStorage=life.add(new DurableStateStorage<>(fileSystem,new File(clusterStateDirectory,"session-tracker-state"),"session-tracker",new GlobalSessionTrackerState.Marshal(new MemberId.MemberIdMarshal()),config.get(CoreEdgeClusterSettings.global_session_tracker_state_size),databaseHealthSupplier,logProvider));
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  sessionTracker=new SessionTracker(sessionTrackerStorage);
  GlobalSession myGlobalSession=new GlobalSession(UUID.randomUUID(),myself);
  LocalSessionPool sessionPool=new LocalSessionPool(myGlobalSession);
  progressTracker=new ProgressTrackerImpl(myGlobalSession);
  replicator=new RaftReplicator(consensusModule.raftInstance(),myself,loggingOutbound,sessionPool,progressTracker,new ExponentialBackoffStrategy(10,SECONDS));
}
