{
  List<Transaction> lockingTxList=resourceMap.get(resource);
  if (lockingTxList == null) {
    throw new LockException("Illegal resource[" + resource + "], not found in map");
  }
  if (waitingTxMap.get(tx) != null) {
    throw new LockException(tx + " already waiting for resource");
  }
  Iterator<Transaction> itr=lockingTxList.iterator();
  List<Transaction> checkedTransactions=new LinkedList<Transaction>();
  Stack<Object> graphStack=new Stack<Object>();
  graphStack.push(resource);
  while (itr.hasNext()) {
    Transaction lockingTx=itr.next();
    if (lockingTx.equals(tx)) {
      continue;
    }
    graphStack.push(tx);
    checkWaitOnRecursive(lockingTx,tx,checkedTransactions,graphStack);
    graphStack.pop();
  }
  waitingTxMap.put(tx,resource);
}
