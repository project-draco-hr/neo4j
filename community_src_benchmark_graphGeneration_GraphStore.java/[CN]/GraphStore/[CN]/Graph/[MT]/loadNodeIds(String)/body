{
  transaction=neo.beginTx();
  Traverser traverser=referenceNode.traverse(Order.BREADTH_FIRST,StopEvaluator.DEPTH_ONE,ReturnableEvaluator.ALL_BUT_START_NODE,MyRelTypes.NODEGROUP,Direction.BOTH);
  Node parentNode=null;
  for (  Node node : traverser) {
    if (traverser.currentPosition().lastRelationshipTraversed().getProperty("NodeGroup").equals(NodeGroup)) {
      parentNode=node;
      break;
    }
  }
  long[] nodes=null;
  if (parentNode != null) {
    Integer numberOfNodes=(Integer)parentNode.getProperty("numberOfNodes");
    nodes=new long[numberOfNodes];
    traverser=parentNode.traverse(Order.BREADTH_FIRST,StopEvaluator.DEPTH_ONE,ReturnableEvaluator.ALL_BUT_START_NODE,MyRelTypes.HASNODE,Direction.BOTH);
    int n=0;
    for (    Node node : traverser) {
      nodes[n++]=node.getId();
      if (n > numberOfNodes) {
        nodes=null;
        break;
      }
    }
  }
  transaction.success();
  transaction.finish();
  return nodes;
}
