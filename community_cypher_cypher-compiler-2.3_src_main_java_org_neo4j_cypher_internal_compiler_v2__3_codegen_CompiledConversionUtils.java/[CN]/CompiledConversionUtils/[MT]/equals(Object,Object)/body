{
  if (lhs == null || rhs == null) {
    return null;
  }
  if ((lhs instanceof CompiledNode && !(rhs instanceof CompiledNode)) || (rhs instanceof CompiledNode && !(lhs instanceof CompiledNode)) || (lhs instanceof CompiledRelationship && !(rhs instanceof CompiledRelationship))|| (rhs instanceof CompiledRelationship && !(lhs instanceof CompiledRelationship))) {
    throw new IncomparableValuesException(lhs.getClass().getSimpleName(),rhs.getClass().getSimpleName());
  }
  if (lhs instanceof Number && rhs instanceof Number) {
    if ((lhs instanceof Double || lhs instanceof Float) && (rhs instanceof Double || rhs instanceof Float)) {
      double left=((Number)lhs).doubleValue();
      double right=((Number)rhs).doubleValue();
      return left == right;
    }
 else     if ((lhs instanceof Double || lhs instanceof Float)) {
      double left=((Number)lhs).doubleValue();
      long right=((Number)rhs).longValue();
      return MathUtil.numbersEqual(left,right);
    }
 else     if ((rhs instanceof Double || rhs instanceof Float)) {
      long left=((Number)lhs).longValue();
      double right=((Number)rhs).doubleValue();
      return MathUtil.numbersEqual(right,left);
    }
    long left=((Number)lhs).longValue();
    long right=((Number)rhs).longValue();
    return left == right;
  }
  return lhs.equals(rhs);
}
