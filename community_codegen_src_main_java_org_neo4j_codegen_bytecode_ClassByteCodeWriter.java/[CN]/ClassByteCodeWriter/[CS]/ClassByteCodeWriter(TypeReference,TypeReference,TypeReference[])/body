{
  this.classWriter=new ClassWriter(ClassWriter.COMPUTE_FRAMES);
  String[] iNames=new String[interfaces.length];
  for (int i=0; i < interfaces.length; i++) {
    iNames[i]=byteCodeName(interfaces[i]);
  }
  classWriter.visit(V1_8,ACC_PUBLIC + ACC_SUPER,byteCodeName(type),signature(type),byteCodeName(base),iNames.length != 0 ? iNames : null);
  if (base.isInnerClass()) {
    classWriter.visitInnerClass(byteCodeName(base),outerName(base),base.simpleName(),ACC_PUBLIC + ACC_STATIC);
  }
  this.type=type;
  this.base=base;
}
