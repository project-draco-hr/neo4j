{
  PrimitiveTypeFetcher type=PrimitiveTypeFetcher.NODE;
switch (description.uniqueness) {
case RELATIONSHIP_GLOBAL:
    type=PrimitiveTypeFetcher.RELATIONSHIP;
case NODE_GLOBAL:
  this.uniquness=new GloballyUnique(type);
break;
case RELATIONSHIP_PATH:
type=PrimitiveTypeFetcher.RELATIONSHIP;
case NODE_PATH:
this.uniquness=new PathUnique(type);
break;
case RELATIONSHIP_RECENT:
type=PrimitiveTypeFetcher.RELATIONSHIP;
case NODE_RECENT:
this.uniquness=new RecentlyUnique(type,description.uniquenessParameter);
break;
case NONE:
this.uniquness=new NotUnique();
break;
default :
throw new IllegalArgumentException("Unknown Uniquness " + description.uniqueness);
}
this.pruning=description.pruning;
this.filter=description.filter;
this.sourceSelector=description.sourceSelector.create(new ExpansionSourceImpl(this,null,startNode,description.expander,null));
}
