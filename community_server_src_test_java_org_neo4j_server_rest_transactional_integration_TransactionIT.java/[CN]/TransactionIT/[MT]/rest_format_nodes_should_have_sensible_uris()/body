{
  Response rs=http.POST("/db/data/transaction/commit",quotedJson("{ 'statements': [ { 'statement': 'CREATE (n:Foo:Bar) RETURN n', 'resultDataContents':['rest'] } ] }"));
  JsonNode restNode=rs.get("results").get(0).get("data").get(0).get("rest").get(0);
  assertPath(restNode.get("labels"),"/node/\\d+/labels");
  assertPath(restNode.get("outgoing_relationships"),"/node/\\d+/relationships/out");
  assertPath(restNode.get("traverse"),"/node/\\d+/traverse/\\{returnType\\}");
  assertPath(restNode.get("all_typed_relationships"),"/node/\\d+/relationships/all/\\{-list\\|&\\|types\\}");
  assertPath(restNode.get("self"),"/node/\\d+");
  assertPath(restNode.get("property"),"/node/\\d+/properties/\\{key\\}");
  assertPath(restNode.get("properties"),"/node/\\d+/properties");
  assertPath(restNode.get("outgoing_typed_relationships"),"/node/\\d+/relationships/out/\\{-list\\|&\\|types\\}");
  assertPath(restNode.get("incoming_relationships"),"/node/\\d+/relationships/in");
  assertPath(restNode.get("create_relationship"),"/node/\\d+/relationships");
  assertPath(restNode.get("paged_traverse"),"/node/\\d+/paged/traverse/\\{returnType\\}\\{\\?pageSize," + "leaseTime\\}");
  assertPath(restNode.get("all_relationships"),"/node/\\d+/relationships/all");
  assertPath(restNode.get("incoming_typed_relationships"),"/node/\\d+/relationships/in/\\{-list\\|&\\|types\\}");
}
