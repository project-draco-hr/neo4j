{
  long nodesInDatabaseBeforeTransaction=countNodes();
  Response response=http.POST("/db/data/transaction/commit",rawPayload("{ \"statements\" : [{\"statement\" : \"CREATE (n0:DecibelEntity :AlbumGroup{DecibelID : " + "'34a2201b-f4a9-420f-87ae-00a9c691cc5c', Title : 'Dance With Me', " + "ArtistString : 'Ra Ra Riot', MainArtistAlias : 'Ra Ra Riot', "+ "OriginalReleaseDate : '2013-01-08', IsCanon : 'False'}) return id(n0)\"}, "+ "{\"statement\" : \"CREATE (n1:DecibelEntity :AlbumRelease{DecibelID : "+ "'9ed529fa-7c19-11e2-be78-bcaec5bea3c3', Title : 'Dance With Me', "+ "ArtistString : 'Ra Ra Riot', MainArtistAlias : 'Ra Ra Riot', LabelName : 'Barsuk Records', "+ "FormatNames : 'File', TrackCount : '3', MediaCount : '1', Duration : '460.000000', "+ "ReleaseDate : '2013-01-08', ReleaseYear : '2013', ReleaseRegion : 'USA', "+ "Cline : 'Barsuk Records', Pline : 'Barsuk Records', CYear : '2013', PYear : '2013', "+ "ParentalAdvisory : 'False', IsLimitedEdition : 'False'}) return id(n1)\"}]}"));
  assertEquals(200,response.status());
  JsonNode everything=jsonNode(response.rawContent());
  JsonNode result=everything.get("results").get(0);
  long id=result.get("data").get(0).get("row").get(0).getLongValue();
  http.POST("/db/data/cypher",rawPayload("{\"query\":\"start n = node(" + id + ") delete n\"}"));
  assertThat(countNodes(),equalTo(nodesInDatabaseBeforeTransaction + 1));
}
