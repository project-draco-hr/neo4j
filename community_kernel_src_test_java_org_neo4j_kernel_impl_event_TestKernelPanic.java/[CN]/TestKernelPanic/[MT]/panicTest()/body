{
  final BufferingLogger logger=new BufferingLogger();
  @SuppressWarnings("deprecation") GraphDatabaseService graphDb=new ImpermanentGraphDatabase(){
    @Override protected Logging createLogging(){
      return new SingleLoggingService(logger);
    }
  }
;
  XaDataSourceManager xaDs=((GraphDatabaseAPI)graphDb).getDependencyResolver().resolveDependency(XaDataSourceManager.class);
  IllBehavingXaDataSource adversarialDataSource=new IllBehavingXaDataSource(UTF8.encode("554342"),"adversarialDataSource");
  xaDs.registerDataSource(adversarialDataSource);
  Panic panic=new Panic();
  graphDb.registerKernelEventHandler(panic);
  org.neo4j.graphdb.Transaction gdbTx=graphDb.beginTx();
  TransactionManager txMgr=((GraphDatabaseAPI)graphDb).getDependencyResolver().resolveDependency(TxManager.class);
  Transaction tx=txMgr.getTransaction();
  graphDb.createNode();
  adversarialDataSource.getXaConnection().enlistResource(tx);
  try {
    gdbTx.success();
    gdbTx.finish();
    fail("Should fail");
  }
 catch (  Exception t) {
    while (!panic.panic)     ;
  }
 finally {
    graphDb.unregisterKernelEventHandler(panic);
  }
  try {
    assertTrue(panic.panic);
    assertThat("Log didn't contain expected string",logger.toString(),containsString("at org.neo4j.kernel.impl.event.TestKernelPanic.panicTest"));
  }
  finally {
    graphDb.shutdown();
  }
}
