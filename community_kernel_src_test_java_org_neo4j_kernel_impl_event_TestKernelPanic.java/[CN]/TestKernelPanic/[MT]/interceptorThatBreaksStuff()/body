{
  return new TransactionInterceptor(){
    private void breakStuff(){
      throw new BreakageException();
    }
    @Override public void visitRelationship(    RelationshipRecord record){
      breakStuff();
    }
    @Override public void visitProperty(    PropertyRecord record){
      breakStuff();
    }
    @Override public void visitRelationshipTypeToken(    RelationshipTypeTokenRecord record){
      breakStuff();
    }
    @Override public void visitLabelToken(    LabelTokenRecord record){
      breakStuff();
    }
    @Override public void visitPropertyKeyToken(    PropertyKeyTokenRecord record){
      breakStuff();
    }
    @Override public void visitNode(    NodeRecord record){
      breakStuff();
    }
    @Override public void visitNeoStore(    NeoStoreRecord record){
      breakStuff();
    }
    @Override public void visitSchemaRule(    Collection<DynamicRecord> records){
      breakStuff();
    }
    @Override public void setStartEntry(    Start entry){
      breakStuff();
    }
    @Override public void setCommitEntry(    Commit entry){
      breakStuff();
    }
    @Override public void complete(){
      breakStuff();
    }
  }
;
}
