{
  if (file.exists()) {
    archiveExistingLogFile();
  }
  out=new PrintWriter(new OutputStreamWriter(new FileOutputStream(file),StandardCharsets.UTF_8));
  StringBuilder header=new StringBuilder();
  header.append("timestamp").append(SEPARATOR).append("datetime");
  for (  Map.Entry<String,Gauge> entry : gauges.entrySet()) {
    header.append(SEPARATOR).append(entry.getKey());
  }
  for (  Map.Entry<String,Counter> entry : counters.entrySet()) {
    header.append(SEPARATOR).append(entry.getKey());
  }
  for (  Map.Entry<String,Histogram> entry : histograms.entrySet()) {
    header.append(SEPARATOR).append(entry.getKey()).append(".count").append(SEPARATOR).append(entry.getKey()).append(".max").append(SEPARATOR).append(entry.getKey()).append(".mean").append(SEPARATOR).append(entry.getKey()).append(".min").append(SEPARATOR).append(entry.getKey()).append(".stddev").append(SEPARATOR).append(entry.getKey()).append(".p50").append(SEPARATOR).append(entry.getKey()).append(".p75").append(SEPARATOR).append(entry.getKey()).append(".p95").append(SEPARATOR).append(entry.getKey()).append(".p98").append(SEPARATOR).append(entry.getKey()).append(".p99").append(SEPARATOR).append(entry.getKey()).append(".p999");
  }
  for (  Map.Entry<String,Meter> entry : meters.entrySet()) {
    header.append(SEPARATOR).append(entry.getKey()).append(".count").append(SEPARATOR).append(entry.getKey()).append(".mean_rate").append(SEPARATOR).append(entry.getKey()).append(".m1_rate").append(SEPARATOR).append(entry.getKey()).append(".m5_rate").append(SEPARATOR).append(entry.getKey()).append(".m15_rate").append(SEPARATOR).append(entry.getKey()).append(".rate_unit");
  }
  for (  Map.Entry<String,Timer> entry : timers.entrySet()) {
    header.append(SEPARATOR).append(entry.getKey()).append(".count").append(SEPARATOR).append(entry.getKey()).append(".max").append(SEPARATOR).append(entry.getKey()).append(".mean").append(SEPARATOR).append(entry.getKey()).append(".min").append(SEPARATOR).append(entry.getKey()).append(".stddev").append(SEPARATOR).append(entry.getKey()).append(".p50").append(SEPARATOR).append(entry.getKey()).append(".p75").append(SEPARATOR).append(entry.getKey()).append(".p95").append(SEPARATOR).append(entry.getKey()).append(".p98").append(SEPARATOR).append(entry.getKey()).append(".p99").append(SEPARATOR).append(entry.getKey()).append(".p999").append(SEPARATOR).append(entry.getKey()).append(".mean_rate").append(SEPARATOR).append(entry.getKey()).append(".m1_rate").append(SEPARATOR).append(entry.getKey()).append(".m5_rate").append(SEPARATOR).append(entry.getKey()).append(".m15_rate").append(SEPARATOR).append(entry.getKey()).append(".rate_unit").append(SEPARATOR).append(entry.getKey()).append(".duration_unit");
  }
  out.println(header.toString());
}
