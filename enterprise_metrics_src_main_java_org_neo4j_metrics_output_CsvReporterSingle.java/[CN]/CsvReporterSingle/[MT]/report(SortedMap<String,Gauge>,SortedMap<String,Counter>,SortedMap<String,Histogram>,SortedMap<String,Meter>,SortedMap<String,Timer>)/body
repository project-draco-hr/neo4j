{
  if (out == null) {
    try {
      startNewCsvFile(gauges,counters,histograms,meters,timers);
    }
 catch (    Exception e) {
      logger.warn("Could not create output CSV file: " + file.getAbsolutePath(),e);
    }
  }
  StringBuilder line=new StringBuilder();
  final long timestamp=TimeUnit.MILLISECONDS.toSeconds(clock.getTime());
  line.append(timestamp).append(SEPARATOR).append(ISO8601.get().format(new Date(clock.getTime())));
  for (  Map.Entry<String,Gauge> entry : gauges.entrySet()) {
    reportGauge(entry.getValue(),line);
  }
  for (  Map.Entry<String,Counter> entry : counters.entrySet()) {
    reportCounter(entry.getValue(),line);
  }
  for (  Map.Entry<String,Histogram> entry : histograms.entrySet()) {
    reportHistogram(entry.getValue(),line);
  }
  for (  Map.Entry<String,Meter> entry : meters.entrySet()) {
    reportMeter(entry.getValue(),line);
  }
  for (  Map.Entry<String,Timer> entry : timers.entrySet()) {
    reportTimer(entry.getValue(),line);
  }
  out.println(line.toString());
  out.flush();
}
