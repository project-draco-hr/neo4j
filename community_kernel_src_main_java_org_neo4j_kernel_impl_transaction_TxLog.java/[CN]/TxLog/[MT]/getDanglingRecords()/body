{
  FileChannel fileChannel=logBuffer.getFileChannel();
  ByteBuffer buffer=ByteBuffer.allocateDirect(SCAN_WINDOW_SIZE);
  readFileIntoBuffer(fileChannel,buffer,0);
  long nextPosition=0;
  int seqNr=0;
  Map<Xid,List<Record>> recordMap=new HashMap<>();
  while (buffer.hasRemaining()) {
    byte recordType=buffer.get();
    int recordSize;
switch (recordType) {
case TX_START:
      recordSize=readTxStartRecordInto(recordMap,buffer,seqNr++);
    break;
case BRANCH_ADD:
  recordSize=readBranchAddRecordInto(recordMap,buffer,seqNr++);
break;
case MARK_COMMIT:
recordSize=readMarkCommitRecordInto(recordMap,buffer,seqNr++);
break;
case TX_DONE:
recordSize=readTxDoneAndRemoveTransactionFrom(recordMap,buffer);
break;
case NULL_BYTE:
recordSize=1;
break;
default :
throw new IOException("Unknown type: " + recordType);
}
if (recordSize == 0) {
break;
}
nextPosition+=recordSize;
if (buffer.remaining() < MAX_RECORD_SIZE && (fileChannel.size() - nextPosition) > buffer.remaining()) {
readFileIntoBuffer(fileChannel,buffer,nextPosition);
}
}
return recordMap.values();
}
