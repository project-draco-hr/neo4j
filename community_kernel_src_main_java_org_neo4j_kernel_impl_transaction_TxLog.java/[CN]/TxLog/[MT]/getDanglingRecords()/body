{
  FileChannel fileChannel=logBuffer.getFileChannel();
  ByteBuffer buffer=ByteBuffer.allocateDirect(SCAN_WINDOW_SIZE);
  fileChannel.position(0);
  buffer.clear();
  fileChannel.read(buffer);
  buffer.flip();
  long nextPosition=0;
  int seqNr=0;
  Map<Xid,List<Record>> recordMap=new HashMap<>();
  while (buffer.hasRemaining()) {
    byte recordType=buffer.get();
    if (recordType == 0) {
      nextPosition++;
      continue;
    }
    seqNr++;
    int recordSize=0;
switch (recordType) {
case TX_START:
      recordSize=readTxStartRecordInto(recordMap,buffer,seqNr);
    break;
case BRANCH_ADD:
  recordSize=readBranchAddRecordInto(recordMap,buffer,seqNr);
break;
case MARK_COMMIT:
recordSize=readMarkCommitRecordInto(recordMap,buffer,seqNr);
break;
case TX_DONE:
recordSize=readTxDoneAndRemoveTransactionFrom(recordMap,buffer);
break;
default :
throw new IOException("Unknown type: " + recordType);
}
if (recordSize == 0) {
break;
}
nextPosition+=recordSize;
if (buffer.remaining() < MAX_RECORD_SIZE) {
buffer.clear();
fileChannel.position(nextPosition);
fileChannel.read(buffer);
buffer.flip();
}
}
return recordMap.values();
}
