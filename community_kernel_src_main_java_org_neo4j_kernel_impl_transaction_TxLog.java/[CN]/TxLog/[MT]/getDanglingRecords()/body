{
  FileChannel fileChannel=logBuffer.getFileChannel();
  ByteBuffer buffer=ByteBuffer.allocateDirect(SCAN_WINDOW_SIZE);
  fileChannel.position(0);
  buffer.clear();
  fileChannel.read(buffer);
  buffer.flip();
  long nextPosition=0;
  int seqNr=0;
  Map<Xid,List<Record>> recordMap=new HashMap<>();
  while (buffer.hasRemaining()) {
    byte recordType=buffer.get();
    if (recordType == 0) {
      nextPosition++;
      continue;
    }
 else     if (recordType == TX_START) {
      if (!buffer.hasRemaining()) {
        break;
      }
      byte globalId[]=new byte[buffer.get()];
      if (buffer.remaining() < globalId.length) {
        break;
      }
      buffer.get(globalId);
      Xid xid=new XidImpl(globalId,new byte[0]);
      if (recordMap.containsKey(xid)) {
        throw new IOException("Tx start for same xid[" + xid + "] found twice");
      }
      List<Record> recordList=new LinkedList<>();
      recordList.add(new Record(recordType,globalId,null,seqNr++));
      recordMap.put(xid,recordList);
      nextPosition+=2 + globalId.length;
    }
 else     if (recordType == BRANCH_ADD) {
      if (buffer.remaining() < 2) {
        break;
      }
      byte globalId[]=new byte[buffer.get()];
      byte branchId[]=new byte[buffer.get()];
      if (buffer.remaining() < globalId.length + branchId.length) {
        break;
      }
      buffer.get(globalId);
      buffer.get(branchId);
      Xid xid=new XidImpl(globalId,new byte[0]);
      if (!recordMap.containsKey(xid)) {
        throw new IOException("Branch[" + UTF8.decode(branchId) + "] found for ["+ xid+ "] but no record list found in map");
      }
      recordMap.get(xid).add(new Record(recordType,globalId,branchId,seqNr++));
      nextPosition+=3 + globalId.length + branchId.length;
    }
 else     if (recordType == MARK_COMMIT) {
      if (!buffer.hasRemaining()) {
        break;
      }
      byte globalId[]=new byte[buffer.get()];
      if (buffer.remaining() < globalId.length) {
        break;
      }
      buffer.get(globalId);
      Xid xid=new XidImpl(globalId,new byte[0]);
      if (!recordMap.containsKey(xid)) {
        throw new IOException("Committing xid[" + xid + "] mark found but no record list found in map");
      }
      List<Record> recordList=recordMap.get(xid);
      recordList.add(new Record(recordType,globalId,null,seqNr++));
      recordMap.put(xid,recordList);
      nextPosition+=2 + globalId.length;
    }
 else     if (recordType == TX_DONE) {
      if (!buffer.hasRemaining()) {
        break;
      }
      byte globalId[]=new byte[buffer.get()];
      if (buffer.remaining() < globalId.length) {
        break;
      }
      buffer.get(globalId);
      Xid xid=new XidImpl(globalId,new byte[0]);
      if (!recordMap.containsKey(xid)) {
        throw new IOException("Committing xid[" + xid + "] mark found but no record list found in map");
      }
      recordMap.remove(xid);
      nextPosition+=2 + globalId.length;
    }
 else     if (recordType != 0) {
      throw new IOException("Unknown type: " + recordType);
    }
    if (buffer.remaining() < MAX_RECORD_SIZE) {
      buffer.clear();
      fileChannel.position(nextPosition);
      fileChannel.read(buffer);
      buffer.flip();
    }
  }
  return recordMap.values();
}
