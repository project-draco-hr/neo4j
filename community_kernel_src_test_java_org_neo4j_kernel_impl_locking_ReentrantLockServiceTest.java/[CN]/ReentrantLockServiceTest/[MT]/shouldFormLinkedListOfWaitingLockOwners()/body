{
  ReentrantLockService.LockOwner<Integer> head=new ReentrantLockService.LockOwner<>(0);
  ReentrantLockService.LockOwner<Integer> owner1=new ReentrantLockService.LockOwner<>(1);
  ReentrantLockService.LockOwner<Integer> owner2=new ReentrantLockService.LockOwner<>(2);
  ReentrantLockService.LockOwner<Integer> owner3=new ReentrantLockService.LockOwner<>(3);
  ReentrantLockService.LockOwner<Integer> owner4=new ReentrantLockService.LockOwner<>(4);
  head.push(owner1);
  assertEquals(1,head.pop().intValue());
  head.push(owner2);
  head.push(owner3);
  head.push(owner4);
  assertEquals(2,head.pop().intValue());
  assertEquals(3,head.pop().intValue());
  assertEquals(4,head.pop().intValue());
  assertEquals("should get the current element when popping 'head' itself",4,head.pop().intValue());
  assertEquals("should get null when popping from a dead list",null,head.pop());
  assertEquals("should get null continuously when popping from a dead list",null,head.pop());
}
