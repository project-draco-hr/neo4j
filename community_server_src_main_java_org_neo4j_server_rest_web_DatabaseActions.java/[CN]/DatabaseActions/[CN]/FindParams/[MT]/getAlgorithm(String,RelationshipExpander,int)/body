{
  if (algorithm.equals("shortestPath")) {
    return GraphAlgoFactory.shortestPath(expander,maxDepth);
  }
 else   if (algorithm.equals("allSimplePaths")) {
    return GraphAlgoFactory.allSimplePaths(expander,maxDepth);
  }
 else   if (algorithm.equals("allPaths")) {
    return GraphAlgoFactory.allPaths(expander,maxDepth);
  }
 else   if (algorithm.equals("dijkstra")) {
    String costProperty=(String)map.get("cost_property");
    Number defaultCost=(Number)map.get("default_cost");
    CostEvaluator<Double> costEvaluator=defaultCost == null ? CommonEvaluators.doubleCostEvaluator(costProperty) : CommonEvaluators.doubleCostEvaluator(costProperty,defaultCost.doubleValue());
    representationCreator=WEIGHTED_PATH_REPRESENTATION_CREATOR;
    return GraphAlgoFactory.dijkstra(expander,costEvaluator);
  }
  throw new RuntimeException("Failed to find matching algorithm");
}
