{
  assertIsLegalIndexName(indexName);
  Relationship result;
  boolean created;
  if (relationshipOrNull != null) {
    if (startNode != null || type != null || endNode != null || properties != null) {
      throw new BadInputException("Either specify a relationship to index uniquely, " + "or the means for creating it.");
    }
    Relationship relationship=relationship(relationshipOrNull);
    result=graphDb.index().forRelationships(indexName).putIfAbsent(relationship,key,value);
    if (created=result == null) {
      UniqueRelationshipFactory factory=new UniqueRelationshipFactory(indexName,relationship.getStartNode(),relationship.getEndNode(),relationship.getType().name(),properties);
      UniqueEntity<Relationship> entity=factory.getOrCreateWithOutcome(key,value);
      created=entity.entity().getId() == relationship.getId() || entity.wasCreated();
      result=entity.entity();
    }
  }
 else   if (startNode == null || type == null || endNode == null) {
    throw new BadInputException("Either specify a relationship to index uniquely, " + "or the means for creating it.");
  }
 else {
    UniqueRelationshipFactory factory=new UniqueRelationshipFactory(indexName,node(startNode),node(endNode),type,properties);
    UniqueEntity<Relationship> entity=factory.getOrCreateWithOutcome(key,value);
    result=entity.entity();
    created=entity.wasCreated();
  }
  return Pair.of(new IndexedEntityRepresentation(result,key,value,new RelationshipIndexRepresentation(indexName,Collections.<String,String>emptyMap())),created);
}
