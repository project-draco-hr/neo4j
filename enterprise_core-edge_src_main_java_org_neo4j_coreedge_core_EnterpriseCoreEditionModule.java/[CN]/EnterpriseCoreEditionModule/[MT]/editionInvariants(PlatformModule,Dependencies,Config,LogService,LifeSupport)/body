{
  statementLocksFactory=new StatementLocksFactorySelector(lockManager,config,logging).select();
  dependencies.satisfyDependency(createKernelData(platformModule.fileSystem,platformModule.pageCache,platformModule.storeDir,config,platformModule.graphDatabaseFacade,life));
  life.add(dependencies.satisfyDependency(createAuthManager(config,logging,platformModule.fileSystem)));
  ioLimiter=new ConfigurableIOLimiter(platformModule.config);
  headerInformationFactory=createHeaderInformationFactory();
  schemaWriteGuard=createSchemaWriteGuard();
  transactionStartTimeout=config.get(GraphDatabaseSettings.transaction_start_timeout);
  constraintSemantics=new EnterpriseConstraintSemantics();
  coreAPIAvailabilityGuard=new CoreAPIAvailabilityGuard(platformModule.availabilityGuard,transactionStartTimeout);
  registerRecovery(platformModule.databaseInfo,life,dependencies);
  publishEditionInfo(dependencies.resolveDependency(UsageData.class),platformModule.databaseInfo,config);
  dependencies.satisfyDependency(createSessionTracker());
}
