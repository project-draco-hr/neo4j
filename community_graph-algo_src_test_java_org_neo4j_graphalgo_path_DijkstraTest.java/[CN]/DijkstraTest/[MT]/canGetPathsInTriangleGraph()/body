{
  Node nodeA=graph.makeNode("A");
  Node nodeB=graph.makeNode("B");
  Node nodeC=graph.makeNode("C");
  graph.makeEdge("A","B","length",2d);
  graph.makeEdge("B","C","length",3L);
  graph.makeEdge("A","C","length",(byte)10);
  PathFinder finder=factory.dijkstra(PathExpanders.allTypesAndDirections());
  Iterator<WeightedPath> paths=finder.findAllPaths(nodeA,nodeC).iterator();
  assertTrue("expected at least one path",paths.hasNext());
  assertPath(paths.next(),nodeA,nodeB,nodeC);
  assertFalse("expected at most one path",paths.hasNext());
  assertPath(finder.findSinglePath(nodeA,nodeC),nodeA,nodeB,nodeC);
}
