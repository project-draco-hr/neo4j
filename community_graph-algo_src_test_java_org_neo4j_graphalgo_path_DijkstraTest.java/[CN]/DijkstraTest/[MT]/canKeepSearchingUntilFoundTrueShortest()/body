{
  Node a=graph.makeNode("A");
  Node b=graph.makeNode("B");
  Node c=graph.makeNode("C");
  Node d=graph.makeNode("D");
  Node e=graph.makeNode("E");
  Node f=graph.makeNode("F");
  Node g=graph.makeNode("G");
  Node h=graph.makeNode("H");
  graph.makeEdgeChain("A,B,C,D,E,F","length",1);
  graph.makeEdge("A","G","length",1);
  graph.makeEdge("G","H","length",2);
  graph.makeEdge("H","F","length",1);
  PathFinder finder=factory.dijkstra(PathExpanders.allTypesAndDirections());
  Iterator<WeightedPath> paths=finder.findAllPaths(a,f).iterator();
  assertTrue("Expect at least one path",paths.hasNext());
  WeightedPath path=paths.next();
  assertPath(path,a,g,h,f);
  assertTrue("Expect weight 1",path.weight() == 4);
  assertFalse("Expected at most one path",paths.hasNext());
}
