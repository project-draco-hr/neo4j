{
  return new TypeSafeMatcher<PrimitiveLongIterator>(){
    @Override protected boolean matchesSafely(    PrimitiveLongIterator item){
      List<Long> actual=PrimitiveLongCollections.asList(item);
      List<Long> expected=expected();
      eachActual:       for (      Long actualValue : actual) {
        Iterator<Long> expectedIt=expected.iterator();
        while (expectedIt.hasNext()) {
          if (expectedIt.next().equals(actualValue)) {
            expectedIt.remove();
            continue eachActual;
          }
        }
        fail("Got unexpected value: " + actualValue);
      }
      return expected.size() == 0;
    }
    private List<Long> expected(){
      List<Long> expected=new ArrayList<>();
      for (      long v : longs) {
        expected.add(v);
      }
      return expected;
    }
    @Override public void describeTo(    Description description){
      description.appendValueList("[",",","]",expected());
    }
  }
;
}
