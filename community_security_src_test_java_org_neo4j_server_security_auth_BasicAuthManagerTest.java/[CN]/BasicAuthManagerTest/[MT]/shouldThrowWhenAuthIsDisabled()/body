{
  manager.stop();
  users=new InMemoryUserRepository();
  manager=new BasicAuthManager(users,mock(PasswordPolicy.class),mock(AuthenticationStrategy.class),false);
  manager.start();
  try {
    manager.login(authToken("foo","bar"));
    fail("exception expected");
  }
 catch (  IllegalStateException e) {
  }
  try {
    manager.newUser("foo","bar",true);
    fail("exception expected");
  }
 catch (  IllegalStateException e) {
  }
  try {
    manager.deleteUser("foo");
    fail("exception expected");
  }
 catch (  IllegalStateException e) {
  }
  try {
    manager.getUser("foo");
    fail("exception expected");
  }
 catch (  IllegalStateException e) {
  }
  try {
    manager.setUserPassword("foo","bar");
    fail("exception expected");
  }
 catch (  IllegalStateException e) {
  }
  assertThat(users.numberOfUsers(),equalTo(0));
}
