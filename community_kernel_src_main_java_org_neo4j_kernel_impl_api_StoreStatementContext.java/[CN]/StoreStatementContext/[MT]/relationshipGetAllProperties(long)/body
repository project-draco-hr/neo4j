{
  Iterable<String> propertyKeys;
  try {
    RelationshipImpl relImpl=nodeManager.getRelationshipForProxy(relationshipId,null);
    propertyKeys=relImpl.getPropertyKeys(nodeManager);
  }
 catch (  IllegalStateException e) {
    throw new EntityNotFoundException("relationship",relationshipId,e);
  }
catch (  NotFoundException e) {
    throw new EntityNotFoundException("relationship",relationshipId,e);
  }
  return map(new Function<String,Property>(){
    @Override public Property apply(    String propertyKey){
      try {
        long propertyKeyId=propertyKeyGetForName(propertyKey);
        return relationshipGetProperty(relationshipId,propertyKeyId);
      }
 catch (      PropertyKeyNotFoundException e) {
        throw new ThisShouldNotHappenError("Tobias/Stefan","Property key came from the store - should " + "be known.",e);
      }
catch (      PropertyKeyIdNotFoundException e) {
        throw new ThisShouldNotHappenError("Tobias/Stefan","Property key id came from the store - " + "should be known.",e);
      }
catch (      EntityNotFoundException e) {
        throw new ThisShouldNotHappenError("Tobias/Stefan","Relationship existance already verified.",e);
      }
    }
  }
,propertyKeys).iterator();
}
