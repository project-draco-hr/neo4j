{
  assertTrue(nStore.loadLightNode(node));
  PropertyData data[]=nStore.getProperties(node);
  for (int i=0; i < data.length; i++) {
    PropertyRecord record=pStore.getRecord(data[i].getId(),null);
    data[i]=new PropertyData(data[i].getId(),data[i].getIndex(),getValue(record));
  }
  assertEquals(3,data.length);
  for (int i=0; i < 3; i++) {
    if (data[i].getId() == prop1) {
      assertEquals("prop1",MyPropertyIndex.getIndexFor(data[i].getIndex()).getKey());
      assertEquals("string1",data[i].getValue());
      nStore.changeProperty(node,prop1,"-string1");
    }
 else     if (data[i].getId() == prop2) {
      assertEquals("prop2",MyPropertyIndex.getIndexFor(data[i].getIndex()).getKey());
      assertEquals(new Integer(1),data[i].getValue());
      nStore.changeProperty(node,prop2,new Integer(-1));
    }
 else     if (data[i].getId() == prop3) {
      assertEquals("prop3",MyPropertyIndex.getIndexFor(data[i].getIndex()).getKey());
      assertEquals(new Boolean(true),data[i].getValue());
      nStore.changeProperty(node,prop3,new Boolean(false));
    }
 else {
      throw new IOException();
    }
  }
  RelationshipData rels[]=nStore.getRelationships(node);
  assertEquals(2,rels.length);
  for (int i=0; i < 2; i++) {
    if (rels[i].getId() == rel1) {
      RelationshipData rel=rels[i];
      assertEquals(node,rel.firstNode());
      assertEquals(relType1,rel.relationshipType());
    }
 else     if (rels[i].getId() == rel2) {
      RelationshipData rel=rels[i];
      assertEquals(node,rel.secondNode());
      assertEquals(relType2,rel.relationshipType());
    }
 else {
      throw new IOException();
    }
  }
}
