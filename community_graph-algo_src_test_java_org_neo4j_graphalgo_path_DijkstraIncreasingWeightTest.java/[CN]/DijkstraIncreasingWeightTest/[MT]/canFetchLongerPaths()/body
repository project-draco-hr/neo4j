{
  Node s=graph.makeNode("s");
  Node a=graph.makeNode("a");
  Node b=graph.makeNode("b");
  Node c=graph.makeNode("c");
  Node d=graph.makeNode("d");
  Node t=graph.makeNode("t");
  graph.makeEdge("s","a","length",1);
  graph.makeEdge("a","c","length",1);
  graph.makeEdge("s","b","length",1);
  graph.makeEdge("b","a","length",1);
  graph.makeEdge("c","d","length",10);
  graph.makeEdge("d","t","length",10);
  PathExpander expander=PathExpanders.allTypesAndDirections();
  Dijkstra algo=new Dijkstra(expander,CommonEvaluators.doubleCostEvaluator("length"),PathInterestFactory.all(NoneStrictMath.EPSILON));
  Iterator<WeightedPath> paths=algo.findAllPaths(s,t).iterator();
  assertTrue("Expected at least one path.",paths.hasNext());
  assertPath(paths.next(),s,a,c,d,t);
  assertTrue("Expected two paths",paths.hasNext());
  assertPath(paths.next(),s,b,a,c,d,t);
}
