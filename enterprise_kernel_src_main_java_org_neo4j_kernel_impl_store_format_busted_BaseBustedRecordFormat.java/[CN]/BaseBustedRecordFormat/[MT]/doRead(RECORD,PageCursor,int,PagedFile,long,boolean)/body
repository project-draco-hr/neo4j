{
  boolean recordUnit=has(headerByte,HEADER_BIT_RECORD_UNIT);
  if (recordUnit) {
    boolean firstRecordUnit=has(headerByte,HEADER_BIT_FIRST_RECORD_UNIT);
    if (!firstRecordUnit) {
      record.clear();
      return;
    }
  }
  if (recordUnit) {
    int primaryEndOffset=primaryCursor.getOffset() + recordSize - 1;
    long secondaryId=Reference.decode(primaryCursor,PAGE_CURSOR_ADAPTER);
    @SuppressWarnings("resource") SecondaryPageCursorReadDataAdapter readAdapter=new SecondaryPageCursorReadDataAdapter(primaryCursor,storeFile,pageIdForRecord(secondaryId,storeFile.pageSize(),recordSize),offsetForId(secondaryId,storeFile.pageSize(),recordSize),primaryEndOffset,PagedFile.PF_SHARED_READ_LOCK);
    try (SecondaryPageCursorControl secondaryPageCursorControl=readAdapter){
      do {
        secondaryPageCursorControl.reposition();
        doReadInternal(record,primaryCursor,recordSize,headerByte,inUse,readAdapter);
      }
 while (secondaryPageCursorControl.shouldRetry());
      record.setSecondaryId(secondaryId);
    }
   }
 else {
    doReadInternal(record,primaryCursor,recordSize,headerByte,inUse,PAGE_CURSOR_ADAPTER);
  }
}
