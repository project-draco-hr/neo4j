{
  this.graphDbService=graphDb;
  this.cacheManager=cacheManager;
  this.lockManager=lockManager;
  this.transactionManager=transactionManager;
  this.propertyIndexManager=new PropertyIndexManager(transactionManager,persistenceManager,idGenerator);
  this.lockReleaser=lockReleaser;
  lockReleaser.setNodeManager(this);
  lockReleaser.setPropertyIndexManager(propertyIndexManager);
  this.persistenceManager=persistenceManager;
  this.idGenerator=idGenerator;
  this.relTypeHolder=new RelationshipTypeHolder(transactionManager,persistenceManager,idGenerator,relTypeCreator);
  this.cacheType=cacheType;
  this.nodeCache=cacheType.node(cacheManager);
  this.relCache=cacheType.relationship(cacheManager);
  for (int i=0; i < loadLocks.length; i++) {
    loadLocks[i]=new ReentrantLock();
  }
  nodePropertyTrackers=new LinkedList<PropertyTracker<Node>>();
  relationshipPropertyTrackers=new LinkedList<PropertyTracker<Relationship>>();
}
