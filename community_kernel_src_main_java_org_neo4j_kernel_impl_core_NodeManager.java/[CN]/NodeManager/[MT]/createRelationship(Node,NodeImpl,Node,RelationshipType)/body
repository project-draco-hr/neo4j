{
  if (startNode == null || endNode == null || type == null) {
    throw new IllegalArgumentException("Null parameter, startNode=" + startNode + ", endNode="+ endNode+ ", type="+ type);
  }
  int typeId=relTypeHolder.getOrCreateId(type.name());
  long startNodeId=startNode.getId();
  long endNodeId=endNode.getId();
  NodeImpl secondNode=getLightNode(endNodeId);
  if (secondNode == null) {
    setRollbackOnly();
    throw new NotFoundException("Second node[" + endNode.getId() + "] deleted");
  }
  long id=idGenerator.nextId(Relationship.class);
  RelationshipImpl rel=newRelationshipImpl(id,startNodeId,endNodeId,typeId,true);
  RelationshipProxy proxy=new RelationshipProxy(id,relationshipLookups,statementCtxProvider);
  TransactionState transactionState=getTransactionState();
  transactionState.acquireWriteLock(proxy);
  boolean success=false;
  TransactionState tx=transactionState;
  try {
    transactionState.acquireWriteLock(startNodeProxy);
    transactionState.acquireWriteLock(endNode);
    persistenceManager.relationshipCreate(id,typeId,startNodeId,endNodeId);
    if (startNodeId == endNodeId) {
      tx.getOrCreateCowRelationshipAddMap(startNode,typeId).add(id,DirectionWrapper.BOTH);
    }
 else {
      tx.getOrCreateCowRelationshipAddMap(startNode,typeId).add(id,DirectionWrapper.OUTGOING);
      tx.getOrCreateCowRelationshipAddMap(secondNode,typeId).add(id,DirectionWrapper.INCOMING);
    }
    relCache.put(rel);
    success=true;
    return proxy;
  }
  finally {
    if (!success) {
      setRollbackOnly();
    }
  }
}
