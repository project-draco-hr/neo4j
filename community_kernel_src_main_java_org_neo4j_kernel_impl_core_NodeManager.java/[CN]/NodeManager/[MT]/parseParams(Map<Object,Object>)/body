{
  if (params.containsKey("use_adaptive_cache")) {
    String value=(String)params.get("use_adaptive_cache");
    if (value.toLowerCase().equals("yes")) {
      useAdaptiveCache=true;
    }
 else     if (value.toLowerCase().equals("no")) {
      useAdaptiveCache=false;
    }
 else {
      log.warning("Unable to parse use_adaptive_cache=" + value);
    }
  }
  if (params.containsKey("adaptive_cache_heap_ratio")) {
    Object value=params.get("adaptive_cache_heap_ratio");
    try {
      adaptiveCacheHeapRatio=Float.parseFloat((String)value);
    }
 catch (    NumberFormatException e) {
      log.warning("Unable to parse adaptive_cache_heap_ratio " + value);
    }
    if (adaptiveCacheHeapRatio < 0.1f) {
      adaptiveCacheHeapRatio=0.1f;
    }
    if (adaptiveCacheHeapRatio > 0.95f) {
      adaptiveCacheHeapRatio=0.95f;
    }
  }
  if (params.containsKey("min_node_cache_size")) {
    Object value=params.get("min_node_cache_size");
    try {
      minNodeCacheSize=Integer.parseInt((String)value);
    }
 catch (    NumberFormatException e) {
      log.warning("Unable to parse min_node_cache_size " + value);
    }
  }
  if (params.containsKey("min_relationship_cache_size")) {
    Object value=params.get("min_relationship_cache_size");
    try {
      minRelCacheSize=Integer.parseInt((String)value);
    }
 catch (    NumberFormatException e) {
      log.warning("Unable to parse min_relationship_cache_size " + value);
    }
  }
  if (params.containsKey("max_node_cache_size")) {
    Object value=params.get("max_node_cache_size");
    try {
      maxNodeCacheSize=Integer.parseInt((String)value);
    }
 catch (    NumberFormatException e) {
      log.warning("Unable to parse max_node_cache_size " + value);
    }
  }
  if (params.containsKey("max_relationship_cache_size")) {
    Object value=params.get("max_relationship_cache_size");
    try {
      maxRelCacheSize=Integer.parseInt((String)value);
    }
 catch (    NumberFormatException e) {
      log.warning("Unable to parse max_relationship_cache_size " + value);
    }
  }
}
