{
  store=mock(StatementContext.class);
  when(store.getIndexRules(labelId1)).then(asAnswer(Collections.<IndexRule>emptyList()));
  when(store.getIndexRules(labelId2)).then(asAnswer(Collections.<IndexRule>emptyList()));
  when(store.getIndexRules()).then(asAnswer(Collections.<IndexRule>emptyList()));
  when(store.addIndexRule(anyLong(),anyLong())).thenAnswer(new Answer<IndexRule>(){
    @Override public IndexRule answer(    InvocationOnMock invocation) throws Throwable {
      return new IndexRule(ruleId + rulesCreated++,(Long)invocation.getArguments()[0],(SchemaIndexProvider.Descriptor)invocation.getArguments()[1],(Long)invocation.getArguments()[2]);
    }
  }
);
  oldTxState=mock(OldTxStateBridge.class);
  state=new TxState(oldTxState,mock(PersistenceManager.class),mock(TxState.IdGeneration.class),new DefaultSchemaIndexProviderMap(NO_INDEX_PROVIDER));
  txContext=new TransactionStateStatementContext(store,state);
}
