{
  if (protocol.isExpecting(CatchupClientProtocol.State.MESSAGE_TYPE)) {
    ByteBuf buffer=(ByteBuf)msg;
    byte version=buffer.readByte();
    byte messageType=buffer.readByte();
    ResponseMessageType responseMessageType=from(version,messageType);
switch (responseMessageType) {
case STORE_ID:
      protocol.expect(CatchupClientProtocol.State.STORE_ID);
    break;
case TX:
  protocol.expect(CatchupClientProtocol.State.TX_PULL_RESPONSE);
break;
case FILE:
protocol.expect(CatchupClientProtocol.State.FILE_HEADER);
break;
case STORE_COPY_FINISHED:
protocol.expect(CatchupClientProtocol.State.STORE_COPY_FINISHED);
break;
case CORE_SNAPSHOT:
protocol.expect(CatchupClientProtocol.State.CORE_SNAPSHOT);
break;
case TX_STREAM_FINISHED:
protocol.expect(CatchupClientProtocol.State.TX_STREAM_FINISHED);
break;
default :
log.warn("No handler found for version %d and message type %s",version,responseMessageType);
}
ReferenceCountUtil.release(msg);
}
 else {
ctx.fireChannelRead(msg);
}
}
