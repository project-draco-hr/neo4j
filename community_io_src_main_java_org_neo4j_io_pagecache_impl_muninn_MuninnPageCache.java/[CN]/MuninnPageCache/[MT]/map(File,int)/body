{
  assertHealthy();
  ensureThreadsInitialised();
  if (filePageSize > cachePageSize) {
    throw new IllegalArgumentException("Cannot map files with a filePageSize (" + filePageSize + ") that is greater than the cachePageSize ("+ cachePageSize+ ")");
  }
  FileMapping current=mappedFiles;
  while (current != null) {
    if (current.file.equals(file)) {
      MuninnPagedFile pagedFile=current.pagedFile;
      if (pagedFile.pageSize() != filePageSize) {
        String msg="Cannot map file " + file + " with "+ "filePageSize "+ filePageSize+ " bytes, "+ "because it has already been mapped with a "+ "filePageSize of "+ pagedFile.pageSize()+ " bytes.";
        throw new IllegalArgumentException(msg);
      }
      pagedFile.incrementRefCount();
      return pagedFile;
    }
    current=current.next;
  }
  MuninnPagedFile pagedFile=new MuninnPagedFile(file,this,filePageSize,swapperFactory,cursorPool,tracer);
  pagedFile.incrementRefCount();
  current=new FileMapping(file,pagedFile);
  current.next=mappedFiles;
  mappedFiles=current;
  tracer.mappedFile(file);
  return pagedFile;
}
