{
  return new CacheLiveLockException("Live-lock encountered when trying to cooperatively evict a page during page fault. " + "This happens when we want to access a page that is not in memory, so it has to be faulted in, but " + "there are no free memory pages available to accept the page fault, so we have to evict an existing "+ "page, but all the in-memory pages are currently locked by other accesses. If those other access are "+ "waiting for our page fault to make progress, then we have a live-lock, and the only way we can get "+ "out of it is by throwing this exception. This should be extremely rare, but can happen if the page "+ "cache size is tiny and the number of concurrently running transactions is very high. You should be "+ "able to get around this problem by increasing the amount of memory allocated to the page cache "+ "with the `dbms.pagecache.memory` setting. Please contact Neo4j support if you need help tuning your "+ "database.");
}
