{
  int clockArm=0;
  while (!Thread.interrupted()) {
    int pageCountToEvict=parkUntilEvictionRequired(keepFree);
    try (EvictionRunEvent evictionRunEvent=monitor.beginPageEvictions(pageCountToEvict)){
      clockArm=evictPages(pageCountToEvict,clockArm,evictionRunEvent);
    }
   }
  Object freelistHead=getAndSetFreelistHead(shutdownSignal);
  if (freelistHead instanceof FreePageWaiter) {
    FreePageWaiter waiters=(FreePageWaiter)freelistHead;
    interruptAllWaiters(waiters);
  }
}
