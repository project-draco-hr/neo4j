{
  createInitialNodes(db);
  long initialHighestNodeId=highestNodeId(db);
  Race race=new Race();
  for (int i=0; i < CONTESTANTS_COUNT; i++) {
    if (i % 2 == 0) {
      race.addContestant(new NodeCreator(db));
    }
 else {
      race.addContestant(new NodeRemover(db));
    }
  }
  race.go();
  int writeContestants=CONTESTANTS_COUNT / 2;
  int createdNodes=writeContestants * OPERATIONS_COUNT;
  long highestNodeIdWithoutReuse=initialHighestNodeId + createdNodes;
  long currentHighestNodeId=highestNodeId(db);
  assertThat(currentHighestNodeId,lessThan(highestNodeIdWithoutReuse));
}
