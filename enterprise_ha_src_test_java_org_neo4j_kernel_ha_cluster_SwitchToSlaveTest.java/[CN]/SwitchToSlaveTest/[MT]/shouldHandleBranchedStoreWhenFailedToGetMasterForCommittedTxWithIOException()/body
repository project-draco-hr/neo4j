{
  NeoStoreXaDataSource nioneoDataSource=mock(NeoStoreXaDataSource.class);
  long fakeTxId=2L;
  when(nioneoDataSource.getLastCommittedTxId()).thenReturn(fakeTxId);
  when(nioneoDataSource.getMasterForCommittedTx(fakeTxId)).thenThrow(new IOException());
  try {
    switchToSlave.checkDataConsistency(mock(HaXaDataSourceManager.class),mock(MasterClient.class),mock(RequestContextFactory.class),nioneoDataSource,null,true);
    fail("Should have thrown " + BranchedDataException.class.getSimpleName() + " exception");
  }
 catch (  BranchedDataException e) {
  }
  verify(switchToSlave).stopServicesAndHandleBranchedStore(any(BranchedDataPolicy.class));
}
