{
  deleteFileOrDirectory(new File(DB_PATH));
  graphDb=new GraphDatabaseFactory().newEmbeddedDatabase(DB_PATH);
  registerShutdownHook();
  try (Transaction tx=graphDb.beginTx()){
    indexService=graphDb.index().forNodes("nodes");
    createChain("Neo","Trinity");
    createChain("Neo","Morpheus","Trinity");
    createChain("Morpheus","Cypher","Agent Smith");
    createChain("Morpheus","Agent Smith");
    tx.success();
  }
   try (Transaction tx=graphDb.beginTx()){
    Node neo=getOrCreateNode("Neo");
    Node agentSmith=getOrCreateNode("Agent Smith");
    PathFinder<Path> finder=GraphAlgoFactory.shortestPath(PathExpanders.forTypeAndDirection(KNOWS,Direction.BOTH),4);
    Path foundPath=finder.findSinglePath(neo,agentSmith);
    System.out.println("Path from Neo to Agent Smith: " + Paths.simplePathToString(foundPath,NAME_KEY));
  }
   System.out.println("Shutting down database ...");
  graphDb.shutdown();
}
