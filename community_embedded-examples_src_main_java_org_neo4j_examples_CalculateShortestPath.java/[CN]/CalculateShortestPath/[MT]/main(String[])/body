{
  deleteFileOrDirectory(new File(DB_PATH));
  graphDb=new GraphDatabaseFactory().newEmbeddedDatabase(DB_PATH);
  indexService=graphDb.index().forNodes("nodes");
  registerShutdownHook();
  Transaction tx=graphDb.beginTx();
  try {
    createChain("Neo","Trinity");
    createChain("Neo","Morpheus","Trinity");
    createChain("Morpheus","Cypher","Agent Smith");
    createChain("Morpheus","Agent Smith");
    tx.success();
  }
  finally {
    tx.finish();
  }
  Node neo=getOrCreateNode("Neo");
  Node agentSmith=getOrCreateNode("Agent Smith");
  PathFinder<Path> finder=GraphAlgoFactory.shortestPath(Traversal.expanderForTypes(KNOWS,Direction.BOTH),4);
  Path foundPath=finder.findSinglePath(neo,agentSmith);
  System.out.println("Path from Neo to Agent Smith: " + Traversal.simplePathToString(foundPath,NAME_KEY));
  System.out.println("Shutting down database ...");
  graphDb.shutdown();
}
