{
  TransactionIdStore transactionIdStore=new DeadSimpleTransactionIdStore(0l);
  LogRotationControl logRotationControl=mock(LogRotationControl.class);
  LogPositionCache positionCache=new LogPositionCache(10,1000);
  LifeSupport life=new LifeSupport();
  PhysicalLogFiles logFiles=new PhysicalLogFiles(dir,DEFAULT_NAME,fs);
  LogFile logFile=life.add(new PhysicalLogFile(fs,logFiles,1000,NO_PRUNING,transactionIdStore,mock(LogVersionRepository.class),new Monitors().newMonitor(PhysicalLogFile.Monitor.class),logRotationControl,positionCache,new Visitor<ReadableLogChannel,IOException>(){
    @Override public boolean visit(    ReadableLogChannel channel) throws IOException {
      fail("Should be nothing to recover");
      return false;
    }
  }
));
  TxIdGenerator txIdGenerator=new DefaultTxIdGenerator(singletonProvider(transactionIdStore));
  TransactionStore store=life.add(new PhysicalTransactionStore(logFile,txIdGenerator,positionCache,new VersionAwareLogEntryReader(CommandReaderFactory.DEFAULT)));
  try {
    life.start();
  }
  finally {
    life.shutdown();
  }
}
