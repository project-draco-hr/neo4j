{
  Clusters.Cluster cluster=new Clusters.Cluster("neo4j.ha");
  for (int i=0; i < 3; i++) {
    cluster.getMembers().add(new Clusters.Member("localhost:" + (5001 + i),true));
  }
  final Clusters clusters=new Clusters();
  clusters.getClusters().add(cluster);
  ClusterManager clusterManager=new ClusterManager(ClusterManager.provided(clusters),testDirectory.directory("testCluster"),MapUtil.stringMap(HaSettings.ha_server.name(),"localhost:6001-6005",HaSettings.tx_push_factor.name(),"2"));
  try {
    clusterManager.start();
    clusterManager.getDefaultCluster().await(allSeesAllAsAvailable());
    long nodeId;
    HighlyAvailableGraphDatabase master=clusterManager.getDefaultCluster().getMaster();
    try (Transaction tx=master.beginTx()){
      Node node=master.createNode();
      nodeId=node.getId();
      node.setProperty("foo","bar");
      tx.success();
    }
     HighlyAvailableGraphDatabase anySlave=clusterManager.getDefaultCluster().getAnySlave();
    try (Transaction ignore=anySlave.beginTx()){
      Node node=anySlave.getNodeById(nodeId);
      assertThat(node.getProperty("foo").toString(),CoreMatchers.equalTo("bar"));
    }
   }
  finally {
    clusterManager.stop();
  }
}
