{
  HighlyAvailableGraphDatabase first=null;
  try {
    String masterStoreDir=TargetDirectory.forTest(getClass()).cleanDirectory("testConflictingClusterPortsMaster").getAbsolutePath();
    first=(HighlyAvailableGraphDatabase)new TestHighlyAvailableGraphDatabaseFactory().newHighlyAvailableDatabaseBuilder(masterStoreDir).setConfig(ClusterSettings.initial_hosts,"127.0.0.1:5001").setConfig(ClusterSettings.cluster_server,"127.0.0.1:5001").setConfig(ClusterSettings.server_id,"1").setConfig(HaSettings.ha_server,"127.0.0.1:6666").newGraphDatabase();
    try {
      String slaveStoreDir=TargetDirectory.forTest(getClass()).cleanDirectory("testConflictingClusterPortsSlave").getAbsolutePath();
      HighlyAvailableGraphDatabase failed=(HighlyAvailableGraphDatabase)new TestHighlyAvailableGraphDatabaseFactory().newHighlyAvailableDatabaseBuilder(slaveStoreDir).setConfig(ClusterSettings.initial_hosts,"127.0.0.1:5001").setConfig(ClusterSettings.cluster_server,"127.0.0.1:5001").setConfig(ClusterSettings.server_id,"2").setConfig(HaSettings.ha_server,"127.0.0.1:6667").newGraphDatabase();
      failed.shutdown();
      fail("Should not start when ports conflict");
    }
 catch (    Exception e) {
    }
  }
  finally {
    if (first != null) {
      first.shutdown();
    }
  }
}
