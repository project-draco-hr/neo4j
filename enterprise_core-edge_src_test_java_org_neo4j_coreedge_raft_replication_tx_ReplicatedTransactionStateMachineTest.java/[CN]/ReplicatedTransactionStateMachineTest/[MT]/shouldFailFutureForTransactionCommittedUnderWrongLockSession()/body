{
  int txLockSessionId=23;
  int currentLockSessionId=24;
  ReplicatedTransaction tx=ReplicatedTransactionFactory.createImmutableReplicatedTransaction(physicalTx(txLockSessionId));
  TransactionCommitProcess localCommitProcess=mock(TransactionCommitProcess.class);
  RecoverTransactionLogState recoverTransactionLogState=mock(RecoverTransactionLogState.class);
  when(recoverTransactionLogState.findLastAppliedIndex()).thenReturn(-1L);
  final ReplicatedTransactionStateMachine<RaftTestMember> stateMachine=new ReplicatedTransactionStateMachine<>(localCommitProcess,lockState(currentLockSessionId),NullLogProvider.getInstance(),recoverTransactionLogState);
  Optional<Result> result=stateMachine.applyCommand(tx,0);
  try {
    assertTrue(result.isPresent());
    result.get().consume();
  }
 catch (  TransactionFailureException tfe) {
    assertEquals(Status.Transaction.LockSessionExpired,tfe.status());
  }
}
