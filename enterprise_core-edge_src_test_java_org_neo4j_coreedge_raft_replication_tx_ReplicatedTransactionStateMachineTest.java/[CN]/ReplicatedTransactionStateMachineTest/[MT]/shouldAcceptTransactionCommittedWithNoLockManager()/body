{
  LocalOperationId localOperationId=new LocalOperationId(0,0);
  int txLockSessionId=Locks.Client.NO_LOCK_SESSION_ID;
  int currentLockSessionId=24;
  ReplicatedTransaction tx=ReplicatedTransactionFactory.createImmutableReplicatedTransaction(physicalTx(txLockSessionId),globalSession,localOperationId);
  TransactionCommitProcess localCommitProcess=mock(TransactionCommitProcess.class);
  RecoverTransactionLogState recoverTransactionLogState=mock(RecoverTransactionLogState.class);
  when(recoverTransactionLogState.findLastCommittedIndex()).thenReturn(-1L);
  CommittingTransactions committingTransactions=new CommittingTransactionsRegistry();
  final ReplicatedTransactionStateMachine listener=new ReplicatedTransactionStateMachine<>(localCommitProcess,globalSession,lockState(currentLockSessionId),committingTransactions,new InMemoryStateStorage<>(new GlobalSessionTrackerState<>()),NullLogProvider.getInstance(),recoverTransactionLogState);
  CommittingTransaction future=committingTransactions.register(localOperationId);
  listener.applyCommand(tx,0);
  future.waitUntilCommitted(1,TimeUnit.SECONDS);
}
