{
  PropertyData data[]=nStore.getProperties(node);
  for (int i=0; i < data.length; i++) {
    data[i]=new PropertyData(data[i].getId(),data[i].getKey(),pStore.getPropertyValue(data[i].getId()),data[i].nextPropertyId());
  }
  assertEquals(3,data.length);
  for (int i=0; i < 3; i++) {
    if (data[i].getId() == prop1) {
      assertEquals("prop1",data[i].getKey());
      assertEquals("-string2",data[i].getValue());
    }
 else     if (data[i].getId() == prop2) {
      assertEquals("prop2",data[i].getKey());
      assertEquals(new Integer(-2),data[i].getValue());
    }
 else     if (data[i].getId() == prop3) {
      assertEquals("prop3",data[i].getKey());
      assertEquals(new Boolean(true),data[i].getValue());
      nStore.removeProperty(node,prop3);
    }
 else {
      throw new IOException();
    }
  }
  assertEquals(2,nStore.getProperties(node).length);
  assertEquals(0,nStore.getRelationships(node).length);
  nStore.deleteNode(node);
}
