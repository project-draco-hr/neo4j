{
  StoreId storeId=new StoreId(1,2,3,4);
  StoreFetcher storeFetcher=mock(StoreFetcher.class);
  when(storeFetcher.storeId(any(MemberId.class))).thenReturn(storeId);
  LocalDatabase localDatabase=mock(LocalDatabase.class);
  when(localDatabase.storeId()).thenReturn(storeId);
  MemberId memberId=new MemberId(UUID.randomUUID());
  TopologyService hazelcastTopology=mock(TopologyService.class);
  ClusterTopology clusterTopology=mock(ClusterTopology.class);
  when(hazelcastTopology.currentTopology()).thenReturn(clusterTopology);
  when(clusterTopology.coreMembers()).thenReturn(asSet(memberId));
  when(localDatabase.isEmpty()).thenReturn(false);
  DataSourceManager dataSourceManager=mock(DataSourceManager.class);
  Lifecycle txPulling=mock(Lifecycle.class);
  EdgeStartupProcess edgeStartupProcess=new EdgeStartupProcess(storeFetcher,localDatabase,txPulling,dataSourceManager,new AlwaysChooseFirstMember(hazelcastTopology),new ConstantTimeRetryStrategy(1,MILLISECONDS),NullLogProvider.getInstance(),mock(EdgeTopologyService.class),Config.empty());
  edgeStartupProcess.start();
  verify(localDatabase).isEmpty();
  verify(localDatabase).ensureSameStoreId(memberId,storeFetcher);
  verify(dataSourceManager).start();
  verify(txPulling).start();
  verifyNoMoreInteractions(localDatabase,dataSourceManager,txPulling);
}
