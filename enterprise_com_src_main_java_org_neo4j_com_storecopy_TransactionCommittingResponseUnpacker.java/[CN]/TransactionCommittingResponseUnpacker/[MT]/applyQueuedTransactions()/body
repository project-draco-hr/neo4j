{
synchronized (logFile) {
    logRotation.rotateLogIfNeeded(LogAppendEvent.NULL);
    if (!kernelHealth.isHealthy()) {
      Throwable causeOfPanic=kernelHealth.getCauseOfPanic();
      log.error(msg + " Original kernel panic cause was:\n" + causeOfPanic.getMessage());
      throw new IOException(msg,causeOfPanic);
    }
    try {
      if (transactionQueue.accept(batchCommitter) > 0) {
        appender.force();
        try {
          transactionQueue.accept(batchApplier);
          storeApplier.closeBatch();
        }
 catch (        Throwable cause) {
          updateKernelHealth(cause);
          throw cause;
        }
 finally {
          if (kernelHealth.isHealthy()) {
            transactionQueue.accept(batchCloser);
          }
        }
      }
    }
 catch (    Throwable cause) {
      updateKernelHealth(cause);
      throw cause;
    }
 finally {
      transactionQueue.clear();
    }
  }
}
