{
  return new TypeSafeMatcher<List<LogEntry>>(){
    @Override public boolean matchesSafely(    List<LogEntry> item){
      Iterator<LogEntry> actualEntries=item.iterator();
{
        for (        Matcher<? extends LogEntry> matcher : matchers) {
          if (actualEntries.hasNext()) {
            LogEntry next=actualEntries.next();
            if (!matcher.matches(next)) {
              return false;
            }
          }
 else {
            return false;
          }
        }
        if (actualEntries.hasNext()) {
          return false;
        }
        return true;
      }
    }
    @Override public void describeTo(    Description description){
      for (      Matcher<? extends LogEntry> matcher : matchers) {
        description.appendDescriptionOf(matcher).appendText(",\n");
      }
    }
  }
;
}
