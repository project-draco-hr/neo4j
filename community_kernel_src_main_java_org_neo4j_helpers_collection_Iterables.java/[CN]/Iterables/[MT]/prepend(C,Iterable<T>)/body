{
  return new Iterable<T>(){
    @Override public Iterator<T> iterator(){
      return new Iterator<T>(){
        T first=item;
        Iterator<T> iterator;
        @Override public boolean hasNext(){
          if (first != null) {
            return true;
          }
 else {
            if (iterator == null) {
              iterator=iterable.iterator();
            }
          }
          return iterator.hasNext();
        }
        @Override public T next(){
          if (first != null) {
            try {
              return first;
            }
  finally {
              first=null;
            }
          }
 else {
            return iterator.next();
          }
        }
        @Override public void remove(){
        }
      }
;
    }
  }
;
}
