{
  return new Iterable<T>(){
    @Override public Iterator<T> iterator(){
      final Iterator<T> iterator=iterable.iterator();
      return new Iterator<T>(){
        Set<T> items=new HashSet<T>();
        T nextItem;
        @Override public boolean hasNext(){
          while (iterator.hasNext()) {
            nextItem=iterator.next();
            if (items.add(nextItem))             return true;
          }
          return false;
        }
        @Override public T next(){
          if (nextItem == null && !hasNext())           throw new NoSuchElementException();
          return nextItem;
        }
        @Override public void remove(){
        }
      }
;
    }
  }
;
}
