{
  File file=new File(arg);
  long[] ids=null;
  if (file.isFile()) {
  }
 else   if (!file.isDirectory() && file.getName().indexOf(':') != -1) {
    int idStart=arg.lastIndexOf(':');
    String[] idStrings=arg.substring(idStart + 1).split(",");
    ids=new long[idStrings.length];
    for (int i=0; i < ids.length; i++) {
      ids[i]=Long.parseLong(idStrings[i]);
    }
    file=new File(arg.substring(0,idStart));
    if (!file.isFile()) {
      throw new IllegalArgumentException("No such file: " + arg);
    }
  }
  NeoStores.StoreType storeType=STORE_FILENAME_TYPE_MAPPER.apply(file.getName());
  try (NeoStores neoStores=createStoreFactory.apply(file).openNeoStores(storeType)){
switch (storeType) {
case NODE:
      dumpNodeStore(neoStores,ids);
    break;
case RELATIONSHIP:
  dumpRelationshipStore(neoStores,ids);
break;
case PROPERTY:
dumpPropertyStore(neoStores,ids);
break;
case SCHEMA:
dumpSchemaStore(neoStores,ids);
break;
case PROPERTY_KEY_TOKEN:
dumpPropertyKeys(neoStores,ids);
break;
case LABEL_TOKEN:
dumpLabels(neoStores,ids);
break;
case RELATIONSHIP_TYPE_TOKEN:
dumpRelationshipTypes(neoStores,ids);
break;
case RELATIONSHIP_GROUP:
dumpRelationshipGroups(neoStores,ids);
break;
default :
throw new IllegalArgumentException("Unsupported store type: " + storeType);
}
}
 }
