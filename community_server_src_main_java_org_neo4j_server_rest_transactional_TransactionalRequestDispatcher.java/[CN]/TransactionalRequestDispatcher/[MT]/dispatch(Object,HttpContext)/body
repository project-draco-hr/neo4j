{
  RepresentationWriteHandler representationWriteHandler=DO_NOTHING;
  AccessMode mode=AuthorizedRequestWrapper.getAccessModeFromHttpContext(httpContext);
  if (o instanceof RestfulGraphDatabase) {
    RestfulGraphDatabase restfulGraphDatabase=(RestfulGraphDatabase)o;
    final Transaction transaction=database.getGraph().beginTransaction(KernelTransaction.Type.implicit,mode);
    restfulGraphDatabase.getOutputFormat().setRepresentationWriteHandler(representationWriteHandler=new CommitOnSuccessfulStatusCodeRepresentationWriteHandler(httpContext,transaction));
  }
 else   if (o instanceof BatchOperationService) {
    BatchOperationService batchOperationService=(BatchOperationService)o;
    final Transaction transaction=database.getGraph().beginTransaction(KernelTransaction.Type.explicit,mode);
    batchOperationService.setRepresentationWriteHandler(representationWriteHandler=new CommitOnSuccessfulStatusCodeRepresentationWriteHandler(httpContext,transaction));
  }
 else   if (o instanceof CypherService) {
    CypherService cypherService=(CypherService)o;
    final Transaction transaction=database.getGraph().beginTransaction(KernelTransaction.Type.explicit,mode);
    cypherService.getOutputFormat().setRepresentationWriteHandler(representationWriteHandler=new CommitOnSuccessfulStatusCodeRepresentationWriteHandler(httpContext,transaction));
  }
 else   if (o instanceof DatabaseMetadataService) {
    DatabaseMetadataService databaseMetadataService=(DatabaseMetadataService)o;
    final Transaction transaction=database.getGraph().beginTransaction(KernelTransaction.Type.implicit,mode);
    databaseMetadataService.setRepresentationWriteHandler(representationWriteHandler=new RepresentationWriteHandler(){
      @Override public void onRepresentationStartWriting(){
      }
      @Override public void onRepresentationWritten(){
      }
      @Override public void onRepresentationFinal(){
        transaction.close();
      }
    }
);
  }
 else   if (o instanceof ExtensionService) {
    ExtensionService extensionService=(ExtensionService)o;
    extensionService.getOutputFormat().setRepresentationWriteHandler(representationWriteHandler=new RepresentationWriteHandler(){
      Transaction transaction;
      @Override public void onRepresentationStartWriting(){
        transaction=database.getGraph().beginTransaction(KernelTransaction.Type.implicit,mode);
      }
      @Override public void onRepresentationWritten(){
      }
      @Override public void onRepresentationFinal(){
        if (transaction != null) {
          transaction.close();
        }
      }
    }
);
  }
  try {
    requestDispatcher.dispatch(o,httpContext);
  }
 catch (  RuntimeException e) {
    representationWriteHandler.onRepresentationFinal();
    throw e;
  }
}
