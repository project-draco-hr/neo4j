{
  getPageCache(fs,maxPages,pageCachePageSize,PageCacheTracer.NULL);
  int smallPageSize=16;
  int largePageSize=17;
  try (PagedFile pfA=pageCache.map(file("a"),smallPageSize);PagedFile pfB=pageCache.map(existingFile("b"),largePageSize);PageCursor cursorA=pfA.io(0,PF_SHARED_WRITE_LOCK);PageCursor cursorB=pfB.io(0,PF_SHARED_WRITE_LOCK)){
    assertTrue(cursorA.next());
    for (int i=0; i < smallPageSize; i++) {
      cursorA.putByte((byte)(i + 1));
    }
    assertTrue(cursorB.next());
    assertThat(cursorA.copyTo(0,cursorB,0,smallPageSize),is(smallPageSize));
    for (int i=0; i < smallPageSize; i++) {
      assertThat(cursorB.getByte(),is((byte)(i + 1)));
    }
    assertThat(cursorB.getByte(),is((byte)0));
  }
 }
