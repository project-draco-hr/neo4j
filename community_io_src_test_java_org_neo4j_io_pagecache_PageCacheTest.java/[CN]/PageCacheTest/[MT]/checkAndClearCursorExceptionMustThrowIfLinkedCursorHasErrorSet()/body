{
  getPageCache(fs,maxPages,pageCachePageSize,PageCacheTracer.NULL);
  try (PagedFile pf=pageCache.map(file("a"),filePageSize);PageCursor writer=pf.io(0,PF_SHARED_WRITE_LOCK);PageCursor reader=pf.io(0,PF_SHARED_READ_LOCK)){
    String msg="Boo" + ThreadLocalRandom.current().nextInt();
    assertTrue(writer.next());
    try (PageCursor linkedWriter=writer.openLinkedCursor(1)){
      assertTrue(linkedWriter.next());
      linkedWriter.setCursorException(msg);
      try {
        writer.checkAndClearCursorException();
        fail("checkAndClearCursorException on writer should have thrown due to linked cursor error");
      }
 catch (      CursorException e) {
        assertThat(e.getMessage(),is(msg));
      }
    }
     msg="Boo" + ThreadLocalRandom.current().nextInt();
    assertTrue(reader.next());
    try (PageCursor linkedReader=reader.openLinkedCursor(1)){
      assertTrue(linkedReader.next());
      linkedReader.setCursorException(msg);
      try {
        reader.checkAndClearCursorException();
        fail("checkAndClearCursorException on reader should have thrown due to linked cursor error");
      }
 catch (      CursorException e) {
        assertThat(e.getMessage(),is(msg));
      }
    }
   }
 }
