{
  int initialPages=1;
  int pagesToAdd=3;
  generateFileWithRecords(file,recordsPerFilePage * initialPages,recordSize);
  PageCache cache=getPageCache(fs,maxPages,pageCachePageSize,PageCacheMonitor.NULL);
  PagedFile pagedFile=cache.map(file,filePageSize);
  try (PageCursor cursor=pagedFile.io(1L,PF_EXCLUSIVE_LOCK)){
    for (int i=0; i < pagesToAdd; i++) {
      assertTrue(cursor.next());
      do {
        writeRecords(cursor);
      }
 while (cursor.retry());
    }
  }
   int pagesChecked=0;
  try (PageCursor cursor=pagedFile.io(0L,PF_EXCLUSIVE_LOCK | PF_NO_GROW)){
    while (cursor.next()) {
      verifyRecordsMatchExpected(cursor);
      pagesChecked++;
    }
  }
   assertThat(pagesChecked,is(initialPages + pagesToAdd));
  pagesChecked=0;
  try (PageCursor cursor=pagedFile.io(0L,PF_SHARED_LOCK)){
    while (cursor.next()) {
      verifyRecordsMatchExpected(cursor);
      pagesChecked++;
    }
  }
   assertThat(pagesChecked,is(initialPages + pagesToAdd));
  cache.unmap(file);
}
