{
  getPageCache(fs,maxPages,pageCachePageSize,PageCacheTracer.NULL);
  File fileA=existingFile("a");
  File fileB=existingFile("b");
  generateFileWithRecords(fileA,1,16);
  generateFileWithRecords(fileB,1,16);
  try (PagedFile pfA=pageCache.map(fileA,filePageSize);PagedFile pfB=pageCache.map(fileB,filePageSize);PageCursor a=pfA.io(0,PF_SHARED_READ_LOCK);PageCursor b=pfA.io(0,PF_SHARED_READ_LOCK);PageCursor c=pfA.io(0,PF_SHARED_WRITE_LOCK);PageCursor d=pfA.io(0,PF_SHARED_WRITE_LOCK);PageCursor e=pfB.io(0,PF_SHARED_READ_LOCK);PageCursor f=pfB.io(0,PF_SHARED_READ_LOCK);PageCursor g=pfB.io(0,PF_SHARED_WRITE_LOCK);PageCursor h=pfB.io(0,PF_SHARED_WRITE_LOCK)){
    assertTrue(a.next());
    assertTrue(b.next());
    assertTrue(c.next());
    assertTrue(d.next());
    assertTrue(e.next());
    assertTrue(f.next());
    assertTrue(g.next());
    assertTrue(h.next());
  }
 }
