{
  ClockCacheTest<Integer,String> cache=new ClockCacheTest<Integer,String>("TestCacheSingle",2);
  cache.put(1,"1");
  cache.put(2,"2");
  cache.put(3,"3");
  assertNull(cache.get(1));
  assertEquals("2",cache.get(2));
  assertEquals("3",cache.get(3));
  assertEquals("1",cache.getLastCleanedElement());
  cache.put(1,"1-1");
  assertEquals("3",cache.getLastCleanedElement());
  assertEquals("1-1",cache.get(1));
  cache.put(1,"1");
  int entryCounter=0;
  for (  Map.Entry<Integer,String> entry : cache.entrySet()) {
    entryCounter++;
    assertEquals(entry.getKey().toString(),entry.getValue());
  }
  assertEquals(2,entryCounter);
  assertEquals(entryCounter,cache.size());
}
