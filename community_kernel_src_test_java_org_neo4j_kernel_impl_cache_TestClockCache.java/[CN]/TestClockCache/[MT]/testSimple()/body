{
  ClockCacheTest<Integer,String> cache=new ClockCacheTest<Integer,String>("TestCache",3);
  Map<String,Integer> valueToKey=new HashMap<String,Integer>();
  Map<Integer,String> keyToValue=new HashMap<Integer,String>();
  String s1=new String("1");
  Integer key1=new Integer(1);
  valueToKey.put(s1,key1);
  keyToValue.put(key1,s1);
  String s2=new String("2");
  Integer key2=new Integer(2);
  valueToKey.put(s2,key2);
  keyToValue.put(key2,s2);
  String s3=new String("3");
  Integer key3=new Integer(3);
  valueToKey.put(s3,key3);
  keyToValue.put(key3,s3);
  String s4=new String("4");
  Integer key4=new Integer(4);
  valueToKey.put(s4,key4);
  keyToValue.put(key4,s4);
  String s5=new String("5");
  Integer key5=new Integer(5);
  valueToKey.put(s5,key5);
  keyToValue.put(key5,s5);
  List<Integer> cleanedElements=new LinkedList<Integer>();
  List<Integer> existingElements=new LinkedList<Integer>();
  cache.put(key1,s1);
  cache.put(key2,s2);
  cache.put(key3,s3);
  assertEquals(null,cache.getLastCleanedElement());
  String fromKey2=cache.get(key2);
  assertEquals(s2,fromKey2);
  String fromKey1=cache.get(key1);
  assertEquals(s1,fromKey1);
  String fromKey3=cache.get(key3);
  assertEquals(s3,fromKey3);
  cache.put(key4,s4);
  assertFalse(s4.equals(cache.getLastCleanedElement()));
  assertNotNull(cache.getLastCleanedElement());
  String lastCleaned=cache.getLastCleanedElement();
  cleanedElements.add(valueToKey.get(lastCleaned));
  existingElements.remove(valueToKey.get(lastCleaned));
  cache.put(key5,s5);
  assertNotNull(cache.getLastCleanedElement());
  assertFalse(lastCleaned.equals(cache.getLastCleanedElement()));
  lastCleaned=cache.getLastCleanedElement();
  assertFalse(s4.equals(lastCleaned));
  assertFalse(s5.equals(lastCleaned));
  cleanedElements.add(valueToKey.get(lastCleaned));
  existingElements.remove(valueToKey.get(lastCleaned));
  int size=cache.size();
  assertEquals(3,size);
  for (  Integer key : cleanedElements) {
    assertEquals("for key " + key,null,cache.get(key));
  }
  for (  Integer key : existingElements) {
    assertEquals(keyToValue.get(key),cache.get(key));
  }
  cache.clear();
  assertEquals(0,cache.size());
  for (  Integer key : keyToValue.keySet()) {
    assertEquals(null,cache.get(key));
  }
}
