{
  return new IteratorWrapper<InputNode,InputNode>(nodes){
    @Override protected InputNode underlyingObjectToObject(    InputNode node){
      if (lastSeenNodeId != -1 && node.id() < lastSeenNodeId) {
        throw new IllegalArgumentException("Cannot go backwards in node id sequence, last seen was " + lastSeenNodeId + ", given id is "+ node.id());
      }
      nodeStore.setHighId(node.id() + 1);
      lastSeenNodeId=node.id();
      return node;
    }
  }
;
}
