{
  return aggregateLogData(new Extractor(){
    @Override public int extract(    File from) throws IOException {
      final AtomicInteger counter=new AtomicInteger();
      LogFileRecoverer reader=new LogFileRecoverer(new VersionAwareLogEntryReader(),new Visitor<CommittedTransactionRepresentation,IOException>(){
        @Override public boolean visit(        CommittedTransactionRepresentation element) throws IOException {
          counter.incrementAndGet();
          return true;
        }
      }
);
      LogVersionBridge bridge=new LogVersionBridge(){
        @Override public VersionedStoreChannel next(        VersionedStoreChannel channel) throws IOException {
          return channel;
        }
      }
;
      PhysicalLogVersionedStoreChannel storeChannel=new PhysicalLogVersionedStoreChannel(fs.open(from,"r"));
      storeChannel.position(LOG_HEADER_SIZE);
      try (ReadableLogChannel channel=new ReadAheadLogChannel(storeChannel,bridge,1000)){
        reader.visit(channel);
      }
       return counter.get();
    }
  }
);
}
