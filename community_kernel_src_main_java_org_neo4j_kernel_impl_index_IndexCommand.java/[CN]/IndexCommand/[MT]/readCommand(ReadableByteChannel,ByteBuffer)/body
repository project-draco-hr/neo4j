{
  byte[] headerBytes=readBytes(channel,new byte[3]);
  if (headerBytes == null)   return null;
  byte commandType=(byte)((headerBytes[0] & 0xE0) >> 5);
  byte valueType=(byte)((headerBytes[0] & 0x1C) >> 2);
  byte entityType=(byte)((headerBytes[0] & 0x2) >> 1);
  boolean entityIdNeedsLong=(headerBytes[0] & 0x1) > 0;
  byte indexNameId=(byte)(headerBytes[1] & 0x3F);
  byte keyId=headerBytes[2];
switch (commandType) {
case DEFINE_COMMAND:
    Map<String,Byte> indexNames=IndexDefineCommand.readMap(channel,buffer);
  Map<String,Byte> keys=IndexDefineCommand.readMap(channel,buffer);
if (indexNames == null || keys == null) return null;
return new IndexDefineCommand(indexNames,keys);
case CREATE_COMMAND:
Map<String,String> config=read2bMap(channel,buffer);
if (config == null) return null;
return new CreateCommand(indexNameId,entityType,config);
case DELETE_COMMAND:
return new DeleteCommand(indexNameId,entityType);
case ADD_COMMAND:
case REMOVE_COMMAND:
case ADD_RELATIONSHIP_COMMAND:
Long entityId=entityIdNeedsLong ? readLong(channel,buffer) : readInt(channel,buffer);
if (entityId == null) return null;
Object value=readValue(valueType,channel,buffer);
if (commandType == ADD_COMMAND) {
return new AddCommand(indexNameId,entityType,entityId,keyId,value);
}
 else if (commandType == REMOVE_COMMAND) {
return new RemoveCommand(indexNameId,entityType,entityId,keyId,value);
}
 else {
boolean startNodeNeedsLong=(headerBytes[1] & 0x8) > 0;
boolean endNodeNeedsLong=(headerBytes[1] & 0x40) > 0;
Long startNode=startNodeNeedsLong ? readLong(channel,buffer) : readInt(channel,buffer);
Long endNode=endNodeNeedsLong ? readLong(channel,buffer) : readInt(channel,buffer);
if (startNode == null || endNode == null) return null;
return new AddRelationshipCommand(indexNameId,entityType,entityId,keyId,value,startNode,endNode);
}
default :
throw new RuntimeException("Unknown command type " + commandType);
}
}
