{
  Objects.requireNonNull(fileName,"fileName is required");
  if (fileSystemAbstraction.fileExists(fileName)) {
    throw new IllegalStateException("Can't create store[" + fileName + "], file already exists");
  }
  try {
    StoreChannel channel=fileSystemAbstraction.create(fileName);
    int endHeaderSize=UTF8.encode(typeAndVersionDescriptor).length;
    if (firstRecordData != null) {
      endHeaderSize+=firstRecordData.limit();
    }
    ByteBuffer buffer=ByteBuffer.allocate(endHeaderSize);
    if (firstRecordData != null) {
      buffer.put(firstRecordData);
    }
    buffer.put(UTF8.encode(typeAndVersionDescriptor)).flip();
    channel.write(buffer);
    channel.force(false);
    channel.close();
  }
 catch (  IOException e) {
    throw new UnderlyingStorageException("Unable to create store " + fileName,e);
  }
  File idFileName=new File(fileName.getPath() + ".id");
  idGeneratorFactory.create(idFileName,0,true);
  if (firstRecordData != null) {
    IdGenerator idGenerator=idGeneratorFactory.open(idFileName,1,idType,0);
    idGenerator.nextId();
    idGenerator.close();
  }
}
