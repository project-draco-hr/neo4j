{
  int val=available.get();
  if (val == 0) {
    return Availability.AVAILABLE;
  }
 else   if (val == -1) {
    return Availability.UNAVAILABLE;
  }
 else {
    long start=clock.currentTimeMillis();
    while (clock.currentTimeMillis() < start + millis) {
      val=available.get();
      if (val == 0) {
        return Availability.AVAILABLE;
      }
 else       if (val == -1) {
        return Availability.UNAVAILABLE;
      }
      try {
        Thread.sleep(10);
      }
 catch (      InterruptedException e) {
        Thread.interrupted();
        break;
      }
      Thread.yield();
    }
    return Availability.TEMPORARILY_UNAVAILABLE;
  }
}
