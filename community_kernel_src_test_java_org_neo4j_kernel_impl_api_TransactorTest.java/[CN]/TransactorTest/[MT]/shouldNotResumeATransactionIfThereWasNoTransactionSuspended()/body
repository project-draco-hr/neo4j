{
  AbstractTransactionManager txManager=mock(AbstractTransactionManager.class);
  when(txManager.suspend()).thenReturn(null);
  StatementOperationParts operations=mock(StatementOperationParts.class);
  Statement statement=mock(Statement.class);
  StubKernelTransaction kernelTransaction=spy(new StubKernelTransaction(operations,statement));
  when(txManager.getKernelTransaction()).thenReturn(kernelTransaction);
  @SuppressWarnings("unchecked") Transactor.Work<Object,KernelException> work=mock(Transactor.Work.class);
  Object expectedResult=new Object();
  when(work.perform(eq(operations),any(StatementState.class))).thenReturn(expectedResult);
  Transactor transactor=new Transactor(txManager);
  Object result=transactor.execute(work);
  assertEquals(expectedResult,result);
  InOrder order=inOrder(txManager,operations,kernelTransaction,statement,work);
  order.verify(txManager).suspend();
  order.verify(txManager).begin();
  order.verify(txManager).getKernelTransaction();
  order.verify(kernelTransaction).execute(any(MicroTransaction.class));
  order.verify(kernelTransaction).newStatement();
  order.verify(work).perform(operations,statement);
  order.verify(statement).close();
  order.verify(kernelTransaction).commit();
  verifyNoMoreInteractions(txManager,operations,statement,work);
}
