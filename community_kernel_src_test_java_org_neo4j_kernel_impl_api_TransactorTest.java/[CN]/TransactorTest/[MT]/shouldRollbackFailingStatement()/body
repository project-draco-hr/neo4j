{
  javax.transaction.Transaction existingTransaction=mock(javax.transaction.Transaction.class);
  when(txManager.suspend()).thenReturn(existingTransaction);
  when(txManager.getKernelTransaction()).thenReturn(kernelTransaction);
  when(kernelTransaction.acquireStatement()).thenReturn(statement);
  SpecificKernelException exception=new SpecificKernelException();
  when(work.perform(any(KernelStatement.class))).thenThrow(exception);
  try {
    transactor.execute(work);
    fail("expected exception");
  }
 catch (  SpecificKernelException e) {
    assertSame(exception,e);
  }
  InOrder order=inOrder(txManager,kernelTransaction,work);
  order.verify(txManager).suspend();
  order.verify(txManager).begin();
  order.verify(txManager).getKernelTransaction();
  order.verify(kernelTransaction).rollback();
  order.verify(txManager).resume(existingTransaction);
  order.verifyNoMoreInteractions();
}
