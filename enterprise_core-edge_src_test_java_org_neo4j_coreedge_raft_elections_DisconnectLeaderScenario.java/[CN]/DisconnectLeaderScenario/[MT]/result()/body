{
  Result result=new Result();
  long collidingRuns=0;
  long collidingSum=0;
  long nonCollidingRuns=0;
  long nonCollidingSum=0;
  for (  long electionTime : electionTimeResults) {
    if (hadOneOrMoreCollisions(electionTime)) {
      collidingRuns++;
      collidingSum+=electionTime;
    }
 else {
      nonCollidingRuns++;
      nonCollidingSum+=electionTime;
    }
  }
  result.collidingAverage=collidingSum / (double)collidingRuns;
  result.nonCollidingAverage=nonCollidingSum / (double)nonCollidingRuns;
  result.collisionRate=collidingRuns / (double)electionTimeResults.size();
  result.collisionCount=collidingRuns;
  result.timeoutCount=timeoutCount;
  return result;
}
