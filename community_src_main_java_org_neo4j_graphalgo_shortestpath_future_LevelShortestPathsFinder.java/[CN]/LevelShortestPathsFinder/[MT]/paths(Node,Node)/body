{
  if (start.equals(end)) {
    return Arrays.asList(Path.singular(start));
  }
 else {
    Map<Node,List<Path.Builder>> source, target, next;
    source=pathBuilderMap(start);
    next=pathBuilderMap(end);
    Collection<Path> result=new LinkedList<Path>();
    for (int depth=0; depth < maxlength && result.isEmpty(); depth++) {
      target=next;
      if (depth == 2) {
        if (source.size() > target.size()) {
          Map<Node,List<Path.Builder>> holder=source;
          source=target;
          target=holder;
        }
      }
      next=search(start,source,target,result);
      source=target;
    }
    return Collections.unmodifiableCollection(result);
  }
}
