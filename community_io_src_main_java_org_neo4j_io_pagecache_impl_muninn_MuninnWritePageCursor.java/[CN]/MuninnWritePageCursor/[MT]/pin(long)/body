{
  int stripe=(int)(filePageId & MuninnPagedFile.translationTableStripeMask);
  StampedLock translationTableLock=pagedFile.translationTableLocks[stripe];
  PrimitiveLongObjectMap<MuninnPage> translationTable=pagedFile.translationTables[stripe];
  PageSwapper swapper=pagedFile.swapper;
  pinEvent=pagedFile.monitor.beginPin(false,filePageId,swapper);
  MuninnPage page;
  long stamp=translationTableLock.tryOptimisticRead();
  page=translationTable.get(filePageId);
  if (!translationTableLock.validate(stamp)) {
    stamp=translationTableLock.readLock();
    try {
      page=translationTable.get(filePageId);
    }
  finally {
      translationTableLock.unlockRead(stamp);
    }
  }
  if (page == null) {
    stamp=translationTableLock.writeLock();
    page=translationTable.get(filePageId);
    if (page == null) {
      pageFault(filePageId,translationTable,translationTableLock,stamp,swapper);
      return;
    }
    translationTableLock.unlockWrite(stamp);
  }
  lockStamp=page.writeLock();
  if (page.isBoundTo(swapper,filePageId)) {
    pinCursorToPage(page,filePageId,swapper);
    return;
  }
  page.unlockWrite(lockStamp);
  stamp=translationTableLock.writeLock();
  page=translationTable.get(filePageId);
  if (page != null) {
    lockStamp=page.writeLock();
    if (page.isBoundTo(swapper,filePageId)) {
      translationTableLock.unlockWrite(stamp);
      pinCursorToPage(page,filePageId,swapper);
      return;
    }
    page.unlockWrite(lockStamp);
  }
  pageFault(filePageId,translationTable,translationTableLock,stamp,swapper);
}
