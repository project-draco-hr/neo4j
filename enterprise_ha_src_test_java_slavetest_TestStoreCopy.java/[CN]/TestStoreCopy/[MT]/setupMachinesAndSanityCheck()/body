{
  slaveDir=TargetDirectory.forTest(TestStoreCopy.class).directory("slave-sandboxed",true);
  sandboxed=new File(slaveDir,HighlyAvailableGraphDatabase.COPY_FROM_MASTER_TEMP);
  master=(HighlyAvailableGraphDatabase)new EnterpriseGraphDatabaseFactory().newHighlyAvailableDatabaseBuilder(TargetDirectory.forTest(TestStoreCopy.class).directory("master-sandboxed",true).getAbsolutePath()).setConfig(HaSettings.coordinators,zoo.getConnectionString()).setConfig(HaSettings.server_id,"1").newGraphDatabase();
  Transaction masterTx=master.beginTx();
  Node n=master.createNode();
  n.setProperty("foo","bar");
  nodeId=n.getId();
  masterTx.success();
  masterTx.finish();
  slave=(HighlyAvailableGraphDatabase)new EnterpriseGraphDatabaseFactory().newHighlyAvailableDatabaseBuilder(slaveDir.getAbsolutePath()).setConfig(HaSettings.coordinators,zoo.getConnectionString()).setConfig(HaSettings.server_id,"2").newGraphDatabase();
  Assert.assertEquals(1,master.getBroker().getMaster().other().getMachineId());
  Assert.assertEquals(1,slave.getBroker().getMaster().other().getMachineId());
  Assert.assertEquals("bar",slave.getNodeById(nodeId).getProperty("foo"));
}
