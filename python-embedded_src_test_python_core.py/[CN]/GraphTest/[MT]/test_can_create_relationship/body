def test_can_create_relationship(self):
    db = self.graphdb
    with db.transaction:
        steven = self.graphdb.node(name='Steve Brook')
        poplar_bluff = self.graphdb.node(name='Poplar Bluff')
        relationship = steven.mayor_of(poplar_bluff, since='12th of July 2012')
        steven.relationships.create('mayor_of', poplar_bluff, since='12th of July 2012')
        secondrel = poplar_bluff.likes(steven, message='buh')
    message = ''
    for rel in steven.mayor_of:
        message += ('%s %s %s' % (rel.start['name'], rel['since'], rel.end['name']))
    self.assertEquals(message, 'Steve Brook 12th of July 2012 Poplar BluffSteve Brook 12th of July 2012 Poplar Bluff')
    a_node = steven
    for rel in a_node.relationships:
        pass
    for rel in a_node.relationships.incoming:
        pass
    for rel in a_node.relationships.outgoing:
        pass
    for rel in a_node.mayor_of:
        pass
    for rel in a_node.mayor_of.incoming:
        pass
    for rel in a_node.mayor_of.outgoing:
        pass
    self.assertEquals(len(steven.relationships), 3)
    self.assertEquals(len(steven.relationships.incoming), 1)
    self.assertEquals(len(steven.relationships.outgoing), 2)
    self.assertEquals(len(steven.likes), 1)
    self.assertEquals(len(steven.likes.incoming), 1)
    self.assertEquals(len(steven.likes.outgoing), 0)
