{
  Logger log=Logger.getLogger("org.neo4j.impl.core.NeoConstraintsListener");
  Level level=log.getLevel();
  log.setLevel(Level.OFF);
  EventConsumer eventHook=new EventConsumer(Event.TX_ROLLBACK);
  UserTransactionImpl tx=(UserTransactionImpl)TransactionFactory.getUserTransaction();
  try {
    EventManager.getManager().registerReActiveEventListener(eventHook,Event.TX_ROLLBACK);
    tx.begin();
    Integer eventIdentifier=tx.getEventIdentifier();
    NodeManager nm=NodeManager.getManager();
    Node node1=nm.createNode();
    Node node2=nm.createNode();
    nm.createRelationship(node1,node2,MyRelTypes.TEST);
    node1.delete();
    try {
      tx.commit();
      fail("tx should throw exception on commit");
    }
 catch (    javax.transaction.RollbackException e) {
    }
    Thread.sleep(500);
    assertTrue(Event.TX_ROLLBACK + " event not generated",eventHook.received());
    assertEquals("Event generated, but with wrong event identifier",eventHook.getEventIdentifier(),eventIdentifier);
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Exception raised during testing of TX_BEGIN event: " + e);
  }
 finally {
    try {
      EventManager.getManager().unregisterReActiveEventListener(eventHook,Event.TX_ROLLBACK);
      tx.rollback();
    }
 catch (    Exception e) {
    }
    log.setLevel(level);
  }
}
