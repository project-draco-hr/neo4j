{
  super();
  this.addOptionDefinition("b",new OptionDefinition(OptionValueType.NONE,"Brief summary instead of full content"));
  this.addOptionDefinition("v",new OptionDefinition(OptionValueType.NONE,"Verbose mode"));
  this.addOptionDefinition("q",new OptionDefinition(OptionValueType.NONE,"Quiet mode"));
  this.addOptionDefinition("p",new OptionDefinition(OptionValueType.NONE,"Lists properties"));
  this.addOptionDefinition("r",new OptionDefinition(OptionValueType.NONE,"Lists relationships"));
  this.addOptionDefinition("f",new OptionDefinition(OptionValueType.MUST,"Filters property keys/values and relationship types. Supplied either as a single value " + "or as a JSON string where both keys and values can contain regex. " + "Starting/ending {} brackets are optional. Examples:\n"+ "  \"username\"\n\tproperty/relationship 'username' gets listed\n"+ "  \".*name:ma.*, age:''\"\n\tproperties with keys matching '.*name' and values matching 'ma.*' "+ "gets listed,\n\tas well as the 'age' property. Also relationships matching '.*name' or 'age'\n\tgets listed\n"+ "  \"KNOWS:out,LOVES:in\"\n\toutgoing KNOWS and incoming LOVES relationships gets listed"));
  this.addOptionDefinition("i",new OptionDefinition(OptionValueType.NONE,"Filters are case-insensitive (case-sensitive by default)"));
  this.addOptionDefinition("l",new OptionDefinition(OptionValueType.NONE,"Filters matches more loosely, i.e. it's considered a match if just " + "a part of a value matches the pattern, not necessarily the whole value"));
}
