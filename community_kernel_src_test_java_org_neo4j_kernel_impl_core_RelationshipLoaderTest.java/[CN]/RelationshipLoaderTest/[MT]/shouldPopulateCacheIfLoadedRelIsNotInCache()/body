{
  long fromDiskRelId=12l;
  Cache relCache=mock(Cache.class);
  NodeImpl node=new NodeImpl(1337l);
  Map<RelIdArray.DirectionWrapper,Iterable<RelationshipRecord>> relsFromDisk=new HashMap<>();
  relsFromDisk.put(RelIdArray.DirectionWrapper.OUTGOING,asList(new RelationshipRecord(fromDiskRelId)));
  relsFromDisk.put(RelIdArray.DirectionWrapper.INCOMING,Collections.<RelationshipRecord>emptyList());
  Pair<Map<DirectionWrapper,Iterable<RelationshipRecord>>,RelationshipLoadingPosition> moreRelationships=Pair.<Map<DirectionWrapper,Iterable<RelationshipRecord>>,RelationshipLoadingPosition>of(relsFromDisk,new SingleChainPosition(1));
  RelationshipLoader loader=new RelationshipLoader(relCache);
  RelationshipChainLoader chainLoader=mock(RelationshipChainLoader.class);
  when(chainLoader.getMoreRelationships(eq(1337l),any(RelationshipLoadingPosition.class),any(DirectionWrapper.class),any(int[].class))).thenReturn(moreRelationships);
  Triplet<ArrayMap<Integer,RelIdArray>,List<RelationshipImpl>,RelationshipLoadingPosition> result=loader.getMoreRelationships(node,DirectionWrapper.BOTH,new int[0],chainLoader);
  List<RelationshipImpl> relsThatWereNotInCache=result.second();
  assertThat(relsThatWereNotInCache.size(),equalTo(1));
  assertThat(relsThatWereNotInCache.get(0).getId(),equalTo(fromDiskRelId));
}
