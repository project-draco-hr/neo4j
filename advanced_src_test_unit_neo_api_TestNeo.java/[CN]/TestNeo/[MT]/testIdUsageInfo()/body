{
  NodeManager nm=NodeManager.getManager();
  int nodeCount=nm.getNumberOfIdsInUse(Node.class);
  int relCount=nm.getNumberOfIdsInUse(Relationship.class);
  if (nodeCount > nm.getHighestPossibleIdInUse(Node.class)) {
    fail("Node count greater than highest id " + nodeCount);
  }
  if (relCount > nm.getHighestPossibleIdInUse(Relationship.class)) {
    fail("Rel count greater than highest id " + relCount);
  }
  assertTrue(nodeCount <= nm.getHighestPossibleIdInUse(Node.class));
  assertTrue(relCount <= nm.getHighestPossibleIdInUse(Relationship.class));
  Node n1=nm.createNode();
  Node n2=nm.createNode();
  Relationship r1=n1.createRelationshipTo(n2,MyRelTypes.TEST);
  assertEquals(nodeCount + 2,nm.getNumberOfIdsInUse(Node.class));
  assertEquals(relCount + 1,nm.getNumberOfIdsInUse(Relationship.class));
  r1.delete();
  n1.delete();
  n2.delete();
  UserTransaction ut=TransactionFactory.getUserTransaction();
  try {
    ut.commit();
  }
 catch (  Exception e) {
    fail("" + e);
  }
  assertEquals(nodeCount,nm.getNumberOfIdsInUse(Node.class));
  assertEquals(relCount,nm.getNumberOfIdsInUse(Relationship.class));
}
