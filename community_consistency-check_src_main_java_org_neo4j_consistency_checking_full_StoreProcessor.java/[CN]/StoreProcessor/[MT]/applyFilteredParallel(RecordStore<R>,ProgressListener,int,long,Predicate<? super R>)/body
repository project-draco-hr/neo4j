{
  cacheAccess.prepareForProcessingOfSingleStore(recordsPerCpu);
  Function<BlockingQueue<R>,Worker<R>> workerFactory=new Function<BlockingQueue<R>,Worker<R>>(){
    @Override public Worker<R> apply(    BlockingQueue<R> source){
      return new Worker<>(source,store);
    }
  }
;
  distributeRecords(numberOfThreads,getClass().getSimpleName(),qSize,workerFactory,scan(store,stage.isForward(),filters),progressListener);
}
