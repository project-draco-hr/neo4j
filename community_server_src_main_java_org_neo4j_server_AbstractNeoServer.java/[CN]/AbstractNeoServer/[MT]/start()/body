{
  interruptStartupTimer=createInterruptStartupTimer();
  try {
    runPreflightTasks();
    interruptStartupTimer.startCountdown();
    database.start();
    DiagnosticsManager diagnosticsManager=resolveDependency(DiagnosticsManager.class);
    logging=resolveDependency(Logging.class);
    StringLogger diagnosticsLog=diagnosticsManager.getTargetLog();
    diagnosticsLog.info("--- SERVER STARTED START ---");
    databaseActions=createDatabaseActions();
    transactionalActions=createTransactionalActions();
    cypherExecutor=new CypherExecutor(database,logging.getMessagesLog(CypherExecutor.class));
    configureWebServer();
    cypherExecutor.start();
    diagnosticsManager.register(Configurator.DIAGNOSTICS,configurator);
    startModules(diagnosticsLog);
    startWebServer(diagnosticsLog);
    diagnosticsLog.info("--- SERVER STARTED END ---");
    interruptStartupTimer.stopCountdown();
  }
 catch (  Throwable t) {
    interruptStartupTimer.stopCountdown();
    Thread.interrupted();
    if (interruptStartupTimer.wasTriggered()) {
      throw new ServerStartupException("Startup took longer than " + interruptStartupTimer.getTimeoutMillis() + "ms, "+ "and was stopped. You can disable this behavior by setting '"+ Configurator.STARTUP_TIMEOUT+ "' to 0.",1);
    }
    if (t instanceof RuntimeException) {
      throw (RuntimeException)t;
    }
 else {
      throw new ServerStartupException("Starting neo server failed, see nested exception.",t);
    }
  }
}
