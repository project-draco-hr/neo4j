{
  interruptStartupTimer=createInterruptStartupTimer();
  try {
    runPreflightTasks();
    interruptStartupTimer.startCountdown();
    try {
      database.start();
      DiagnosticsManager diagnosticsManager=resolveDependency(DiagnosticsManager.class);
      logging=resolveDependency(Logging.class);
      StringLogger diagnosticsLog=diagnosticsManager.getTargetLog();
      diagnosticsLog.info("--- SERVER STARTED START ---");
      databaseActions=createDatabaseActions();
      rrdDbWrapper=new RrdFactory(configurator.configuration()).createRrdDbAndSampler(database,new RoundRobinJobScheduler());
      transactionFacade=createTransactionalActions();
      cypherExecutor=new CypherExecutor(database,logging.getMessagesLog(CypherExecutor.class));
      configureWebServer();
      cypherExecutor.start();
      diagnosticsManager.register(Configurator.DIAGNOSTICS,configurator);
      startModules(diagnosticsLog);
      startWebServer(diagnosticsLog);
      diagnosticsLog.info("--- SERVER STARTED END ---");
    }
  finally {
      interruptStartupTimer.stopCountdown();
    }
  }
 catch (  Throwable t) {
    Thread.interrupted();
    if (interruptStartupTimer.wasTriggered()) {
      stopRrdDb();
      if (database.isRunning()) {
        stopDatabase();
      }
      throw new ServerStartupException("Startup took longer than " + interruptStartupTimer.getTimeoutMillis() + "ms, "+ "and was stopped. You can disable this behavior by setting '"+ Configurator.STARTUP_TIMEOUT+ "' to 0.",1);
    }
    throw new ServerStartupException(String.format("Starting Neo4j Server failed: %s",t.getMessage()),t);
  }
}
