{
  LoggerContext loggerContext=new LoggerContext();
  loggerContext.putProperty("host",serverUri.toString());
  JoranConfigurator configurator=new JoranConfigurator();
  configurator.setContext(loggerContext);
  try {
    configurator.doConfigure(getClass().getResource("/test-logback.xml"));
  }
 catch (  JoranException e) {
    throw new IllegalStateException("Failed to configure logging",e);
  }
  Logging logging=new LogbackService(null,loggerContext);
  ProtocolServerFactory protocolServerFactory=new MultiPaxosServerFactory(monitors,new ClusterConfiguration("default",StringLogger.SYSTEM),logging);
  ServerIdElectionCredentialsProvider electionCredentialsProvider=new ServerIdElectionCredentialsProvider();
  electionCredentialsProvider.listeningAt(serverUri);
  TestProtocolServer protocolServer=new TestProtocolServer(timeoutStrategy,protocolServerFactory,serverUri,new InstanceId(serverId),new InMemoryAcceptorInstanceStore(),electionCredentialsProvider);
  protocolServer.addStateTransitionListener(new StateTransitionLogger(logging));
  return protocolServer;
}
