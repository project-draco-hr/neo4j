{
  DiffSets<Long> diff=new DiffSets<Long>();
  Iterable<WritableTransactionState.CowNodeElement> changedNodes=state.getChangedNodes();
  for (  WritableTransactionState.CowNodeElement changedNode : changedNodes) {
    ArrayMap<Integer,PropertyData> propRmMap=changedNode.getPropertyRemoveMap(false);
    if (propRmMap != null) {
      for (      PropertyData propertyData : propRmMap.values()) {
        if (propertyData.getIndex() == propertyKey && propertyData.getValue().equals(value)) {
          diff.remove(changedNode.getId());
        }
      }
    }
    ArrayMap<Integer,PropertyData> propAddMap=changedNode.getPropertyAddMap(false);
    if (propAddMap != null) {
      for (      PropertyData propertyData : propAddMap.values()) {
        if (propertyData.getIndex() == propertyKey) {
          if (propertyData.getValue().equals(value)) {
            diff.add(changedNode.getId());
          }
 else {
            diff.remove(changedNode.getId());
          }
        }
      }
    }
  }
  return diff;
}
