{
  Node node;
  try (Transaction tx=graphDb.beginTx()){
    node=graphDb.createNode();
    tx.success();
  }
   try (Transaction ignore=graphDb.beginTx()){
    node.setProperty("key","value");
    List<LockInfo> locks=lockManager.getLocks();
    assertEquals("unexpected lock count",2,locks.size());
    LockInfo lock=locks.get(0);
    assertNotNull("null lock",lock);
    Collection<LockingTransaction> transactions=lock.getLockingTransactions();
    assertEquals("unexpected transaction count",1,transactions.size());
    LockingTransaction txInfo=transactions.iterator().next();
    assertNotNull("null transaction",txInfo);
    assertEquals("read count",0,txInfo.getReadCount());
    assertEquals("write count should be 1",1,txInfo.getWriteCount());
    assertNotNull("transaction",txInfo.getTransaction());
    assertEquals("read count",0,lock.getReadCount());
    assertEquals("write count",1,lock.getWriteCount());
    assertEquals("waiting thread count",0,lock.getWaitingThreadsCount());
  }
   List<LockInfo> locks=lockManager.getLocks();
  assertEquals("unexpected lock count",0,locks.size());
}
