{
  Object[] arguments=new Object[extractors.length];
  Transaction tx=graphDb.beginTx();
  try {
    for (int i=0; i < arguments.length; i++) {
      arguments[i]=extractors[i].extract(graphDb,source,params);
    }
  }
  finally {
    tx.finish();
  }
  try {
    Object returned=method.invoke(plugin,arguments);
    if (returned == null) {
      return Representation.emptyRepresentation();
    }
 else {
      return result.convert(returned);
    }
  }
 catch (  InvocationTargetException exc) {
    Throwable targetExc=exc.getTargetException();
    for (    Class<?> excType : method.getExceptionTypes()) {
      if (excType.isInstance(targetExc))       throw new BadPluginInvocationException(targetExc);
    }
    throw new PluginInvocationFailureException(targetExc);
  }
catch (  IllegalArgumentException|IllegalAccessException e) {
    throw new PluginInvocationFailureException(e);
  }
}
