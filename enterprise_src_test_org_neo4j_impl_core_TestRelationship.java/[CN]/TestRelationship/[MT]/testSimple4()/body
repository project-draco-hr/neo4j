{
  Node node1=getNeo().createNode();
  Node node2=getNeo().createNode();
  for (int i=0; i < 2; i++) {
    node1.createRelationshipTo(node2,MyRelTypes.TEST);
    node1.createRelationshipTo(node2,MyRelTypes.TEST_TRAVERSAL);
    node1.createRelationshipTo(node2,MyRelTypes.TEST2);
  }
  allGetRelationshipMethods3(node1,Direction.OUTGOING);
  allGetRelationshipMethods3(node2,Direction.INCOMING);
  newTransaction();
  allGetRelationshipMethods3(node1,Direction.OUTGOING);
  allGetRelationshipMethods3(node2,Direction.INCOMING);
  node1.getRelationships(MyRelTypes.TEST,Direction.OUTGOING).iterator().next().delete();
  int count=0;
  for (  Relationship rel : node1.getRelationships(MyRelTypes.TEST_TRAVERSAL,Direction.OUTGOING)) {
    if (count == 1) {
      rel.delete();
    }
    count++;
  }
  node1.getRelationships(MyRelTypes.TEST2,Direction.OUTGOING).iterator().next().delete();
  node1.createRelationshipTo(node2,MyRelTypes.TEST);
  node1.createRelationshipTo(node2,MyRelTypes.TEST_TRAVERSAL);
  node1.createRelationshipTo(node2,MyRelTypes.TEST2);
  allGetRelationshipMethods3(node1,Direction.OUTGOING);
  allGetRelationshipMethods3(node2,Direction.INCOMING);
  newTransaction();
  allGetRelationshipMethods3(node1,Direction.OUTGOING);
  allGetRelationshipMethods3(node2,Direction.INCOMING);
  for (  Relationship rel : node1.getRelationships()) {
    rel.delete();
  }
  node1.delete();
  node2.delete();
}
