{
  if (currentPathPredecessors.contains(currentNode)) {
    return;
  }
  LinkedList<Path> paths=pathsFromOneDirection.get(currentNode);
  if (paths != null) {
    for (    Path path : paths) {
      boolean simplePath=true;
      for (Path p=path; p != null; p=p.tail) {
        if (currentPathPredecessors.contains(p.head)) {
          simplePath=false;
          break;
        }
      }
      if (simplePath && currentDepth > 0) {
        for (        Relationship relationship : currentNode.getRelationships(relationshipType,direction)) {
          Node targetNode=relationship.getOtherNode(currentNode);
          if (path.tail != null && path.tail.head.equals(targetNode)) {
            simplePath=false;
            break;
          }
        }
      }
      if (simplePath) {
        LinkedList<PropertyContainer> newFoundPath=new LinkedList<PropertyContainer>(currentPathPredecessors);
        for (Path p=path; p != null; p=p.tail) {
          newFoundPath.add(p.head);
          if (p.rel != null) {
            newFoundPath.add(p.rel);
          }
        }
        foundPaths.add(newFoundPath);
      }
    }
  }
  if (currentDepth >= 0) {
    for (    Relationship relationship : currentNode.getRelationships(relationshipType,direction)) {
      Node targetNode=relationship.getOtherNode(currentNode);
      LinkedList<PropertyContainer> newPath=new LinkedList<PropertyContainer>(currentPathPredecessors);
      newPath.add(currentNode);
      newPath.add(relationship);
      traverser2(targetNode,currentDepth - 1,newPath);
    }
  }
}
