{
  ControlledGraphDatabaseFactory dbFactory=new ControlledGraphDatabaseFactory();
  ManagedCluster cluster=clusterRule.startCluster(dbFactory);
  cluster.await(allSeesAllAsAvailable(),120);
  HighlyAvailableGraphDatabase slave=cluster.getAnySlave();
  proceedAsNormalWithIndexPopulationOnAllSlavesExcept(dbFactory,cluster,slave);
  ClusterManager.RepairKit slaveDown=bringSlaveOfflineAndRemoveStoreFiles(cluster,slave);
  HighlyAvailableGraphDatabase master=cluster.getMaster();
  Map<Object,Node> data=createSomeData(master);
  createIndex(master);
  dbFactory.awaitPopulationStarted(master);
  dbFactory.triggerFinish(master);
  IndexDefinition index;
  try (Transaction tx=master.beginTx()){
    index=single(master.schema().getIndexes());
    awaitIndexOnline(index,master,data);
    tx.success();
  }
   slave=slaveDown.repair();
  cluster.await(allSeesAllAsAvailable());
  cluster.sync();
  dbFactory.triggerFinish(slave);
  try (Transaction tx=slave.beginTx()){
    awaitIndexOnline(index,slave,data);
    tx.success();
  }
 }
