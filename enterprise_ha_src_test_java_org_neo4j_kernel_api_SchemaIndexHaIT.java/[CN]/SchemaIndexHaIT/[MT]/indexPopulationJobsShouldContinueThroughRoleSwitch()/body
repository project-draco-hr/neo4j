{
  ControlledGraphDatabaseFactory dbFactory=new ControlledGraphDatabaseFactory();
  ManagedCluster cluster=startCluster(clusterOfSize(3),dbFactory);
  HighlyAvailableGraphDatabase firstMaster=cluster.getMaster();
  Map<Object,Node> data=createSomeData(firstMaster);
  createIndex(firstMaster);
  dbFactory.triggerFinish(firstMaster);
  HighlyAvailableGraphDatabase aSlave=cluster.getAnySlave();
  aSlave.getDependencyResolver().resolveDependency(UpdatePuller.class).pullUpdates();
  dbFactory.awaitPopulationStarted(aSlave);
  cluster.shutdown(firstMaster);
  dbFactory.triggerFinish(aSlave);
  cluster.await(masterAvailable(firstMaster));
  HighlyAvailableGraphDatabase newMaster=cluster.getMaster();
  assertEquals("Unexpected new master",aSlave,newMaster);
  Transaction transaction=newMaster.beginTx();
  IndexDefinition index;
  try {
    index=single(newMaster.schema().getIndexes());
  }
  finally {
    transaction.finish();
  }
  awaitIndexOnline(index,newMaster,data);
}
