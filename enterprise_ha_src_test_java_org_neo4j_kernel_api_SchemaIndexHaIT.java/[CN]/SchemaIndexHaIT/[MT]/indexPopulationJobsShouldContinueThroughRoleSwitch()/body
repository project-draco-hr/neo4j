{
  ControlledGraphDatabaseFactory dbFactory=new ControlledGraphDatabaseFactory();
  ManagedCluster cluster=clusterRule.startCluster(dbFactory);
  HighlyAvailableGraphDatabase firstMaster=cluster.getMaster();
  Map<Object,Node> data=createSomeData(firstMaster);
  createIndex(firstMaster);
  dbFactory.triggerFinish(firstMaster);
  HighlyAvailableGraphDatabase aSlave=cluster.getAnySlave();
  aSlave.getDependencyResolver().resolveDependency(UpdatePuller.class).pullUpdates();
  dbFactory.awaitPopulationStarted(aSlave);
  cluster.shutdown(firstMaster);
  dbFactory.triggerFinish(aSlave);
  cluster.await(masterAvailable(firstMaster));
  HighlyAvailableGraphDatabase newMaster=cluster.getMaster();
  assertEquals("Unexpected new master",aSlave,newMaster);
  try (Transaction tx=newMaster.beginTx()){
    IndexDefinition index=single(newMaster.schema().getIndexes());
    awaitIndexOnline(index,newMaster,data);
    tx.success();
  }
   for (  HighlyAvailableGraphDatabase db : cluster.getAllMembers()) {
    dbFactory.triggerFinish(db);
  }
}
