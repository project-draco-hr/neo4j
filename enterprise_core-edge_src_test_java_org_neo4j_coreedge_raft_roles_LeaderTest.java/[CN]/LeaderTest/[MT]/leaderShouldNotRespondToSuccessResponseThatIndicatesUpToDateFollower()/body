{
  Leader leader=new Leader();
  RaftTestMember instance2=new RaftTestMember(2);
  FollowerState instance2State=createArtificialFollowerState(84);
  ReadableRaftState<RaftTestMember> state=mock(ReadableRaftState.class);
  FollowerStates<RaftTestMember> followerState=new FollowerStates<>();
  followerState=new FollowerStates<>(followerState,instance2,instance2State);
  ReadableRaftLog logMock=mock(ReadableRaftLog.class);
  when(logMock.appendIndex()).thenReturn(100l);
  when(state.commitIndex()).thenReturn(-1L);
  when(state.entryLog()).thenReturn(logMock);
  when(state.followerStates()).thenReturn(followerState);
  when(state.term()).thenReturn(4l);
  RaftMessages.AppendEntries.Response<RaftTestMember> response=appendEntriesResponse().success().matchIndex(100).term(4).from(instance2).build();
  Outcome<RaftTestMember> outcome=leader.handle(response,state,mock(Log.class));
  assertTrue(outcome.getOutgoingMessages().isEmpty());
  FollowerStates<RaftTestMember> updatedFollowerStates=outcome.getFollowerStates();
  assertEquals(100,updatedFollowerStates.get(instance2).getMatchIndex());
}
