{
  super(branchId,name);
  try {
    xaContainer=xaFactory.newXaContainer(this,logFile,new DummyCommandFactory(),ALLOW_ALL,new DummyTransactionFactory(),stateFactory,new TransactionInterceptorProviders(Iterables.<TransactionInterceptorProvider>empty(),new DependencyResolver.Adapter(){
      @Override public <T>T resolveDependency(      Class<T> type,      SelectionStrategy selector){
        return type.cast(new Config(MapUtil.stringMap(GraphDatabaseSettings.intercept_committing_transactions.name(),Settings.FALSE,GraphDatabaseSettings.intercept_deserialized_transactions.name(),Settings.FALSE)));
      }
    }
),false);
    xaContainer.openLogicalLog();
  }
 catch (  IOException e) {
    throw new InstantiationException("" + e);
  }
}
