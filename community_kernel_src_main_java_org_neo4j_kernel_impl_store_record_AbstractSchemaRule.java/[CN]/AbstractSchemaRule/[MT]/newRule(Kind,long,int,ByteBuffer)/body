{
switch (kind) {
case INDEX_RULE:
    return IndexRule.readIndexRule(id,false,labelId,buffer);
case CONSTRAINT_INDEX_RULE:
  return IndexRule.readIndexRule(id,true,labelId,buffer);
case UNIQUENESS_CONSTRAINT:
return UniquePropertyConstraintRule.readUniquenessConstraintRule(id,labelId,buffer);
case NODE_PROPERTY_EXISTENCE_CONSTRAINT:
return NodePropertyExistenceConstraintRule.readNodePropertyExistenceConstraintRule(id,labelId,buffer);
case RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT:
return RelationshipPropertyExistenceConstraintRule.readRelPropertyExistenceConstraintRule(id,labelId,buffer);
default :
throw new IllegalArgumentException(kind.name());
}
}
