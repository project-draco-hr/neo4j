{
  final AtomicReference<Latch> latchRef=new AtomicReference<>(new Latch());
  Runnable awaiter=new Runnable(){
    @Override public void run(){
      Latch latch;
      while ((latch=latchRef.get()) != null) {
        latch.await();
      }
    }
  }
;
  int awaiters=6;
  Future<?>[] futures=new Future<?>[awaiters];
  for (int i=0; i < awaiters; i++) {
    futures[i]=executor.submit(awaiter);
  }
  ThreadLocalRandom rng=ThreadLocalRandom.current();
  for (int i=0; i < 500000; i++) {
    latchRef.getAndSet(new Latch()).release();
    spinwaitu(rng.nextLong(0,10));
  }
  latchRef.getAndSet(null).release();
  for (  Future<?> future : futures) {
    future.get();
  }
}
