{
  NeoStores neoStores=neoStoresRule.open();
  long nodeId=0;
  int labelId=5, propertyKeyId=7;
  long ruleId=0;
  TransactionRecordState recordState=newTransactionRecordState(neoStores);
  SchemaRule rule=indexRule(ruleId,labelId,propertyKeyId,PROVIDER_DESCRIPTOR);
  recordState.createSchemaRule(rule);
  apply(neoStores,recordState);
  recordState=newTransactionRecordState(neoStores);
  recordState.nodeCreate(nodeId);
  recordState.addLabelToNode(labelId,nodeId);
  recordState.nodeAddProperty(nodeId,propertyKeyId,"Neo");
  PhysicalTransactionRepresentation transaction=transactionRepresentationOf(recordState);
  NodePropertyCommandsExtractor extractor=new NodePropertyCommandsExtractor();
  transaction.accept(extractor);
  assertTrue(extractor.containsAnyNodeOrPropertyUpdate());
  PrimitiveLongSet recoveredNodeIds=Primitive.longSet();
  recoveredNodeIds.addAll(extractor.nodeCommandsById().iterator());
  recoveredNodeIds.addAll(extractor.propertyCommandsByNodeIds().iterator());
  assertEquals(1,recoveredNodeIds.size());
  assertEquals(nodeId,recoveredNodeIds.iterator().next());
}
