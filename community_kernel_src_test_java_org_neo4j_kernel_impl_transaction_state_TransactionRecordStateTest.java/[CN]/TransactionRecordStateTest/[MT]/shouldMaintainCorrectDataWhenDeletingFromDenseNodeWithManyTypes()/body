{
  NeoStores neoStores=neoStoresRule.open(GraphDatabaseSettings.dense_node_threshold.name(),"1");
  NeoStoreTransactionContext txCtx=newContext(neoStores);
  TransactionRecordState tx=recordState(neoStores,txCtx);
  long nodeId=neoStores.getNodeStore().nextId();
  int typeA=0, typeB=12, typeC=600;
  tx.nodeCreate(nodeId);
  tx.createRelationshipTypeToken("A",typeA);
  long[] relationshipsCreatedAIncoming=createRelationships(neoStores,tx,nodeId,typeA,INCOMING,1);
  long[] relationshipsCreatedAOutgoing=createRelationships(neoStores,tx,nodeId,typeA,OUTGOING,1);
  tx.createRelationshipTypeToken("B",typeB);
  long[] relationshipsCreatedBIncoming=createRelationships(neoStores,tx,nodeId,typeB,INCOMING,1);
  long[] relationshipsCreatedBOutgoing=createRelationships(neoStores,tx,nodeId,typeB,OUTGOING,1);
  tx.createRelationshipTypeToken("C",typeC);
  long[] relationshipsCreatedCIncoming=createRelationships(neoStores,tx,nodeId,typeC,INCOMING,1);
  long[] relationshipsCreatedCOutgoing=createRelationships(neoStores,tx,nodeId,typeC,OUTGOING,1);
  tx.relDelete(relationshipsCreatedAIncoming[0]);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeA,1,0);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeB,1,1);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeC,1,1);
  tx.relDelete(relationshipsCreatedAOutgoing[0]);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeA);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeB,1,1);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeC,1,1);
  tx.relDelete(relationshipsCreatedBIncoming[0]);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeA);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeB,1,0);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeC,1,1);
  tx.relDelete(relationshipsCreatedBOutgoing[0]);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeA);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeB);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeC,1,1);
  tx.relDelete(relationshipsCreatedCIncoming[0]);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeA);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeB);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeC,1,0);
  tx.relDelete(relationshipsCreatedCOutgoing[0]);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeA);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeB);
  assertRelationshipGroupDoesNotExist(txCtx,txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData(),typeC);
}
