{
  NeoStores neoStores=neoStoresRule.open(GraphDatabaseSettings.dense_node_threshold.name(),"50");
  NeoStoreTransactionContext txCtx=newContext(neoStores);
  TransactionRecordState tx=recordState(neoStores,txCtx);
  long nodeId=neoStores.getNodeStore().nextId();
  int typeA=0, typeB=1, typeC=2;
  tx.nodeCreate(nodeId);
  tx.createRelationshipTypeToken("A",typeA);
  createRelationships(neoStores,tx,nodeId,typeA,OUTGOING,6);
  createRelationships(neoStores,tx,nodeId,typeA,INCOMING,7);
  tx.createRelationshipTypeToken("B",typeB);
  createRelationships(neoStores,tx,nodeId,typeB,OUTGOING,8);
  createRelationships(neoStores,tx,nodeId,typeB,INCOMING,9);
  tx.createRelationshipTypeToken("C",typeC);
  createRelationships(neoStores,tx,nodeId,typeC,OUTGOING,10);
  createRelationships(neoStores,tx,nodeId,typeC,INCOMING,10);
  assertFalse(txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData().isDense());
  createRelationships(neoStores,tx,nodeId,typeC,INCOMING,1);
  assertTrue(txCtx.getNodeRecords().getOrLoad(nodeId,null).forReadingData().isDense());
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeA,6,7);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeB,8,9);
  assertDenseRelationshipCounts(tx,txCtx,nodeId,typeC,10,11);
}
