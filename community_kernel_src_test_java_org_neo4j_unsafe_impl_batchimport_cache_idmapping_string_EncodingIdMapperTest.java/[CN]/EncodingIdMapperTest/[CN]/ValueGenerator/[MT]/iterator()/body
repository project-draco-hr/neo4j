{
  if (!values.isEmpty()) {
    return new SimpleInputIteratorWrapper<>(getClass().getSimpleName(),values.iterator());
  }
  return new SimpleInputIterator<Object>(""){
    private int cursor;
    @Override protected Object fetchNextOrNull(){
      if (cursor < size) {
        while (true) {
          Object value=generator.newInstance();
          if (deduper.add(value)) {
            values.add(value);
            cursor++;
            return value;
          }
        }
      }
      return null;
    }
  }
;
}
