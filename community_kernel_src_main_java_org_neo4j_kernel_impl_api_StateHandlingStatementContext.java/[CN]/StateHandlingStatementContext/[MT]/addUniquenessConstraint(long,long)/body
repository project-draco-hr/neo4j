{
  UniquenessConstraint constraint=new UniquenessConstraint(labelId,propertyKeyId);
  if (!state.unRemoveConstraint(constraint)) {
    for (Iterator<UniquenessConstraint> it=delegate.getConstraints(labelId,propertyKeyId); it.hasNext(); ) {
      if (it.next().equals(labelId,propertyKeyId)) {
        return constraint;
      }
    }
    long indexId;
    try {
      indexId=constraintIndexCreator.createUniquenessConstraintIndex(this,labelId,propertyKeyId);
    }
 catch (    TransactionalException e) {
      throw new ConstraintCreationKernelException(constraint,e);
    }
catch (    IndexPopulationFailedKernelException e) {
      if (e.getCause() instanceof ConstraintViolationKernelException) {
        throw new ConstraintCreationKernelException(constraint,e.getCause());
      }
 else {
        throw new ConstraintCreationKernelException(constraint,e);
      }
    }
    state.addConstraint(constraint,indexId);
  }
  return constraint;
}
