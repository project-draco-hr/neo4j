{
  final DechunkingChannelBuffer dechunkingBuffer=new DechunkingChannelBuffer(reader,timeout,internalProtocolVersion,applicationProtocolVersion);
  PAYLOAD response=payloadDeserializer.read(dechunkingBuffer,input);
  StoreId storeId=readStoreId(dechunkingBuffer,input);
  TransactionStream transactions=new TransactionStream(){
    @Override public void accept(    Visitor<CommittedTransactionRepresentation,IOException> visitor) throws IOException {
      LogEntryReader<ReadableLogChannel> reader=new LogEntryReaderFactory().create();
      NetworkReadableLogChannel channel=new NetworkReadableLogChannel(dechunkingBuffer);
      try (PhysicalTransactionCursor<ReadableLogChannel> cursor=new PhysicalTransactionCursor<>(channel,reader)){
        while (cursor.next() && visitor.visit(cursor.get())) {
          ;
        }
      }
     }
  }
;
  return new Response<PAYLOAD>(response,storeId,transactions,channelReleaser);
}
