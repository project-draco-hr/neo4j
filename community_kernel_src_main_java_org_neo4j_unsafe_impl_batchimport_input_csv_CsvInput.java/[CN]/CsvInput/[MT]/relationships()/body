{
  return new InputIterable<InputRelationship>(){
    @Override public InputIterator<InputRelationship> iterator(){
      return new InputGroupsDeserializer<InputRelationship>(relationshipDataFactory.iterator(),relationshipHeaderFactory,config,idType){
        @Override protected InputEntityDeserializer<InputRelationship> entityDeserializer(        CharSeeker dataStream,        Header dataHeader,        Function<InputRelationship,InputRelationship> decorator){
          return new InputEntityDeserializer<>(dataHeader,dataStream,config.delimiter(),new InputRelationshipDeserialization(dataStream,dataHeader,groups),decorator,new Validator<InputRelationship>(){
            @Override public void validate(            InputRelationship entity){
              if (!entity.hasTypeId() && entity.type() == null) {
                throw new DataException(entity + " is missing " + Type.TYPE+ " field");
              }
            }
          }
);
        }
      }
;
    }
  }
;
}
