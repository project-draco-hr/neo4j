{
  try {
    final long logIndex=source.getLong();
    final int sessionTrackerSize=source.getInt();
    final Map<MEMBER,LocalSessionTracker> theMainMap=new HashMap<>();
    for (int i=0; i < sessionTrackerSize; i++) {
      final MEMBER unmarshal=memberMarshal.unmarshal(source);
      if (unmarshal == null) {
        return null;
      }
      final LocalSessionTracker localSessionTracker=new LocalSessionTracker(new UUID(source.getLong(),source.getLong()));
      final int localSessionTrackerSize=source.getInt();
      final HashMap<Long,Long> notSureAboutTheName=new HashMap<>();
      for (int j=0; j < localSessionTrackerSize; j++) {
        notSureAboutTheName.put(source.getLong(),source.getLong());
      }
      localSessionTracker.lastSequenceNumberPerSession=notSureAboutTheName;
      theMainMap.put(unmarshal,localSessionTracker);
    }
    InMemoryGlobalSessionTrackerState<MEMBER> result=new InMemoryGlobalSessionTrackerState<>();
    result.sessionTrackers=theMainMap;
    result.logIndex=logIndex;
    return result;
  }
 catch (  ReadPastEndException notEnoughBytes) {
    return null;
  }
}
