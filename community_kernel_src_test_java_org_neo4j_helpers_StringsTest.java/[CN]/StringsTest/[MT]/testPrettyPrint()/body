{
  assertEquals("null",prettyPrint(null));
  assertEquals("42",prettyPrint(42));
  assertEquals("42",prettyPrint("42"));
  assertEquals("[1, 2, 3, 4]",prettyPrint(new int[]{1,2,3,4}));
  assertEquals("[false, true, true, false]",prettyPrint(new boolean[]{false,true,true,false}));
  assertEquals("[a, b, z]",prettyPrint(new char[]{'a','b','z'}));
  assertEquals("[ab, cd, zx]",prettyPrint(new String[]{"ab","cd","zx"}));
  assertEquals("[Cat, [http://neo4j.com, http://neo4j.org], Dog, [1, 2, 3], [[[Wolf]]]]",prettyPrint(new Object[]{"Cat",new URI[]{URI.create("http://neo4j.com"),URI.create("http://neo4j.org")},"Dog",new int[]{1,2,3},new Object[]{new Object[]{new Object[]{"Wolf"}}}}));
  Object[] recursiveArray={10.12345,null,"String"};
  recursiveArray[1]=recursiveArray;
  assertEquals("[10.12345, [...], String]",prettyPrint(recursiveArray));
}
