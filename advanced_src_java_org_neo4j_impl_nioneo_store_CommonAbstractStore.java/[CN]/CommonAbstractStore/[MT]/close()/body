{
  if (fileChannel == null) {
    return;
  }
  closeStorage();
  if (windowPool != null) {
    windowPool.close();
    windowPool=null;
  }
  int highId=idGenerator.getHighId();
  int recordSize=-1;
  if (this instanceof AbstractDynamicStore) {
    recordSize=((AbstractDynamicStore)this).getBlockSize();
  }
 else   if (this instanceof AbstractStore) {
    recordSize=((AbstractStore)this).getRecordSize();
  }
  closeIdGenerator();
  boolean success=false;
  IOException storedIoe=null;
  for (int i=0; i < 10; i++) {
    try {
      fileChannel.position(((long)highId) * recordSize);
      ByteBuffer buffer=ByteBuffer.wrap(getTypeAndVersionDescriptor().getBytes());
      fileChannel.write(buffer);
      fileChannel.truncate(fileChannel.position());
      fileChannel.force(false);
      fileLock.release();
      fileChannel.close();
      fileChannel=null;
      success=true;
      break;
    }
 catch (    IOException e) {
      storedIoe=e;
      System.gc();
    }
  }
  if (!success) {
    throw new StoreFailureException("Unable to close store " + getStorageFileName(),storedIoe);
  }
}
