{
  Set<String> kwArgs=args.asMap().keySet();
  verifyParameters(kwArgs,kwArgs.contains(RELS) ? RELS : PROPS,NODE);
  final long node=Long.parseLong(args.get(NODE,null));
  if (args.getBoolean(RELS,false,true)) {
    return new DumpRelationshipChain(-1,node,false){
      @Override RelationshipStore store(      StoreFactory factory,      File storeFile){
        NodeRecord nodeRecord=nodeRecord(factory,storeFile,node);
        first=nodeRecord.isDense() ? -1 : nodeRecord.getNextRel();
        return super.store(factory,new File(storeFile,RELSTORE));
      }
    }
;
  }
 else   if (args.getBoolean(PROPS,false,true)) {
    return new DumpPropertyChain(-1,false){
      @Override PropertyStore store(      StoreFactory factory,      File storeDir){
        first=nodeRecord(factory,storeDir,node).getNextProp();
        return super.store(factory,new File(storeDir,PROPSTORE));
      }
    }
;
  }
 else {
    throw invalidUsage(String.format("Must be either -%s or -%s",RELS,PROPS));
  }
}
