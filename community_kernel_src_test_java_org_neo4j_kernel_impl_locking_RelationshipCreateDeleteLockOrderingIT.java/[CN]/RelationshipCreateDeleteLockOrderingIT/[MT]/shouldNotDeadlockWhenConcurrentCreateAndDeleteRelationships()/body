{
  final Node a;
  final Node b;
  try (Transaction tx=db.beginTx()){
    (a=db.createNode()).createRelationshipTo(b=db.createNode(),MyRelTypes.TEST);
    tx.success();
  }
   Race race=new Race();
  for (int i=0; i < 30; i++) {
    race.addContestant(new Runnable(){
      @Override public void run(){
        try (Transaction tx=db.beginTx()){
          Node node=random.nextBoolean() ? a : b;
          for (          Relationship relationship : node.getRelationships()) {
            try {
              relationship.delete();
            }
 catch (            IllegalStateException e) {
              assertTrue(e.getMessage().contains("already deleted"));
            }
          }
          tx.success();
        }
       }
    }
);
  }
  for (int i=0; i < 30; i++) {
    race.addContestant(new Runnable(){
      @Override public void run(){
        try (Transaction tx=db.beginTx()){
          boolean order=random.nextBoolean();
          Node start=order ? a : b;
          Node end=order ? b : a;
          start.createRelationshipTo(end,MyRelTypes.TEST);
          tx.success();
        }
       }
    }
);
  }
  race.go();
}
