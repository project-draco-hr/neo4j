{
  TransactionHeaderInformation headerInformation=new TransactionHeaderInformation(-1,-1,new byte[0]);
  TransactionHeaderInformationFactory headerInformationFactory=mock(TransactionHeaderInformationFactory.class);
  when(headerInformationFactory.create()).thenReturn(headerInformation);
  StorageEngine storageEngine=mock(StorageEngine.class);
  StoreReadLayer storeReadLayer=mock(StoreReadLayer.class);
  StorageStatement storageStatement=mock(StorageStatement.class);
  when(storeReadLayer.newStatement()).thenReturn(storageStatement);
  when(storageEngine.storeReadLayer()).thenReturn(storeReadLayer);
  KernelTransactionImplementation transaction=new KernelTransactionImplementation(mock(StatementOperationParts.class),mock(SchemaWriteGuard.class),new TransactionHooks(),mock(ConstraintIndexCreator.class),new Procedures(),headerInformationFactory,mock(TransactionRepresentationCommitProcess.class),mock(TransactionMonitor.class),mock(Supplier.class),mock(Pool.class),Clocks.systemClock(),NULL,storageEngine);
  StatementLocks statementLocks=new SimpleStatementLocks(new NoOpClient());
  transaction.initialize(0,0,statementLocks,KernelTransaction.Type.implicit,accessMode,0L);
  return new Instances(transaction,storageEngine,storeReadLayer,storageStatement);
}
