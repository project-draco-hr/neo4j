{
  FileUserRepository users=new FileUserRepository(fsRule.get(),new File("dbms/auth.db"));
  User user=new User("jake","af123",Privileges.ADMIN,Credentials.INACCESSIBLE,true);
  users.create(user);
  User modifiedUser=new User("jake","af123_2",Privileges.ADMIN,Credentials.INACCESSIBLE,true);
  User updatedUser=new User("jake","123abc",Privileges.ADMIN,Credentials.INACCESSIBLE,true);
  try {
    users.update(modifiedUser,updatedUser);
    fail("expected exception not thrown");
  }
 catch (  ConcurrentModificationException e) {
  }
  assertThat(users.findByToken(user.token()),equalTo(user));
  assertThat(users.findByToken(modifiedUser.token()),nullValue());
  assertThat(users.findByToken(updatedUser.token()),nullValue());
}
