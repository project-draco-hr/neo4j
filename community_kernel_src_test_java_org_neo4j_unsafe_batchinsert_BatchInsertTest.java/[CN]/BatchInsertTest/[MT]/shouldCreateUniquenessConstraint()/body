{
  Label label=label("Person");
  String propertyKey="name";
  String duplicatedValue="Tom";
  BatchInserter inserter=newBatchInserter();
  inserter.createDeferredConstraint(label).assertPropertyIsUnique(propertyKey).create();
  GraphDatabaseService db=switchToEmbeddedGraphDatabaseService(inserter);
  try {
    try (Transaction tx=db.beginTx()){
      List<ConstraintDefinition> constraints=asList(db.schema().getConstraints());
      assertEquals(1,constraints.size());
      ConstraintDefinition constraint=constraints.get(0);
      assertEquals(label.name(),constraint.getLabel().name());
      assertEquals(propertyKey,single(constraint.getPropertyKeys()));
      db.createNode(label).setProperty(propertyKey,duplicatedValue);
      tx.success();
    }
     try (Transaction tx=db.beginTx()){
      db.createNode(label).setProperty(propertyKey,duplicatedValue);
      tx.success();
    }
     fail("Uniqueness property constraint was violated, exception expected");
  }
 catch (  ConstraintViolationException e) {
    assertEquals(e.getMessage(),"Node 0 already exists with label " + label.name() + " and property \""+ propertyKey+ "\"=["+ duplicatedValue+ "]");
  }
 finally {
    db.shutdown();
  }
}
