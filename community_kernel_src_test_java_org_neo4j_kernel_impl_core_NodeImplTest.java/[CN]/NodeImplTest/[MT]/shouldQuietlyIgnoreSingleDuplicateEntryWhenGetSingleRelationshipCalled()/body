{
  NodeImpl nodeImpl=new NodeImpl(1);
  RelationshipType loves=DynamicRelationshipType.withName("LOVES");
  TransactionState txState=mock(TransactionState.class);
  ThreadToStatementContextBridge stmCtxBridge=mock(ThreadToStatementContextBridge.class);
  NodeManager nodeManager=mock(NodeManager.class);
  RelationshipProxy.RelationshipLookups relLookup=mock(RelationshipProxy.RelationshipLookups.class);
  when(relLookup.getNodeManager()).thenReturn(nodeManager);
  when(nodeManager.getRelationshipChainPosition(nodeImpl)).thenReturn(new SingleChainPosition(0));
  when(nodeManager.getRelationshipTypeById(TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_TYPE)).thenReturn(loves);
  when(relLookup.lookupRelationship(TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_ID)).thenReturn(new RelationshipImpl(TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_ID,1,2,TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_TYPE,false));
  when(nodeManager.getMoreRelationships(eq(nodeImpl),any(DirectionWrapper.class),any(RelationshipType[].class))).thenReturn(tripletWithValues(TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_ID,TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_ID)).thenReturn(noMoreRelationshipsTriplet());
  when(nodeManager.getTransactionState()).thenReturn(txState);
  when(nodeManager.newRelationshipProxyById(TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_ID)).thenReturn(new RelationshipProxy(TOTALLY_ARBITRARY_VALUE_DENOTING_RELATIONSHIP_ID,relLookup,stmCtxBridge));
  final Relationship singleRelationship=nodeImpl.getSingleRelationship(nodeManager,loves,Direction.OUTGOING);
  assertNotNull(singleRelationship);
  assertEquals(loves,singleRelationship.getType());
}
