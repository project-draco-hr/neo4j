{
  return new RaftLogCursor(){
    private long currentIndex=fromIndex - 1;
    RaftLogEntry current=null;
    @Override public boolean next() throws IOException {
      currentIndex++;
      boolean hasNext;
synchronized (InMemoryRaftLog.this) {
        hasNext=currentIndex <= appendIndex;
        if (hasNext) {
          if (currentIndex <= prevIndex || currentIndex > appendIndex) {
            return false;
          }
          current=raftLog.get(currentIndex);
        }
 else {
          current=null;
        }
      }
      return hasNext;
    }
    @Override public void close() throws IOException {
    }
    @Override public long index(){
      return currentIndex;
    }
    @Override public RaftLogEntry get(){
      return current;
    }
  }
;
}
