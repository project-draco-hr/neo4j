{
  ds.stop();
  log.setLevel(level);
  log=Logger.getLogger("org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog/" + "nioneo_logical.log");
  log.setLevel(level);
  log=Logger.getLogger("org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource");
  log.setLevel(level);
  for (  String file : new String[]{"neo","neo.nodestore.db","neo.propertystore.db","neo.propertystore.db.index","neo.propertystore.db.index.keys","neo.propertystore.db.strings","neo.propertystore.db.arrays","neo.relationshipstore.db","neo.relationshiptypestore.db","neo.relationshiptypestore.db.names"}) {
    fileSystem.deleteFile(file(file));
    fileSystem.deleteFile(file(file + ".id"));
  }
  File file=new File(".");
  for (  File nioFile : fileSystem.listFiles(file)) {
    if (nioFile.getName().startsWith("nioneo_logical.log")) {
      assertTrue("Couldn't delete '" + nioFile.getPath() + "'",fileSystem.deleteFile(nioFile));
    }
  }
}
