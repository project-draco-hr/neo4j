{
  ds.stop();
  log.setLevel(level);
  log=Logger.getLogger("org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog/" + "nioneo_logical.log");
  log.setLevel(level);
  log=Logger.getLogger("org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource");
  log.setLevel(level);
  File file=new File(file("neo"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.nodestore.db"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.nodestore.db.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.index"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.index.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.index.keys"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.index.keys.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.strings"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.strings.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.arrays"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.propertystore.db.arrays.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.relationshipstore.db"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.relationshipstore.db.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.relationshiptypestore.db"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.relationshiptypestore.db.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.relationshiptypestore.db.names"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(file("neo.relationshiptypestore.db.names.id"));
  if (file.exists()) {
    assertTrue(file.delete());
  }
  file=new File(path());
  for (  File nioFile : file.listFiles()) {
    if (nioFile.getName().startsWith("nioneo_logical.log")) {
      assertTrue("Couldn't delete '" + nioFile.getPath() + "'",nioFile.delete());
    }
  }
}
