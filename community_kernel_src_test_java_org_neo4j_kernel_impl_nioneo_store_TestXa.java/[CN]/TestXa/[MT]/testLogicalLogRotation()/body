{
  Xid xid=new XidImpl(new byte[1],new byte[1]);
  XAResource xaRes=xaCon.getXaResource();
  xaRes.start(xid,XAResource.TMNOFLAGS);
  long node1=ds.nextId(Node.class);
  xaCon.getTransaction().nodeCreate(node1);
  long node2=ds.nextId(Node.class);
  xaCon.getTransaction().nodeCreate(node2);
  DefinedProperty n1prop1=xaCon.getTransaction().nodeAddProperty(node1,index("prop1"),"string1");
  xaCon.getTransaction().nodeLoadProperties(node1,false,VOID);
  int relType1=(int)ds.nextId(RelationshipType.class);
  xaCon.getTransaction().createRelationshipTypeToken(relType1,"relationshiptype1");
  long rel1=ds.nextId(Relationship.class);
  xaCon.getTransaction().relationshipCreate(rel1,relType1,node1,node2);
  DefinedProperty r1prop1=xaCon.getTransaction().relAddProperty(rel1,index("prop1"),"string1");
  n1prop1=xaCon.getTransaction().nodeChangeProperty(node1,n1prop1.propertyKeyId(),"string2");
  r1prop1=xaCon.getTransaction().relChangeProperty(rel1,r1prop1.propertyKeyId(),"string2");
  xaCon.getTransaction().nodeRemoveProperty(node1,n1prop1.propertyKeyId());
  xaCon.getTransaction().relRemoveProperty(rel1,r1prop1.propertyKeyId());
  xaCon.getTransaction().relDelete(rel1);
  xaCon.getTransaction().nodeDelete(node1);
  xaCon.getTransaction().nodeDelete(node2);
  xaRes.end(xid,XAResource.TMSUCCESS);
  xaRes.commit(xid,true);
  long currentVersion=ds.getCurrentLogVersion();
  ds.rotateLogicalLog();
  assertTrue(logicalLogExists(currentVersion));
  ds.rotateLogicalLog();
  assertTrue(logicalLogExists(currentVersion));
  assertTrue(logicalLogExists(currentVersion + 1));
}
