{
  Xid xid=new XidImpl(new byte[2],new byte[2]);
  XAResource xaRes=xaCon.getXaResource();
  xaRes.start(xid,XAResource.TMNOFLAGS);
  long node1=ds.nextId(Node.class);
  xaCon.getWriteTransaction().nodeCreate(node1);
  long node2=ds.nextId(Node.class);
  xaCon.getWriteTransaction().nodeCreate(node2);
  PropertyData n1prop1=xaCon.getWriteTransaction().nodeAddProperty(node1,index("prop1"),"string1");
  int relType1=(int)ds.nextId(RelationshipType.class);
  xaCon.getWriteTransaction().createRelationshipType(relType1,"relationshiptype1");
  long rel1=ds.nextId(Relationship.class);
  xaCon.getWriteTransaction().relationshipCreate(rel1,relType1,node1,node2);
  PropertyData r1prop1=xaCon.getWriteTransaction().relAddProperty(rel1,index("prop1"),"string1");
  xaCon.getWriteTransaction().nodeChangeProperty(node1,n1prop1,"string2");
  xaCon.getWriteTransaction().relChangeProperty(rel1,r1prop1,"string2");
  xaRes.end(xid,XAResource.TMSUCCESS);
  xaRes.prepare(xid);
  ds.rotateLogicalLog();
  copyLogicalLog(path());
  xaCon.clearAllTransactions();
  ds.stop();
  deleteLogicalLogIfExist();
  renameCopiedLogicalLog(path());
  ds=newNeoStore();
  xaCon=ds.getXaConnection();
  xaRes=xaCon.getXaResource();
  assertEquals(1,xaRes.recover(XAResource.TMNOFLAGS).length);
  xaRes.commit(xid,true);
  xaCon.clearAllTransactions();
}
