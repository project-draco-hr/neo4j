{
  final IterableSpecification<T> spec=init();
  return new Iterator<T>(){
    int index=0;
    T[] content=spec.content;
    int token=spec.token;
    boolean hasMore=spec.hasMore;
    public boolean hasNext(){
      return index < content.length || hasMore;
    }
    public T next(){
      if (index < content.length) {
        return content[index++];
      }
 else       if (hasMore) {
        index=0;
        IterableSpecification<T> spec=more(token);
        content=spec.content;
        token=spec.token;
        hasMore=spec.hasMore;
        return content[index++];
      }
 else {
        throw new NoSuchElementException();
      }
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
