{
  PropertyType type=record.getType();
switch (type) {
case STRING:
    int stringBlockId=nextStringBlockId();
  record.setPropBlock(stringBlockId);
Collection<DynamicRecord> valueRecords=allocateStringRecords(stringBlockId,((String)value).getBytes());
for (DynamicRecord valueRecord : valueRecords) {
record.addValueRecord(valueRecord);
}
break;
case INT:
record.setPropBlock(((Integer)value).intValue());
break;
case BOOL:
record.setPropBlock((((Boolean)value).booleanValue() ? 1 : 0));
break;
case DOUBLE:
record.setPropBlock(Double.doubleToRawLongBits(((Double)value).doubleValue()));
break;
case FLOAT:
record.setPropBlock(Float.floatToRawIntBits(((Float)value).floatValue()));
break;
case LONG:
record.setPropBlock(((Long)value).longValue());
break;
case BYTE:
record.setPropBlock(((Byte)value).byteValue());
break;
case CHAR:
record.setPropBlock(((Character)value).charValue());
break;
case ARRAY:
int arrayBlockId=nextArrayBlockId();
record.setPropBlock(arrayBlockId);
Collection<DynamicRecord> arrayRecords=allocateArrayRecords(arrayBlockId,value);
for (DynamicRecord valueRecord : arrayRecords) {
record.addValueRecord(valueRecord);
}
break;
default :
throw new RuntimeException("Unkown property type: " + type);
}
}
