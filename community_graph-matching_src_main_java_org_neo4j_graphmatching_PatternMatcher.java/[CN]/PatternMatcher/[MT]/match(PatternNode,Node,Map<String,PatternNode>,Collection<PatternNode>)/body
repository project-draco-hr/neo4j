{
  Node currentStartNode=start.getAssociation();
  if (currentStartNode != null && !currentStartNode.equals(startNode)) {
    throw new IllegalStateException("Start patter node already has associated " + currentStartNode + ", can not start with "+ startNode);
  }
  Iterable<PatternMatch> result=null;
  if (optional == null || optional.size() < 1) {
    result=new PatternFinder(this,start,startNode);
  }
 else {
    result=new PatternFinder(this,start,startNode,false,optional);
  }
  if (objectVariables != null) {
    result=new FilteredPatternFinder(result,objectVariables);
  }
  return result;
}
