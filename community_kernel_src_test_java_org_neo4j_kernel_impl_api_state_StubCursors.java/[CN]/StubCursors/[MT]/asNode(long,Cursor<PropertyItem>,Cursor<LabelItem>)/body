{
  return new NodeItem.NodeItemHelper(){
    @Override public long id(){
      return nodeId;
    }
    @Override public Cursor<LabelItem> label(    final int labelId){
      return new Cursor<LabelItem>(){
        Cursor<LabelItem> cursor=labels();
        @Override public boolean next(){
          while (cursor.next()) {
            if (cursor.get().getAsInt() == labelId) {
              return true;
            }
          }
          return false;
        }
        @Override public void close(){
          cursor.close();
        }
        @Override public LabelItem get(){
          return cursor.get();
        }
      }
;
    }
    @Override public Cursor<LabelItem> labels(){
      return labelCursor;
    }
    @Override public Cursor<PropertyItem> property(    final int propertyKeyId){
      return new Cursor<PropertyItem>(){
        Cursor<PropertyItem> cursor=properties();
        @Override public boolean next(){
          while (cursor.next()) {
            if (cursor.get().propertyKeyId() == propertyKeyId) {
              return true;
            }
          }
          return false;
        }
        @Override public void close(){
          cursor.close();
        }
        @Override public PropertyItem get(){
          return cursor.get();
        }
      }
;
    }
    @Override public Cursor<PropertyItem> properties(){
      return propertyCursor;
    }
    @Override public Cursor<RelationshipItem> relationships(    Direction direction,    int... relTypes){
      throw new UnsupportedOperationException();
    }
    @Override public Cursor<RelationshipItem> relationships(    Direction direction){
      throw new UnsupportedOperationException();
    }
    @Override public Cursor<IntSupplier> relationshipTypes(){
      throw new UnsupportedOperationException();
    }
    @Override public int degree(    Direction direction){
      throw new UnsupportedOperationException();
    }
    @Override public int degree(    Direction direction,    int relType){
      throw new UnsupportedOperationException();
    }
    @Override public Cursor<DegreeItem> degrees(){
      throw new UnsupportedOperationException();
    }
  }
;
}
