{
  this.filesystemFacade=config.get(Configuration.ephemeral) ? LuceneFilesystemFacade.MEMORY : LuceneFilesystemFacade.FS;
  indexSearchers=new IndexClockCache(config.get(Configuration.lucene_searcher_cache_size));
  caching=new Cache();
  File storeDir=config.get(Configuration.store_dir);
  this.baseStorePath=this.filesystemFacade.ensureDirectoryExists(fileSystemAbstraction,baseDirectory(storeDir));
  this.filesystemFacade.cleanWriteLocks(baseStorePath);
  boolean allowUpgrade=config.get(Configuration.allow_store_upgrade);
  this.providerStore=newIndexStore(baseStorePath,fileSystemAbstraction,allowUpgrade);
  this.typeCache=new IndexTypeCache(indexStore);
  boolean isReadOnly=config.get(Configuration.read_only);
  DependencyResolver dummy=new DependencyResolver.Adapter(){
    @Override public <T>T resolveDependency(    Class<T> type,    SelectionStrategy selector){
      return (T)LuceneDataSource.this.config;
    }
  }
;
  closed=false;
  if (!isReadOnly) {
  }
}
