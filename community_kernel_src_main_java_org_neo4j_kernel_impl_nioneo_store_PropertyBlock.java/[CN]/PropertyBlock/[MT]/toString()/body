{
  StringBuilder result=new StringBuilder("PropertyBlock[");
  PropertyType type=getType();
  result.append(type == null ? "<unknown type>" : type.name()).append(',');
  result.append("key=").append(valueBlocks == null ? "?" : Integer.toString(getKeyIndexId()));
  if (type != null) switch (type) {
case STRING:
case ARRAY:
    result.append(",firstDynamic=").append(getSingleValueLong());
  break;
default :
Object value=type.getValue(this,null);
if (value != null && value.getClass().isArray()) {
int length=Array.getLength(value);
StringBuilder buf=new StringBuilder(value.getClass().getComponentType().getSimpleName()).append("[");
for (int i=0; i < length && i <= MAX_ARRAY_TOSTRING_SIZE; i++) {
  if (i != 0)   buf.append(",");
  buf.append(Array.get(value,i));
}
if (length > MAX_ARRAY_TOSTRING_SIZE) buf.append(",...");
value=buf.append("]");
}
result.append(",value=").append(value);
break;
}
if (!isLight()) {
result.append(",ValueRecords[");
Iterator<DynamicRecord> recIt=valueRecords.iterator();
while (recIt.hasNext()) {
result.append(recIt.next());
if (recIt.hasNext()) {
result.append(',');
}
}
result.append(']');
}
result.append(']');
return result.toString();
}
