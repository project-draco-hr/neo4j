{
  writeInitialDataTo(file("a"));
  RecordingPageCacheTracer tracer=new RecordingPageCacheTracer();
  MuninnPageCache pageCache=createPageCache(fs,4,8,blockCacheFlush(tracer));
  PagedFile pagedFile=pageCache.map(file("a"),8);
  try (PageCursor cursor=pagedFile.io(0,PF_EXCLUSIVE_LOCK | PF_NO_GROW)){
    assertTrue(cursor.next());
    cursor.putLong(0L);
    assertTrue(cursor.next());
    cursor.putLong(0L);
    assertFalse(cursor.next());
  }
   assertNotNull(tracer.observe(Fault.class));
  assertNotNull(tracer.observe(Fault.class));
  int clockArm=pageCache.evictPages(2,0,tracer.beginPageEvictions(2));
  assertThat(clockArm,is(2));
  assertNotNull(tracer.observe(Evict.class));
  assertNotNull(tracer.observe(Evict.class));
  ByteBuffer buf=ByteBuffer.allocate(16);
  StoreChannel channel=fs.open(file("a"),"r");
  channel.read(buf);
  buf.flip();
  assertThat(buf.getLong(),is(0L));
  assertThat(buf.getLong(),is(0L));
}
