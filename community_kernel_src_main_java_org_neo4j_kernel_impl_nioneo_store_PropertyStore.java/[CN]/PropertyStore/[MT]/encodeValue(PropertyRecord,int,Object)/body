{
  if (value instanceof String) {
    String string=(String)value;
    if (ShortString.encode(keyId,string,record))     return;
    long stringBlockId=nextStringBlockId();
    record.setSinglePropBlock(stringBlockId);
    int length=string.length();
    char[] chars=new char[length];
    string.getChars(0,length,chars,0);
    Collection<DynamicRecord> valueRecords=allocateStringRecords(stringBlockId,chars);
    for (    DynamicRecord valueRecord : valueRecords) {
      valueRecord.setType(PropertyType.STRING.intValue());
      record.addValueRecord(valueRecord);
    }
    record.setCategory(PropertyType.STRING.getCategory());
  }
 else   if (value instanceof Integer) {
    Bits bits=bits32WithKeyAndType(keyId,PropertyType.INT).or(((Integer)value).intValue());
    record.setSinglePropBlock(bits.getLongs()[0]);
    record.setCategory(PropertyType.INT.getCategory());
  }
 else   if (value instanceof Boolean) {
    Bits bits=bits32WithKeyAndType(keyId,PropertyType.BOOL).or(((Boolean)value).booleanValue() ? 1 : 0,0x1);
    record.setSinglePropBlock(bits.getLongs()[0]);
    record.setCategory(PropertyType.BOOL.getCategory());
  }
 else   if (value instanceof Float) {
    Bits bits=bits32WithKeyAndType(keyId,PropertyType.FLOAT).or(Float.floatToRawIntBits(((Float)value).floatValue()));
    record.setSinglePropBlock(bits.getLongs()[0]);
    record.setCategory(PropertyType.FLOAT.getCategory());
  }
 else   if (value instanceof Long) {
    Bits bits=bits64WithKeyAndType(keyId,PropertyType.LONG).or(((Long)value).longValue());
    record.setPropBlock(bits.getLongs());
    record.setCategory(PropertyType.LONG.getCategory());
  }
 else   if (value instanceof Double) {
    Bits bits=bits64WithKeyAndType(keyId,PropertyType.DOUBLE).or(Double.doubleToRawLongBits(((Double)value).doubleValue()));
    record.setPropBlock(bits.getLongs());
    record.setCategory(PropertyType.DOUBLE.getCategory());
  }
 else   if (value instanceof Byte) {
    Bits bits=bits32WithKeyAndType(keyId,PropertyType.BYTE).or(((Byte)value).byteValue());
    record.setSinglePropBlock(bits.getLongs()[0]);
    record.setCategory(PropertyType.BYTE.getCategory());
  }
 else   if (value instanceof Character) {
    Bits bits=bits32WithKeyAndType(keyId,PropertyType.CHAR).or(((Character)value).charValue());
    record.setSinglePropBlock(bits.getLongs()[0]);
    record.setCategory(PropertyType.CHAR.getCategory());
  }
 else   if (value instanceof Short) {
    Bits bits=bits32WithKeyAndType(keyId,PropertyType.SHORT).or(((Short)value).shortValue());
    record.setSinglePropBlock(bits.getLongs()[0]);
    record.setCategory(PropertyType.SHORT.getCategory());
  }
 else   if (value.getClass().isArray()) {
    if (ShortArray.encode(keyId,value,record,DEFAULT_PAYLOAD_SIZE))     return;
    long arrayBlockId=nextArrayBlockId();
    Bits bits=bits32WithKeyAndType(keyId,PropertyType.ARRAY).or(arrayBlockId,0xFFFFFFFFFL);
    record.setSinglePropBlock(bits.getLongs()[0]);
    Collection<DynamicRecord> arrayRecords=allocateArrayRecords(arrayBlockId,value);
    for (    DynamicRecord valueRecord : arrayRecords) {
      valueRecord.setType(PropertyType.ARRAY.intValue());
      record.addValueRecord(valueRecord);
    }
    record.setCategory(PropertyType.ARRAY.getCategory());
  }
 else {
    throw new IllegalArgumentException("Unknown property type on: " + value + ", "+ value.getClass());
  }
}
