{
  Buffer buffer=window.getOffsettedBuffer(id);
  Bits bits=new Bits(RECORD_SIZE);
  bits.read(buffer);
  bits.pullLeftLong(8 * 7);
  PropertyRecord record=new PropertyRecord(id);
  record.setInUse(true);
  long prevMod=(long)bits.pullLeftByte(4) << 32;
  long nextMod=(long)bits.pullLeftByte(4) << 32;
  long prevProp=bits.pullLeftLong(32);
  long nextProp=bits.pullLeftLong(32);
  record.setPrevProp(longFromIntAndMod(prevProp,prevMod));
  record.setNextProp(longFromIntAndMod(nextProp,nextMod));
  boolean someBlockInUse=false;
  while (bits.getLongs()[0] != 0) {
    PropertyBlock newBlock=getPropertyBlock(bits);
    if (newBlock.inUse()) {
      someBlockInUse=true;
      record.addPropertyBlock(newBlock);
      for (int i=0; i < newBlock.getType().getSizeInLongs(); i++) {
        bits.pullLeftLong();
      }
    }
 else {
      break;
    }
  }
  if (!someBlockInUse) {
    throw new InvalidRecordException("Record[" + id + "] not in use");
  }
  return record;
}
