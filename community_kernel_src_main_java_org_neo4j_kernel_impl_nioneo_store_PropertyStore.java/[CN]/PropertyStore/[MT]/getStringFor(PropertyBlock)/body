{
  long recordToFind=propRecord.getSingleValueBlock() & 0xFFFFFFFFFL;
  Map<Long,DynamicRecord> recordsMap=new HashMap<Long,DynamicRecord>();
  for (  DynamicRecord record : propRecord.getValueRecords()) {
    recordsMap.put(record.getId(),record);
  }
  List<char[]> charList=new LinkedList<char[]>();
  while (recordToFind != Record.NO_NEXT_BLOCK.intValue()) {
    DynamicRecord record=recordsMap.get(recordToFind);
    if (record.isLight()) {
      stringPropertyStore.makeHeavy(record);
    }
    if (!record.isCharData()) {
      ByteBuffer buf=ByteBuffer.wrap(record.getData());
      char[] chars=new char[record.getData().length / 2];
      buf.asCharBuffer().get(chars);
      charList.add(chars);
    }
 else {
      charList.add(record.getDataAsChar());
    }
    recordToFind=record.getNextBlock();
  }
  StringBuffer buf=new StringBuffer();
  for (  char[] str : charList) {
    buf.append(str);
  }
  return buf.toString();
}
