{
  List<Command> commands=createSomeCommands();
  List<Long> writtenCommands=writeCommandsToFile(commands);
  List<Command> readCommands=readCommandsFromChannel();
  Iterator<Command> commandIterator=commands.iterator();
  for (  Command readCommand : readCommands) {
    assertEquals(commandIterator.next(),readCommand);
  }
  for (int i=0; i < commands.size(); i++) {
    long startPosition=writtenCommands.get(i);
    long nextStartPosition=i + 1 < commands.size() ? writtenCommands.get(i + 1) : channel.writerPosition();
    for (long p=startPosition; p < nextStartPosition; p++) {
      channel.truncateTo((int)p);
      List<Command> readTruncatedCommands=readCommandsFromChannel();
      assertEquals(i,readTruncatedCommands.size());
    }
  }
}
