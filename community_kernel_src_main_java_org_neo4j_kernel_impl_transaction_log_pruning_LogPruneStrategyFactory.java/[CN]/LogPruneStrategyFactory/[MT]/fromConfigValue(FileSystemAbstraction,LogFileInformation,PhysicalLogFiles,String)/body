{
  String[] tokens=configValue.split(" ");
  if (tokens.length == 0) {
    throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'");
  }
  final String boolOrNumber=tokens[0];
  if (tokens.length == 1) {
switch (boolOrNumber) {
case "true":
      return NO_PRUNING;
case "false":
    final TransactionCountThreshold thresholdToUse=new TransactionCountThreshold(1);
  return new ThresholdBasedPruneStrategy(fileSystem,logFileInformation,files,thresholdToUse);
default :
throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. The form is 'all' or '<number><unit> <type>' for example '100k txs' "+ "for the latest 100 000 transactions");
}
}
String type=tokens[1];
int number=(int)parseLongWithUnit(boolOrNumber);
Threshold thresholdToUse;
switch (type) {
case "files":
thresholdToUse=new FileCountThreshold(number);
break;
case "size":
thresholdToUse=new FileSizeThreshold(fileSystem,number);
break;
case "txs":
thresholdToUse=new TransactionCountThreshold(number);
break;
case "hours":
thresholdToUse=new TransactionTimespanThreshold(Clock.SYSTEM_CLOCK,TimeUnit.HOURS,number);
break;
case "days":
thresholdToUse=new TransactionTimespanThreshold(Clock.SYSTEM_CLOCK,TimeUnit.DAYS,number);
break;
default :
throw new IllegalArgumentException("Invalid log pruning configuration value '" + configValue + "'. Invalid type '"+ type+ "', valid are files, size, txs, hours, days.");
}
return new ThresholdBasedPruneStrategy(fileSystem,logFileInformation,files,thresholdToUse);
}
