{
  RawIterator<Object[],ProcedureException> stream=readOperationsInNewTransaction().procedureCallRead(procedureName("dbms","procedures"),new Object[0]);
  assertThat(asList(stream),containsInAnyOrder(equalTo(new Object[]{"db.constraints","db.constraints() :: (description :: STRING?)"}),equalTo(new Object[]{"db.indexes","db.indexes() :: (description :: STRING?, state :: STRING?)"}),equalTo(new Object[]{"db.awaitIndex","db.awaitIndex() :: ()"}),equalTo(new Object[]{"db.propertyKeys","db.propertyKeys() :: (propertyKey :: STRING?)"}),equalTo(new Object[]{"db.labels","db.labels() :: (label :: STRING?)"}),equalTo(new Object[]{"db.relationshipTypes","db.relationshipTypes() :: (relationshipType :: " + "STRING?)"}),equalTo(new Object[]{"dbms.procedures","dbms.procedures() :: (name :: STRING?, signature :: " + "STRING?)"}),equalTo(new Object[]{"dbms.components","dbms.components() :: (name :: STRING?, versions :: LIST? OF" + " STRING?, edition :: STRING?)"}),equalTo(new Object[]{"dbms.queryJmx","dbms.queryJmx(query :: STRING?) :: (name :: STRING?, " + "description :: STRING?, attributes :: MAP?)"})));
}
