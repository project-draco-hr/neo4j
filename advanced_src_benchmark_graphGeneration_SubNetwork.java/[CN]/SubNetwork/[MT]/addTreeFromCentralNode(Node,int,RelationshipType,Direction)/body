{
  Traverser traverser=node.traverse(Order.BREADTH_FIRST,new StopEvaluator(){
    public boolean isStopNode(    TraversalPosition currentPos){
      return currentPos.depth() >= searchDepth;
    }
  }
,ReturnableEvaluator.ALL,relationshipType,direction);
  for (  Node node2 : traverser) {
    subNetworkNodes.add(node2);
    subNetworkRelationships.add(traverser.currentPosition().lastRelationshipTraversed());
  }
}
