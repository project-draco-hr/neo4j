{
  ArrayList<CacheProvider> cacheList=new ArrayList<CacheProvider>();
  cacheList.add(new SoftCacheProvider());
  LuceneKernelExtensionFactory lucene=new LuceneKernelExtensionFactory();
  List<KernelExtensionFactory<?>> extensions=new ArrayList<KernelExtensionFactory<?>>();
  extensions.add(lucene);
  GraphDatabaseFactory gdbf=new GraphDatabaseFactory();
  gdbf.setKernelExtensions(extensions);
  gdbf.setCacheProviders(cacheList);
  db=gdbf.newEmbeddedDatabase("target/db");
  serviceRegistration=context.registerService(GraphDatabaseService.class.getName(),db,new Hashtable<String,String>());
  System.out.println("registered " + serviceRegistration.getReference());
  indexServiceRegistration=context.registerService(Index.class.getName(),db.index().forNodes("nodes"),new Hashtable<String,String>());
  Transaction tx=db.beginTx();
  try {
    Node firstNode=db.createNode();
    Node secondNode=db.createNode();
    Relationship relationship=firstNode.createRelationshipTo(secondNode,DynamicRelationshipType.withName("KNOWS"));
    firstNode.setProperty("message","Hello, ");
    secondNode.setProperty("message","world!");
    relationship.setProperty("message","brave Neo4j ");
    db.index().forNodes("nodes").add(firstNode,"message","Hello");
    tx.success();
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new RuntimeException(e);
  }
 finally {
    tx.finish();
  }
}
