{
  char active='1';
  File activeLog=new File(logBaseFileName.getPath() + ".active");
  ByteBuffer buffer=ByteBuffer.allocate(1024);
  File activeLogBackup;
  try (StoreChannel af=fileSystem.open(activeLog,"r")){
    af.read(buffer);
    buffer.flip();
    activeLogBackup=new File(logBaseFileName.getPath() + ".bak.active");
    try (StoreChannel activeCopy=fileSystem.open(activeLogBackup,"rw")){
      activeCopy.write(buffer);
    }
   }
   buffer.flip();
  active=buffer.asCharBuffer().get();
  buffer.clear();
  File currentLog=new File(logBaseFileName.getPath() + "." + active);
  File currentLogBackup=new File(logBaseFileName.getPath() + ".bak." + active);
  try (StoreChannel source=fileSystem.open(currentLog,"r");StoreChannel dest=fileSystem.open(currentLogBackup,"rw")){
    int read=-1;
    do {
      read=source.read(buffer);
      buffer.flip();
      dest.write(buffer);
      buffer.clear();
    }
 while (read == 1024);
  }
   return new NonCleanLogCopy(new FileBackup(activeLog,activeLogBackup,fileSystem),new FileBackup(currentLog,currentLogBackup,fileSystem));
}
