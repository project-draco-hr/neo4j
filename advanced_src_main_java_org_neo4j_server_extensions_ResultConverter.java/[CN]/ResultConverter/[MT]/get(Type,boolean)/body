{
  if (type instanceof Class<?>) {
    Class<?> cls=(Class<?>)type;
    if (allowComplex && Representation.class.isAssignableFrom(cls)) {
      return IDENTITY_RESULT;
    }
 else     if (cls == Node.class) {
      return NODE_RESULT;
    }
 else     if (cls == Relationship.class) {
      return RELATIONSHIP_RESULT;
    }
 else     if (cls == Path.class) {
      return PATH_RESULT;
    }
  }
 else   if (allowComplex && type instanceof ParameterizedType) {
    ParameterizedType parameterizedType=(ParameterizedType)type;
    Class<?> raw=(Class<?>)parameterizedType.getRawType();
    Type paramType=parameterizedType.getActualTypeArguments()[0];
    if (!(paramType instanceof Class<?>)) {
      throw new IllegalStateException("Parameterized result types must have a concrete type parameter.");
    }
    Class<?> param=(Class<?>)paramType;
    if (Iterable.class.isAssignableFrom(raw)) {
      return new ListResult(get(param,false));
    }
  }
  throw new IllegalStateException("Illegal result type: " + type);
}
