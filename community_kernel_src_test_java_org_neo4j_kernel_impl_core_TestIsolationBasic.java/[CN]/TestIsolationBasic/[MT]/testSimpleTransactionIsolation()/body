{
  commit();
  final CountDownLatch latch1=new CountDownLatch(1);
  final CountDownLatch latch2=new CountDownLatch(1);
  Transaction tx=getGraphDb().beginTx();
  Node n1, n2;
  Relationship r1;
  try {
    n1=getGraphDb().createNode();
    n2=getGraphDb().createNode();
    r1=n1.createRelationshipTo(n2,DynamicRelationshipType.withName("TEST"));
    tx.success();
  }
  finally {
    tx.finish();
  }
  final Node node1=n1;
  final Node node2=n2;
  final Relationship rel1=r1;
  tx=getGraphDb().beginTx();
  try {
    node1.setProperty("key","old");
    rel1.setProperty("key","old");
    tx.success();
  }
  finally {
    tx.finish();
  }
  assertPropertyEqual(node1,"key","old");
  assertPropertyEqual(rel1,"key","old");
  assertRelationshipCount(node1,1);
  assertRelationshipCount(node2,1);
  final AtomicReference<Exception> t1Exception=new AtomicReference<>();
  Thread t1=new Thread(new Runnable(){
    public void run(){
      try (Transaction tx=getGraphDb().beginTx()){
        node1.setProperty("key","new");
        rel1.setProperty("key","new");
        node1.createRelationshipTo(node2,DynamicRelationshipType.withName("TEST"));
        assertPropertyEqual(node1,"key","new");
        assertPropertyEqual(rel1,"key","new");
        assertRelationshipCount(node1,2);
        assertRelationshipCount(node2,2);
        latch1.countDown();
        latch2.await();
        assertPropertyEqual(node1,"key","new");
        assertPropertyEqual(rel1,"key","new");
        assertRelationshipCount(node1,2);
        assertRelationshipCount(node2,2);
      }
 catch (      Exception e) {
        e.printStackTrace();
        Thread.interrupted();
        t1Exception.set(e);
      }
 finally {
        try {
          assertPropertyEqual(node1,"key","old");
          assertPropertyEqual(rel1,"key","old");
          assertRelationshipCount(node1,1);
          assertRelationshipCount(node2,1);
        }
 catch (        Exception e) {
          t1Exception.compareAndSet(null,e);
        }
      }
    }
  }
);
  t1.start();
  latch1.await();
  assertPropertyEqual(node1,"key","old");
  assertPropertyEqual(rel1,"key","old");
  assertRelationshipCount(node1,1);
  assertRelationshipCount(node2,1);
  latch2.countDown();
  t1.join();
  assertPropertyEqual(node1,"key","old");
  assertPropertyEqual(rel1,"key","old");
  assertRelationshipCount(node1,1);
  assertRelationshipCount(node2,1);
  if (t1Exception.get() != null) {
    throw t1Exception.get();
  }
  tx=getGraphDb().beginTx();
  try {
    for (    Relationship rel : node1.getRelationships()) {
      rel.delete();
    }
    node1.delete();
    node2.delete();
    tx.success();
  }
  finally {
    tx.finish();
  }
}
