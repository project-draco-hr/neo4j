{
  Predicate<Path> mustBeConnectedToK=new MustBeConnectedToNodeFilter(getNodeWithName("k"));
  Predicate<Path> mustNotHaveMoreThanTwoOutRels=new Predicate<Path>(){
    public boolean accept(    Path item){
      int counter=0;
      String name=(String)item.endNode().getProperty("name",null);
      for (      Relationship rel : item.endNode().getRelationships(Direction.OUTGOING)) {
        counter++;
      }
      return counter <= 2;
    }
  }
;
  TraversalDescription description=Traversal.description().filter(mustBeConnectedToK);
  expectNodes(description.traverse(referenceNode()),"b","c");
  expectNodes(description.filter(mustNotHaveMoreThanTwoOutRels).traverse(referenceNode()),"c");
}
