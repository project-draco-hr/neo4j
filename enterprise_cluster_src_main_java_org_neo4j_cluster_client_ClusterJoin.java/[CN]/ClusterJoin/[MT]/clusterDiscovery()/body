{
  determineUri();
  readClustersXml();
  if (clusters != null) {
    Clusters.Cluster clusterConfig=clusters.getCluster(config.getClusterName());
    if (clusterConfig != null) {
      for (      Clusters.Member member : clusterConfig.getMembers()) {
        URI joinUri=new URI("cluster://" + member.getHost());
        if (!joinUri.equals(serverId)) {
          Future<ClusterConfiguration> config=cluster.join(joinUri);
          try {
            logger.debug("Joined cluster:" + config.get());
            try {
              updateMyInfo();
            }
 catch (            TransformerException e) {
              throw new RuntimeException(e);
            }
            return;
          }
 catch (          InterruptedException e) {
            e.printStackTrace();
          }
catch (          ExecutionException e) {
            logger.debug("Could not join cluster member " + member.getHost());
          }
        }
      }
    }
    if (config.isAllowedToCreateCluster()) {
      if (clusterConfig == null) {
        clusterConfig=new Clusters.Cluster(config.getClusterName());
        clusters.getClusters().add(clusterConfig);
      }
      cluster.create(clusterConfig.getName());
      if (clusterConfig.getByUri(serverId) == null) {
        clusterConfig.getMembers().add(new Clusters.Member(serverId.toString()));
        try {
          updateMyInfo();
        }
 catch (        TransformerException e) {
          logger.warn("Could not update cluster discovery file:" + clustersUri,e);
        }
      }
    }
 else {
      logger.warn("Could not join cluster, and is not allowed to create one");
    }
  }
}
