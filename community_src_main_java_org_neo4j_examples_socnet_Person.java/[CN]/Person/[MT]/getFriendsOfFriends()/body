{
  TraversalDescription travDesc=Traversal.description().depthFirst().relationships(FRIEND).uniqueness(Uniqueness.NODE_GLOBAL).prune(Traversal.pruneAfterDepth(2)).filter(Traversal.returnAllButStartNode());
  return new IterableWrapper<Person,Path>(travDesc.traverse(underlyingNode)){
    @Override protected Person underlyingObjectToObject(    Path path){
      return new Person(path.endNode());
    }
  }
;
}
