{
  for (int i=0; i <= logVersion; i++) {
    File file=mock(File.class);
    when(logFiles.getLogFileForVersion(i)).thenReturn(file);
    StoreChannel channel=mock(StoreChannel.class);
    when(fs.open(file,"rw")).thenReturn(channel);
    final int version=i;
    when(channel.read(any(ByteBuffer.class))).thenAnswer(new Answer<Integer>(){
      @Override public Integer answer(      InvocationOnMock invocationOnMock) throws Throwable {
        ByteBuffer buffer=(ByteBuffer)invocationOnMock.getArguments()[0];
        buffer.putLong(encodeLogVersion(version));
        buffer.putLong(33);
        return LOG_HEADER_SIZE;
      }
    }
);
  }
  when(fs.fileExists(any(File.class))).thenReturn(true);
}
