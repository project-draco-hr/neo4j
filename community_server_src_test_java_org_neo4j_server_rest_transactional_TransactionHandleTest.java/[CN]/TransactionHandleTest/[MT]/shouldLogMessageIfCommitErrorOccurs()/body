{
  TransitionalPeriodTransactionMessContainer kernel=mockKernel();
  TransitionalTxManagementKernelTransaction transactionContext=kernel.newTransaction();
  doThrow(new NullPointerException()).when(transactionContext).commit();
  StringLogger log=mock(StringLogger.class);
  TransactionRegistry registry=mock(TransactionRegistry.class);
  ServerExecutionEngine engine=mock(ServerExecutionEngine.class);
  ExtendedExecutionResult executionResult=mock(ExtendedExecutionResult.class);
  when(engine.execute("query",map())).thenReturn(executionResult);
  when(registry.begin(any(TransactionHandle.class))).thenReturn(1337l);
  TransactionHandle handle=new TransactionHandle(kernel,engine,registry,uriScheme,log);
  ExecutionResultSerializer output=mock(ExecutionResultSerializer.class);
  Statement statement=new Statement("query",map(),false,(ResultDataContent[])null);
  handle.commit(statements(statement),output,false);
  verify(log).error(eq("Failed to commit transaction."),any(NullPointerException.class));
  verify(registry).forget(1337l);
  InOrder outputOrder=inOrder(output);
  outputOrder.verify(output).statementResult(executionResult,false,(ResultDataContent[])null);
  outputOrder.verify(output).errors(argThat(hasErrors(Status.Transaction.CouldNotCommit)));
  outputOrder.verify(output).finish();
  verifyNoMoreInteractions(output);
}
