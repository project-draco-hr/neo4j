{
  final AtomicBoolean fired=new AtomicBoolean();
  FileSystemAbstraction fs=new DelegatingFileSystemAbstraction(efs.get()){
    @Override public StoreChannel open(    File fileName,    String mode) throws IOException {
      return new DelegatingStoreChannel(super.open(fileName,mode)){
        @Override public int read(        ByteBuffer dst) throws IOException {
          Exception stack=new Exception();
          if (containsStackTraceElement(stack,forMethod("initGenerator")) && !containsStackTraceElement(stack,forMethod("createNodeStore"))) {
            fired.set(true);
            throw new IOException("Proving a point here");
          }
          return super.read(dst);
        }
      }
;
    }
  }
;
  try (PageCache pageCache=pageCacheRule.getPageCache(fs)){
    newNodeStore(fs);
    fail("Should fail");
  }
 catch (  Exception e) {
    assertTrue(contains(e,IOException.class));
    assertTrue(fired.get());
  }
}
