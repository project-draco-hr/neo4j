{
  assumeTrue(!osIsWindows());
  int NUMBER_OF_RECORDS=1000000;
  File storeDir=TargetDirectory.forTest(getClass()).makeGraphDbDir();
  Config config=new Config(stringMap(nodestore_mapped_memory_size.name(),mmapSize(NUMBER_OF_RECORDS,NodeStore.RECORD_SIZE),NodeStore.Configuration.use_memory_mapped_buffers.name(),"true",NodeStore.Configuration.store_dir.name(),storeDir.getPath()),NodeStore.Configuration.class);
  DefaultIdGeneratorFactory idGeneratorFactory=new DefaultIdGeneratorFactory();
  StoreFactory storeFactory=new StoreFactory(config,idGeneratorFactory,new DefaultWindowPoolFactory(),new DefaultFileSystemAbstraction(),StringLogger.DEV_NULL,new DefaultTxHook());
  File fileName=new File(storeDir,NeoStore.DEFAULT_NAME + ".nodestore.db");
  storeFactory.createEmptyStore(fileName,storeFactory.buildTypeDescriptorAndVersion(NodeStore.TYPE_DESCRIPTOR));
  NodeStore nodeStore=new NodeStore(fileName,config,idGeneratorFactory,new DefaultWindowPoolFactory(),new DefaultFileSystemAbstraction(),StringLogger.DEV_NULL,null);
  for (int i=0; i < 2 * NUMBER_OF_RECORDS; i++) {
    NodeRecord record=new NodeRecord(nodeStore.nextId(),false,0,0);
    record.setInUse(true);
    nodeStore.updateRecord(record);
  }
  WindowPoolStats stats=nodeStore.getWindowPoolStats();
  nodeStore.close();
  assertEquals(stats.toString(),0,stats.getMissCount());
}
