{
  byte continuation=buffer.readByte();
  Map<Channel,PartialRequest> partialRequests=server.getPartialRequests();
  if (continuation == ChunkingChannelBuffer.CONTINUATION_MORE) {
    PartialRequest partialRequest=partialRequests.get(channel);
    if (partialRequest == null) {
      RequestType type=RequestType.values()[buffer.readByte()];
      SlaveContext context=null;
      if (type.includesSlaveContext()) {
        context=readSlaveContext(buffer);
      }
      Pair<ChannelBuffer,ByteBuffer> targetBuffers=server.mapSlave(channel,context);
      partialRequest=new PartialRequest(type,context,targetBuffers);
      partialRequests.put(channel,partialRequest);
    }
    partialRequest.add(buffer);
    return null;
  }
 else {
    PartialRequest partialRequest=partialRequests.remove(channel);
    RequestType type=null;
    SlaveContext context=null;
    Pair<ChannelBuffer,ByteBuffer> targetBuffers;
    ChannelBuffer bufferToReadFrom=null;
    if (partialRequest == null) {
      type=RequestType.values()[buffer.readByte()];
      if (type.includesSlaveContext()) {
        context=readSlaveContext(buffer);
      }
      targetBuffers=server.mapSlave(channel,context);
      bufferToReadFrom=buffer;
    }
 else {
      type=partialRequest.type;
      context=partialRequest.slaveContext;
      targetBuffers=partialRequest.buffers;
      partialRequest.add(buffer);
      bufferToReadFrom=targetBuffers.first();
    }
    Response<?> response=type.caller.callMaster(realMaster,context,bufferToReadFrom);
    targetBuffers.first().clear();
    ChannelBuffer theBuffer=new ChunkingChannelBuffer(targetBuffers.first(),channel,MAX_FRAME_LENGTH);
    type.serializer.write(response.response(),theBuffer);
    if (type.includesSlaveContext()) {
      writeTransactionStreams(response.transactions(),theBuffer,targetBuffers.other());
    }
    if (type == RequestType.FINISH || type == RequestType.PULL_UPDATES) {
      server.unmapSlave(channel,context);
    }
    return theBuffer;
  }
}
