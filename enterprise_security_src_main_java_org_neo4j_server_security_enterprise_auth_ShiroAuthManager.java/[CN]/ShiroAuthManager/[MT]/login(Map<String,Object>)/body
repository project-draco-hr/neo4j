{
  assertAuthEnabled();
  String username=AuthToken.safeCast(AuthToken.PRINCIPAL,authToken);
  String password=AuthToken.safeCast(AuthToken.CREDENTIALS,authToken);
  ShiroSubject subject=new ShiroSubject(securityManager,AuthenticationResult.FAILURE);
  AuthenticationResult result=AuthenticationResult.FAILURE;
  if (!authStrategy.isAuthenticationPermitted(username)) {
    result=AuthenticationResult.TOO_MANY_ATTEMPTS;
  }
 else {
    UsernamePasswordToken token=new UsernamePasswordToken(username,password);
    try {
      subject=(ShiroSubject)securityManager.login(null,token);
      if (realm.findUser(username).passwordChangeRequired()) {
        result=AuthenticationResult.PASSWORD_CHANGE_REQUIRED;
      }
 else {
        result=AuthenticationResult.SUCCESS;
      }
    }
 catch (    AuthenticationException e) {
      result=AuthenticationResult.FAILURE;
    }
 finally {
      token.clear();
    }
    authStrategy.updateWithAuthenticationResult(result,username);
  }
  return new EnterpriseAuthSubject(this,subject);
}
