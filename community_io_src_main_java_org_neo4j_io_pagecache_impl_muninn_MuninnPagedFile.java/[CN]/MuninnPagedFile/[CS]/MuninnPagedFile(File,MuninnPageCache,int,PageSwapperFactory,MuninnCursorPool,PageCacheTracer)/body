{
  this.pageCache=pageCache;
  this.pageSize=pageSize;
  this.cursorPool=cursorPool;
  this.tracer=tracer;
  translationTables=new PrimitiveLongObjectMap[translationTableStripeLevel];
  translationTableLocks=new StampedLock[translationTableStripeLevel];
  for (int i=0; i < translationTableStripeLevel; i++) {
    translationTables[i]=Primitive.longObjectMap(8);
    translationTableLocks[i]=new StampedLock();
  }
  PageEvictionCallback onEviction=new MuninnPageEvictionCallback(translationTables,translationTableLocks);
  swapper=swapperFactory.createPageSwapper(file,pageSize,onEviction);
  initialiseLastPageId(swapper.getLastPageId());
}
