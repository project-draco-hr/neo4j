{
  FlushEvent flush=null;
  try {
    MuninnPage firstPage=pages[0];
    long startFilePageId=firstPage.getFilePageId();
    for (int j=0; j < pagesGrabbed; j++) {
      pages[j].markAsClean();
    }
    flush=flushOpportunity.beginFlush(startFilePageId,firstPage.getCachePageId(),swapper);
    long bytesWritten=swapper.write(startFilePageId,pages,0,pagesGrabbed);
    flush.addBytesWritten(bytesWritten);
    flush.addPagesFlushed(pagesGrabbed);
    flush.done();
  }
 catch (  IOException ioe) {
    for (int j=0; j < pagesGrabbed; j++) {
      pages[j].markAsDirty();
    }
    if (flush != null) {
      flush.done(ioe);
    }
    throw ioe;
  }
 finally {
    for (int j=0; j < pagesGrabbed; j++) {
      if (forClosing) {
        pages[j].unlockExclusive();
      }
 else {
        pages[j].unlockFreeze();
      }
    }
  }
}
