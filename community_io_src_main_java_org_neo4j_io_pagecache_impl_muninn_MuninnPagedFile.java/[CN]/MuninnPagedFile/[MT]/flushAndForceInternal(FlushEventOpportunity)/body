{
  pageCache.pauseBackgroundFlushTask();
  MuninnPage[] pages=new MuninnPage[translationTableChunkSize];
  long filePageId=-1;
  try {
    for (    Object[] chunk : translationTable) {
      int pagesGrabbed=0;
      for (      Object element : chunk) {
        filePageId++;
        if (element instanceof MuninnPage) {
          MuninnPage page=(MuninnPage)element;
          page.writeLock();
          if (page.isBoundTo(swapper,filePageId) && page.isDirty()) {
            pages[pagesGrabbed]=page;
            pagesGrabbed++;
            continue;
          }
 else {
            page.unlockWrite();
          }
        }
        if (pagesGrabbed > 0) {
          pagesGrabbed=vectoredFlush(pages,pagesGrabbed,flushOpportunity);
        }
      }
      if (pagesGrabbed > 0) {
        vectoredFlush(pages,pagesGrabbed,flushOpportunity);
      }
    }
    swapper.force();
  }
  finally {
    pageCache.unpauseBackgroundFlushTask();
  }
}
