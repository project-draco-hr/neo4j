{
  ClusterManager clusterManager=new ClusterManager(ClusterManager.clusterOfSize(3),TargetDirectory.forTest(getClass()).cleanDirectory("testCluster"),MapUtil.stringMap(HaSettings.tx_push_factor.name(),"2"));
  try {
    clusterManager.start();
    clusterManager.getDefaultCluster().await(ClusterManager.allSeesAllAsAvailable());
    GraphDatabaseAPI master=clusterManager.getDefaultCluster().getMaster();
    try (Transaction tx=master.beginTx()){
      master.index().forNodes("Test");
      tx.success();
    }
     HighlyAvailableGraphDatabase aSlave=clusterManager.getDefaultCluster().getAnySlave();
    try (Transaction tx=aSlave.beginTx()){
      assertThat(aSlave.index().existsForNodes("Test"),equalTo(true));
      tx.success();
    }
     try (Transaction tx=master.beginTx()){
      master.index().forNodes("Test").delete();
      tx.success();
    }
     HighlyAvailableGraphDatabase anotherSlave=clusterManager.getDefaultCluster().getAnySlave();
    try (Transaction tx=anotherSlave.beginTx()){
      assertThat(anotherSlave.index().existsForNodes("Test"),equalTo(false));
      tx.success();
    }
   }
  finally {
    clusterManager.stop();
  }
}
