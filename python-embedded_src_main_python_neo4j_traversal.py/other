from _backend import extends, implements, rel_type, TraverserImpl, Traversal, TraversalDescriptionImpl, strings, Evaluation, Evaluator, Uniqueness, TraversalBranchImpl, BidirectionalTraversalBranchPath, ExtendedPath, SingleNodePath, FinalTraversalBranch, AsOneStartBranch, StartNodeTraversalBranch
from util import PythonicIterator
from core import Direction, DirectionalType
INCLUDE_AND_CONTINUE = Evaluation.INCLUDE_AND_CONTINUE
INCLUDE_AND_PRUNE = Evaluation.INCLUDE_AND_PRUNE
EXCLUDE_AND_CONTINUE = Evaluation.EXCLUDE_AND_CONTINUE
EXCLUDE_AND_PRUNE = Evaluation.EXCLUDE_AND_PRUNE
for PathClass in [TraversalBranchImpl, BidirectionalTraversalBranchPath, ExtendedPath, SingleNodePath, FinalTraversalBranch, AsOneStartBranch, StartNodeTraversalBranch]:


    class IrrelevantClassName(extends(PathClass)):

        @property
        def start(self):
            return self.startNode()

        @property
        def end(self):
            return self.endNode()

        @property
        def last_relationship(self):
            return self.lastRelationship()

        @property
        def nodes(self):
            return self._super__nodes()

        @property
        def relationships(self):
            return self._super__relationships()

        def __repr__(self):
            return self.toString()

        def __len__(self):
            return self.length()

        def __iter__(self):
            it = self.iterator()
            while it.hasNext():
                yield it.next()
del IrrelevantClassName
