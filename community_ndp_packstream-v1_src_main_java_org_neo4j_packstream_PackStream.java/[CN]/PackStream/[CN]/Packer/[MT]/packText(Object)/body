{
  int length=0;
  for (int i=0; i < parts.length; i++) {
    Object part=parts[i];
    if (part instanceof byte[]) {
      length+=packedTextSize((byte[])part);
    }
 else     if (part instanceof Integer) {
      length+=packedTextSize((int)part);
    }
 else     if (part instanceof Long) {
      length+=packedTextSize((long)part);
    }
 else     if (part instanceof String) {
      byte[] utf8=((String)part).getBytes(UTF_8);
      length+=utf8.length;
      parts[i]=utf8;
    }
 else     if (part != null) {
      byte[] utf8=part.toString().getBytes(UTF_8);
      length+=utf8.length;
      parts[i]=utf8;
    }
  }
  packTextHeader(length);
  for (  Object part : parts) {
    if (part instanceof byte[]) {
      packTextPart((byte[])part);
    }
 else     if (part instanceof Integer || part instanceof Long) {
      packTextPart((long)part);
    }
 else {
      throw new PackStreamException("Cannot write " + part.getClass().getName() + " as text part");
    }
  }
}
