{
  assertEmpty(adminSubject,"CALL dbms.createUser('Henrik', 'bar', false)");
  assertEmpty(adminSubject,"CALL dbms.addUserToRole('Henrik', '" + PUBLISHER + "')");
  S henrik=neo.login("Henrik","bar");
  neo.assertAuthenticated(henrik);
  ThreadedTransactionCreate<S> write=new ThreadedTransactionCreate<>(neo);
  write.execute(threading,henrik);
  write.barrier.await();
  assertEmpty(adminSubject,"CALL dbms.removeUserFromRole('Henrik', '" + PUBLISHER + "')");
  write.closeAndAssertException(AuthorizationViolationException.class,"Write operations are not allowed for 'Henrik'.");
  testFailWrite(henrik);
}
