{
  assertEmpty(adminSubject,"CALL dbms.security.createUser('Henrik', 'bar', false)");
  assertEmpty(adminSubject,"CALL dbms.security.addRoleToUser('" + PUBLISHER + "', 'Henrik')");
  S henrik=neo.login("Henrik","bar");
  neo.assertAuthenticated(henrik);
  ThreadedTransactionCreate<S> write=new ThreadedTransactionCreate<>(neo);
  write.execute(threading,henrik);
  write.barrier.await();
  assertEmpty(adminSubject,"CALL dbms.security.removeRoleFromUser('" + PUBLISHER + "', 'Henrik')");
  write.closeAndAssertException(AuthorizationViolationException.class,"Write operations are not allowed for 'Henrik'.");
  testFailWrite(henrik);
}
