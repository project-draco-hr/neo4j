{
  return aggregateLogData(new Extractor(){
    @Override public int extract(    long version) throws IOException {
      int counter=0;
      LogVersionBridge bridge=new LogVersionBridge(){
        @Override public LogVersionedStoreChannel next(        LogVersionedStoreChannel channel) throws IOException {
          return channel;
        }
      }
;
      StoreChannel storeChannel=fs.open(files.getLogFileForVersion(version),"r");
      LogVersionedStoreChannel versionedStoreChannel=PhysicalLogFile.openForVersion(files,fs,version);
      new PhysicalLogVersionedStoreChannel(storeChannel,-1,CURRENT_LOG_VERSION);
      try (ReadableLogChannel channel=new ReadAheadLogChannel(versionedStoreChannel,bridge,1000)){
        try (PhysicalTransactionCursor<ReadableLogChannel> physicalTransactionCursor=new PhysicalTransactionCursor<>(channel,new VersionAwareLogEntryReader<>())){
          while (physicalTransactionCursor.next()) {
            counter++;
          }
        }
       }
       return counter;
    }
  }
);
}
