{
  if (arg instanceof String) {
    builder.append('"');
    escape(builder,arg.toString());
    builder.append('"');
  }
 else   if (arg instanceof Long) {
    builder.append(arg.toString());
    builder.append('l');
  }
 else   if (arg instanceof Integer) {
    builder.append(arg.toString());
  }
 else   if (arg instanceof Double) {
    builder.append(arg.toString());
    builder.append('d');
  }
 else   if (arg instanceof IndexDescriptor) {
    IndexDescriptor descriptor=(IndexDescriptor)arg;
    builder.append(format("new IndexDescriptor( %s, %s )",descriptor.getLabelId(),descriptor.getPropertyKeyId()));
  }
 else   if (arg instanceof UniquenessConstraint) {
    UniquenessConstraint constraint=(UniquenessConstraint)arg;
    builder.append(format("new UniquenessConstraint( %s, %s )",constraint.label(),constraint.propertyKeyId()));
  }
 else {
    throw new IllegalArgumentException(format("Can't handle argument of type: %s with value: %s",arg.getClass(),arg));
  }
}
