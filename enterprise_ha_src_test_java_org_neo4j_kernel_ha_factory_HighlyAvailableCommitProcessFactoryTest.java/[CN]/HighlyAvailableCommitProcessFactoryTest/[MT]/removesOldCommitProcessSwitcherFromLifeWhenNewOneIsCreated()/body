{
  CommitProcessSwitcher oldCommitSwitcher1=newCommitProcessSwitcher();
  CommitProcessSwitcher oldCommitSwitcher2=newCommitProcessSwitcher();
  LifeSupport life=new LifeSupport();
  life.add(oldCommitSwitcher1);
  life.add(oldCommitSwitcher2);
  HighlyAvailableCommitProcessFactory factory=new HighlyAvailableCommitProcessFactory(life,mock(Master.class),mock(TransactionPropagator.class),mock(RequestContextFactory.class),mock(HighAvailabilityModeSwitcher.class));
  TransactionCommitProcess commitProcess=factory.create(mock(TransactionAppender.class),mock(TransactionRepresentationStoreApplier.class),mock(NeoStoreInjectedTransactionValidator.class),mock(IndexUpdatesValidator.class),new Config());
  assertNotNull(commitProcess);
  List<Lifecycle> lifecycle=Iterables.toList(life.getLifecycleInstances());
  assertEquals(1,lifecycle.size());
  assertFalse(lifecycle.contains(oldCommitSwitcher1));
  assertFalse(lifecycle.contains(oldCommitSwitcher2));
}
