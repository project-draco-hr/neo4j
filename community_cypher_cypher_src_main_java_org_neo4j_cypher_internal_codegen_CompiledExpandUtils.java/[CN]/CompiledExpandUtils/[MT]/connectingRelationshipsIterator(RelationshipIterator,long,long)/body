{
  return new RelationshipIterator.BaseIterator(){
    private final RelationshipDataExtractor extractor=new RelationshipDataExtractor();
    @Override public <EXCEPTION extends Exception>boolean relationshipVisit(    long relationshipId,    RelationshipVisitor<EXCEPTION> visitor) throws EXCEPTION {
      visitor.visit(extractor.relationship(),extractor.type(),extractor.startNode(),extractor.endNode());
      return false;
    }
    @Override protected boolean fetchNext(){
      while (allRelationships.hasNext()) {
        allRelationships.relationshipVisit(allRelationships.next(),extractor);
        if (extractor.otherNode(fromNode) == toNode) {
          next=extractor.relationship();
          return true;
        }
      }
      return false;
    }
  }
;
}
