{
  Map<String,Neo4jDriver[]> platforms=new HashMap<String,Neo4jDriver[]>();
  List<TestPermutation> testParameters=new ArrayList<TestPermutation>();
  VMFactory vmf=new VMFactory();
  VirtualMachine windows=vmf.vm(Neo4jVM.WIN_1);
  VirtualMachine ubuntu=vmf.vm(Neo4jVM.UBUNTU_1);
  platforms.put(Platforms.WINDOWS,new Neo4jDriver[]{new WindowsCommunityDriver(windows),new WindowsAdvancedDriver(windows),new WindowsEnterpriseDriver(windows)});
  platforms.put(Platforms.UBUNTU_DEB,new Neo4jDriver[]{new UbuntuDebCommunityDriver(ubuntu),new UbuntuDebAdvancedDriver(ubuntu),new UbuntuDebEnterpriseDriver(ubuntu)});
  platforms.put(Platforms.UBUNTU_TAR_GZ,new Neo4jDriver[]{new UbuntuTarGzCommunityDriver(ubuntu),new UbuntuTarGzAdvancedDriver(ubuntu),new UbuntuTarGzEnterpriseDriver(ubuntu)});
  for (  String platformKey : Platforms.selectedPlatforms()) {
    if (platforms.containsKey(platformKey)) {
      for (      Neo4jDriver d : platforms.get(platformKey)) {
        String name=d.getClass().getSimpleName();
        testParameters.add(new TestPermutation(name,new DefaultMachineModelImpl(d)));
      }
    }
  }
  return testParameters;
}
