{
  if (!displayRelationships) {
    return;
  }
  String directionFilter=parser.options().get("d");
  Direction direction=this.getDirection(directionFilter);
  boolean displayOutgoing=directionFilter == null || direction == Direction.OUTGOING;
  boolean displayIncoming=directionFilter == null || direction == Direction.INCOMING;
  Pattern filterPattern=filter == null ? null : Pattern.compile(filter);
  if (displayOutgoing) {
    for (    Relationship rel : thing.getRelationships(Direction.OUTGOING)) {
      if (filterPattern != null && !filterPattern.matcher(rel.getType().name()).matches()) {
        continue;
      }
      StringBuffer buf=new StringBuffer(getDisplayNameForCurrentNode());
      buf.append(" --[").append(rel.getType().name());
      if (verbose) {
        buf.append(", ").append(rel.getId());
      }
      buf.append("]--> ");
      buf.append(getDisplayNameForNode(rel.getEndNode()));
      out.println(buf);
    }
  }
  if (displayIncoming) {
    for (    Relationship rel : thing.getRelationships(Direction.INCOMING)) {
      if (filterPattern != null && !filterPattern.matcher(rel.getType().name()).matches()) {
        continue;
      }
      StringBuffer buf=new StringBuffer(getDisplayNameForCurrentNode());
      buf.append(" <--[").append(rel.getType());
      if (verbose) {
        buf.append(", ").append(rel.getId());
      }
      buf.append("]-- ");
      buf.append(getDisplayNameForNode(rel.getStartNode()));
      out.println(buf);
    }
  }
}
