{
  elections.put(role,new Election(new WinnerStrategy(){
    @Override public org.neo4j.cluster.InstanceId pickWinner(    Collection<Vote> voteList){
      List<Vote> filteredVoteList=toList(Iterables.filter(new Predicate<Vote>(){
        @Override public boolean accept(        Vote item){
          return !(item.getCredentials() instanceof NotElectableElectionCredentials);
        }
      }
,voteList));
      Collections.sort(filteredVoteList);
      Collections.reverse(filteredVoteList);
      for (      Vote vote : filteredVoteList) {
        if (!vote.getSuggestedNode().equals(demoteNode)) {
          return vote.getSuggestedNode();
        }
      }
      return null;
    }
  }
));
}
