{
  List<NodeLabelUpdate> labelUpdates=new ArrayList<>();
  for (  NodeCommand nodeCommand : nodeCommands.values()) {
    NodeLabels labelFieldBefore=parseLabelsField(nodeCommand.getBefore());
    NodeLabels labelFieldAfter=parseLabelsField(nodeCommand.getAfter());
    if (labelFieldBefore.isInlined() && labelFieldAfter.isInlined() && nodeCommand.getBefore().getLabelField() == nodeCommand.getAfter().getLabelField()) {
      continue;
    }
    long[] labelsBefore=labelFieldBefore.getIfLoaded();
    long[] labelsAfter=labelFieldAfter.getIfLoaded();
    if (labelsBefore == null || labelsAfter == null) {
      continue;
    }
    labelUpdates.add(NodeLabelUpdate.labelChanges(nodeCommand.getKey(),labelsBefore,labelsAfter));
  }
  Collections.sort(labelUpdates,new NodeLabelUpdateNodeIdComparator());
  return labelUpdates;
}
