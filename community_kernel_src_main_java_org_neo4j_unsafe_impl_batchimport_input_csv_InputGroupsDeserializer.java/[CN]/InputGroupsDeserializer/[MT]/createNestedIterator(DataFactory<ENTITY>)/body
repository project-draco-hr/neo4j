{
  closeCurrent();
  Data<ENTITY> data=dataFactory.create(config);
  if (config.multilineFields()) {
    CharSeeker dataStream=charSeeker(data.stream(),config,true);
    Header dataHeader=headerFactory.create(dataStream,config,idType);
    InputEntityDeserializer<ENTITY> input=factory.create(dataHeader,dataStream,data.decorator(),validator);
    currentInput=input;
    currentInputOpen=true;
    input.initialize();
  }
 else {
    currentInput=new ParallelInputEntityDeserializer<>(data,headerFactory,config,idType,maxProcessors,factory,validator,entityClass);
    currentInput.processors(previousInputProcessors);
    currentInputOpen=true;
  }
  return currentInput;
}
