{
  List<Block> blocks=parseBlocks(input);
  EphemeralFileSystemAbstraction fs=new EphemeralFileSystemAbstraction();
  Map<Setting<?>,String> config=new HashMap<>();
  config.put(GraphDatabaseSettings.cypher_runtime,"INTERPRETED");
  GraphDatabaseQueryService database=new GraphDatabaseCypherService(new TestGraphDatabaseFactory().setFileSystem(fs).newImpermanentDatabase(config));
  Connection conn=null;
  TestFailureException failure=null;
  try {
    DocsExecutionEngine engine=new DocsExecutionEngine(database);
    conn=DriverManager.getConnection("jdbc:hsqldb:mem:graphgist;shutdown=true");
    conn.setAutoCommit(true);
    return executeBlocks(blocks,new State(engine,database,conn,parentDirectory,url));
  }
 catch (  TestFailureException exception) {
    dumpStoreFiles(fs,failure=exception,"before-shutdown");
    throw exception;
  }
catch (  SQLException sqlException) {
    throw new RuntimeException(sqlException);
  }
 finally {
    database.getGraphDatabaseService().shutdown();
    if (failure != null) {
      dumpStoreFiles(fs,failure,"after-shutdown");
    }
    if (conn != null) {
      try {
        conn.close();
      }
 catch (      SQLException sqlException) {
        throw new RuntimeException(sqlException);
      }
    }
  }
}
