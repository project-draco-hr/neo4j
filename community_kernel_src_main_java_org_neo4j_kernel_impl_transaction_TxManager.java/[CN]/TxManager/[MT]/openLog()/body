{
  logSwitcherFileName=new File(txLogDir,"active_tx_log");
  txLog1FileName="tm_tx_log.1";
  txLog2FileName="tm_tx_log.2";
  try {
    if (fileSystem.fileExists(logSwitcherFileName)) {
      FileChannel fc=fileSystem.open(logSwitcherFileName,"rw");
      byte fileName[]=new byte[256];
      ByteBuffer buf=ByteBuffer.wrap(fileName);
      fc.read(buf);
      fc.close();
      File currentTxLog=new File(txLogDir,UTF8.decode(fileName).trim());
      if (!fileSystem.fileExists(currentTxLog)) {
        throw logAndReturn("TM startup failure",new TransactionFailureException("Unable to start TM, " + "active tx log file[" + currentTxLog + "] not found."));
      }
      txLog=new TxLog(currentTxLog,fileSystem,log);
      log.logMessage("TM opening log: " + currentTxLog,true);
    }
 else {
      if (fileSystem.fileExists(new File(txLogDir,txLog1FileName)) || fileSystem.fileExists(new File(txLogDir,txLog2FileName))) {
        throw logAndReturn("TM startup failure",new TransactionFailureException("Unable to start TM, " + "no active tx log file found but found either " + txLog1FileName + " or "+ txLog2FileName+ " file, please set one of them as active or "+ "remove them."));
      }
      ByteBuffer buf=ByteBuffer.wrap(txLog1FileName.getBytes("UTF-8"));
      FileChannel fc=fileSystem.open(logSwitcherFileName,"rw");
      fc.write(buf);
      txLog=new TxLog(new File(txLogDir,txLog1FileName),fileSystem,log);
      log.logMessage("TM new log: " + txLog1FileName,true);
      fc.force(true);
      fc.close();
    }
  }
 catch (  IOException e) {
    log.logMessage("Unable to start TM",e);
    throw logAndReturn("TM startup failure",new TransactionFailureException("Unable to start TM",e));
  }
}
