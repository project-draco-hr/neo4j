{
  final List<Message> messages=new ArrayList<Message>(1);
  MessageHolder holder=new MessageHolder(){
    @Override public void offer(    Message<? extends MessageType> message){
      messages.add(message);
    }
  }
;
  ElectionContext context=mock(ElectionContext.class);
  final int version=14;
  Message voteRequest=Message.to(ElectionMessage.vote,URI.create("some://instance"),new ElectionContext.VoteRequest("coordinator",version));
  voteRequest.setHeader(Message.FROM,"some://other");
  election.handle(context,voteRequest,holder);
  assertEquals(1,messages.size());
  Message response=messages.get(0);
  assertEquals(ElectionMessage.voted,response.getMessageType());
  ElectionMessage.VersionedVotedData payload=(ElectionMessage.VersionedVotedData)response.getPayload();
  assertEquals(version,payload.getVersion());
}
