{
  ElectionContext context=mock(ElectionContext.class);
  MessageHolder holder=mock(MessageHolder.class);
  when(context.getLogger(Mockito.<Class>any())).thenReturn(mock(StringLogger.class));
  final String role="master";
  final InstanceId voter=new InstanceId(2);
  Comparable<Object> voteCredentialComparable=new Comparable<Object>(){
    @Override public int compareTo(    Object o){
      return 0;
    }
  }
;
  Message vote=Message.internal(voted,new ElectionMessage.VersionedVotedData(role,voter,voteCredentialComparable,4));
  when(context.voted(role,voter,voteCredentialComparable,4)).thenReturn(false);
  election.handle(context,vote,holder);
  verify(context).getLogger(Matchers.<Class>any());
  verify(context).voted(role,voter,voteCredentialComparable,4);
  verifyNoMoreInteractions(context,holder);
}
