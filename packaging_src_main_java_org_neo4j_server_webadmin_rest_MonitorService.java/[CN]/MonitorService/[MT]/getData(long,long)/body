{
  if (start >= stop || (stop - start) > MAX_TIMESPAN) {
    String message=String.format("Start time must be before stop time, and the total time span can be no bigger than %dms. Time span was %dms.",MAX_TIMESPAN,(stop - start));
    return buildExceptionResponse(Status.BAD_REQUEST,message,new IllegalArgumentException(),JsonRenderers.DEFAULT);
  }
  try {
    FetchRequest request=rrdDb.createFetchRequest(ConsolFun.AVERAGE,start,stop,getResolutionFor(stop - start));
    String entity=JsonRenderers.DEFAULT.render(new RrdDataRepresentation(request.fetchData()));
    return Response.ok(entity,JsonRenderers.DEFAULT.getMediaType()).build();
  }
 catch (  Exception e) {
    return buildExceptionResponse(Status.INTERNAL_SERVER_ERROR,"SEVERE: Round robin IO error.",e,JsonRenderers.DEFAULT);
  }
}
