{
  NodeStore nodeStore=neoStore.getNodeStore();
  long[] nodes={nodeStore.nextId(),nodeStore.nextId(),nodeStore.nextId(),nodeStore.nextId(),nodeStore.nextId(),nodeStore.nextId(),nodeStore.nextId()};
  try (LockGroup lockGroup=new LockGroup()){
    TransactionRecordState tx=newWriteTransaction().first();
    for (int i=1; i < nodes.length - 1; i++) {
      tx.nodeCreate(nodes[i]);
    }
    tx.nodeAddProperty(nodes[3],0,"old");
    tx.nodeAddProperty(nodes[4],0,"old");
    commitProcess().commit(transactionRepresentationOf(tx),lockGroup);
    reset(locks);
  }
   TransactionRecordState tx=newWriteTransaction().first();
  tx.nodeCreate(nodes[0]);
  tx.addLabelToNode(0,nodes[1]);
  tx.nodeAddProperty(nodes[2],0,"value");
  tx.nodeChangeProperty(nodes[3],0,"value");
  tx.nodeRemoveProperty(nodes[4],0);
  tx.nodeDelete(nodes[5]);
  tx.nodeCreate(nodes[6]);
  tx.addLabelToNode(0,nodes[6]);
  tx.nodeAddProperty(nodes[6],0,"value");
  try (LockGroup locks=new LockGroup()){
    commitProcess().commit(transactionRepresentationOf(tx),locks);
  }
   verify(locks,times(1)).acquireNodeLock(nodes[0],LockService.LockType.WRITE_LOCK);
  verify(locks,times(1)).acquireNodeLock(nodes[1],LockService.LockType.WRITE_LOCK);
  verify(locks,times(2)).acquireNodeLock(nodes[2],LockService.LockType.WRITE_LOCK);
  verify(locks,times(1)).acquireNodeLock(nodes[3],LockService.LockType.WRITE_LOCK);
  verify(locks,times(2)).acquireNodeLock(nodes[4],LockService.LockType.WRITE_LOCK);
  verify(locks,times(1)).acquireNodeLock(nodes[5],LockService.LockType.WRITE_LOCK);
  verify(locks,times(2)).acquireNodeLock(nodes[6],LockService.LockType.WRITE_LOCK);
}
