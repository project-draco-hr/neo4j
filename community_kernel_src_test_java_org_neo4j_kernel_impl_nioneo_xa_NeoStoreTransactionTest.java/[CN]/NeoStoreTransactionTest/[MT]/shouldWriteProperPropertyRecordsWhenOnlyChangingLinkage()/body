{
  TransactionRecordState tx=newWriteTransaction().first();
  int nodeId=0;
  tx.nodeCreate(nodeId);
  int index=0;
  tx.nodeAddProperty(nodeId,index,string(70));
  commitProcess().commit(transactionRepresentationOf(tx));
  Visitor<Command,IOException> verifier=new NeoCommandHandler.HandlerVisitor(new NeoCommandHandler.Adapter(){
    @Override public boolean visitPropertyCommand(    PropertyCommand command) throws IOException {
      verifyPropertyRecord(command.getBefore());
      verifyPropertyRecord(command.getAfter());
      return true;
    }
    private void verifyPropertyRecord(    PropertyRecord record){
      if (record.getPrevProp() != Record.NO_NEXT_PROPERTY.intValue()) {
        for (        PropertyBlock block : record.getPropertyBlocks()) {
          assertTrue(block.isLight());
        }
      }
    }
  }
);
  tx=newWriteTransaction(mockIndexing).first();
  int index2=1;
  tx.nodeAddProperty(nodeId,index2,string(40));
  PhysicalTransactionRepresentation representation=transactionRepresentationOf(tx);
  representation.accept(verifier);
  commitProcess().commit(representation);
}
