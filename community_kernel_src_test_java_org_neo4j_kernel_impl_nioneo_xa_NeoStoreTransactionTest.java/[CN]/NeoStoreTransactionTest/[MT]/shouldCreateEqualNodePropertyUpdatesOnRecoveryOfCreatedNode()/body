{
  long nodeId=0;
  int labelId=5, propertyKeyId=7;
  NodePropertyUpdate expectedUpdate=NodePropertyUpdate.add(nodeId,propertyKeyId,"Neo",new long[]{labelId});
  long ruleId=0;
  NeoStoreTransaction tx=newWriteTransaction(mockIndexing).first();
  SchemaRule rule=indexRule(ruleId,labelId,propertyKeyId,PROVIDER_DESCRIPTOR);
  tx.createSchemaRule(rule);
  prepareAndCommit(tx);
  IndexingService index=mock(IndexingService.class);
  IteratorCollector<NodePropertyUpdate> indexUpdates=new IteratorCollector<>(0);
  doAnswer(indexUpdates).when(index).updateIndexes(any(IndexUpdates.class));
  CommandCapturingVisitor commandCapturingVisitor=new CommandCapturingVisitor();
  tx=newWriteTransaction(index,commandCapturingVisitor).first();
  tx.nodeCreate(nodeId);
  tx.addLabelToNode(labelId,nodeId);
  tx.nodeAddProperty(nodeId,propertyKeyId,"Neo");
  prepareAndCommit(tx);
  verify(index,times(1)).updateIndexes(any(IndexUpdates.class));
  indexUpdates.assertContent(expectedUpdate);
  reset(index);
  indexUpdates=new IteratorCollector<>(0);
  doAnswer(indexUpdates).when(index).updateIndexes(any(IndexUpdates.class));
  tx=newWriteTransaction(index).first();
  commandCapturingVisitor.injectInto(tx);
  prepareAndCommitRecovered(tx);
  verify(index,times(1)).updateIndexes(any(IndexUpdates.class));
  indexUpdates.assertContent(expectedUpdate);
}
