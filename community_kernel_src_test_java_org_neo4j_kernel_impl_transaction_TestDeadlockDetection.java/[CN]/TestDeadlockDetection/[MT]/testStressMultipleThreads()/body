{
  for (int i=0; i < StressThread.resources.length; i++) {
    StressThread.resources[i]=new ResourceObject("RX" + i);
  }
  StressThread stressThreads[]=new StressThread[50];
  PlaceboTm tm=new PlaceboTm(null,null);
  LockManager lm=new LockManagerImpl(new RagManager());
  tm.setLockManager(lm);
  CountDownLatch startSignal=new CountDownLatch(1);
  for (int i=0; i < stressThreads.length; i++) {
    int numberOfIterations=100;
    int depthCount=10;
    float readWriteRatio=0.80f;
    stressThreads[i]=new StressThread("T" + i,numberOfIterations,depthCount,readWriteRatio,lm,startSignal);
  }
  for (  Thread thread : stressThreads) {
    thread.start();
  }
  startSignal.countDown();
  long end=currentTimeMillis() + SECONDS.toMillis(10);
  boolean anyAlive;
  while ((anyAlive=anyAliveAndAllWell(stressThreads)) && currentTimeMillis() < end) {
    throwErrors(stressThreads);
    sleepALittle();
  }
  if (anyAlive) {
    StringBuilder builder=new StringBuilder();
    for (    StressThread stressThread : stressThreads) {
      if (stressThread.isAlive()) {
        for (        StackTraceElement element : stressThread.getStackTrace()) {
          builder.append(element.toString()).append("\n");
        }
      }
      builder.append("\n");
    }
    fail("Expected all thread to be finished, but some were lingering. These are the bad boys:\n" + builder.toString());
  }
}
